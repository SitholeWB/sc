{"version":3,"sources":["screens/Period.js","screens/PeriodTime.js","screens/PeriodDay.js","shared/Urls.js","redux/actions/calenderActions.js","screens/Timetable.js","screens/PeriodDetails.js","redux/actions/universityActions.js","screens/ActivitySpinner.js","screens/University.js","screens/Campus.js","redux/actions/campusActions.js","screens/Course.js","screens/Chats.js","screens/Notes.js","redux/actions/noteActions.js","screens/MediaCard.js","redux/actions/commentActions.js","screens/CommentCard.js","screens/Comments.js","redux/actions/bookmarkActions.js","redux/actions/uploadActions.js","screens/PostCard.js","redux/actions/postActions.js","screens/Posts.js","redux/actions/userActions.js","screens/GenericFileCard.js","screens/Bookmarks.js","App.js","serviceWorker.js","redux/reducers/calenderReducer.js","redux/reducers/feedbackReducer.js","redux/actions/feedbackActions.js","redux/reducers/campusesReducer.js","redux/reducers/universitiesReducer.js","redux/reducers/bookmarkReducer.js","redux/reducers/uploadReducer.js","redux/reducers/commentReducer.js","redux/reducers/postReducer.js","redux/reducers/noteReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store/store.js","index.js"],"names":["Period","classes","this","props","period","isEmptySlot","Grid","item","xs","style","backgroundColor","bColor","Paper","onClick","history","push","className","paper","height","width","whiteSpace","color","backgroungColor","fontWeight","courseCode","fontSize","venueName","Component","withStyles","theme","root","flexGrow","padding","spacing","textAlign","palette","text","secondary","withRouter","PeriodTime","startTime","hour","minutes","endTime","PeriodDay","day","BASE_URL_CoursesAPI","BASE_URL_PostsAPI","receiveModules","data","type","receiveCalender","setUniversity","university","fetchUniversityFromBackEnd","universityId","url","dispatch","fetch","method","headers","then","response","json","catch","err","id","name","adsDetails","bannerAd","nativeAdvancedAd","getTimetable","body","getState","calenderReducer","mustRefreshCalender","JSON","stringify","coursesIds","error","fetchCalender","timetable","Timetable","count","timetableView","map","timetableRow","key","periodSlotId","container","monday","tuesday","wednesday","thursday","friday","minHeight","borderRadius","addModule","undefined","timetablePerCampus","courses","course","getCalender","getOrUpdateTimetable","connect","state","PeriodDetails","hasConflict","location","Card","CardActionArea","CardContent","Typography","gutterBottom","variant","component","courseName","Divider","CardActions","Button","size","goToChat","deletePeriod","resolveConflict","periodId","setState","removePeriod","courseId","fetchUniversities","ActivitySpinner","display","justifyContent","alignItems","CircularProgress","disableShrink","University","universitiesView","universities","resultValue","ListItem","listItem","dense","button","goToCampusesOrModules","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","isFetching","List","universitiesReducer","updateUniversity","Campus","campuses","goToModules","campus","params","match","fetchCampuses","campusesReducer","Course","searchText","doneSearching","hasPressedSearch","searchResultsView","showSnackbar","snackbarText","isSearching","searchResults","code","getActionButton","coursesView","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","handleClose","message","autoHideDuration","action","Fragment","length","TextField","label","margin","placeholder","fullWidth","onChange","onChangeSearchText","value","InputLabelProps","shrink","searchModule","target","searchModules","routeType","coursesAlreadyExists","courseExists","addCourse","removeCourse","newCourses","fetchAndSetUniversity","removeModule","hasErrorSearching","campusId","routPath","fetchSearchModules","Chats","openPosts","postId","getNumberOfUnreadMessages","Notes","title","isEdit","actionType","noteToView","dateCreated","Date","createdDate","displayDateCreated","toDateString","toLocaleTimeString","dateModified","lastModifiedDate","displayDateModified","nameHeader","dates","toString","onChangeTitleText","multiline","rows","onChangeBodyText","containerActions","addOrEditNote","notesView","notes","viewNote","deleteNote","replace","c","r","Math","random","note","noteToEdit","createGuid","addNote","updateNote","removeNote","noteReducer","noteId","flexWrap","flexDirection","mainContainer","MediaCard","isVideoOrAudio","file","contentType","includes","isImage","playing","controls","src","Chip","icon","clickable","openFile","deleteIcon","playerWrapper","position","paddingTop","reactPlayer","top","left","fetchCommentsForPost","console","log","CommentCard","post","totalLikes","date","comment","addedDate","displayDate","CardHeader","avatar","Avatar","getUserFullNames","subheader","files","disableSpacing","likeButtonBackgroundColor","handlePostLike","likes","addedBy","fullnames","likeCommentById","user","exist","list","i","userId","commentText","addPostPending","fileIsAttached","AddComment","showAddComment","showComments","totalComments","uploadFileToStorage","documentObject","uploadResponse","fileName","likeText","existOnLikes","userReducer","commentId","media","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","Comments","isFetchingComments","commentsView","comments","fetchComments","commentReducer","addBookmark","removeBookmark","fileObject","formData","FormData","append","BASE_URL_FilesAPI","uploadFileResponse","errorUploadingFile","PostCard","fileUpload","React","createRef","showFileUpload","bind","onFileChange","cardStyle","toggleShowAddComment","handleBookmarkClick","bookmarkButtonBackgroundColor","toggleComments","onChangeText","postText","ref","onDelete","removeFile","sentComment","containerComments","e","current","click","likePostById","existOnBookmarks","bookmarkedPosts","bookmarkReducer","uploadReducer","percent","isUploadingFile","removeAllBookmark","obj","Posts","noMorePosts","isFetchingPosts","posts","sendPost","loadMorePosts","fetchGetPosts","resetPosts","postReducer","categoryId","getPosts","addUpdateUser","removeFileButton","removeFileCustomBtnBG","alignSelf","addModuleButton","addModuleCustomBtnBG","GenericFileCard","iFrameHeight","allowFullScreen","window","innerHeight","Bookmarks","nextStartLoadDate","postsView","Google","client","slot","App","newValue","exact","path","BottomNavigation","showLabels","bottom","BottomNavigationAction","Link","to","changeValue","Boolean","hostname","initialState","hasHttpError","emptyPeriod","slots","Array","forEach","element","getTimetableWithResolvedConflictForGivenPeriod","conflictsHasPeriodId","conflicts","isFound","filter","feedbackReducer","hasHttpErrorFetchingComments","likeCommentPendingResponse","hasHttpErrorLikingComment","postCommentPending","hasHttpErrorPostingComment","hasHttpErrorFetchingPosts","likePostPendingResponse","hasHttpErrorLikingPost","hasHttpErrorAddingPost","appendOrReplacePosts","oldPosts","newPosts","updateNotes","newNote","newNotes","rootReducer","combineReducers","persistConfig","storage","localForage","whitelist","blacklist","persistedReducer","persistReducer","store","createStore","applyMiddleware","createLogger","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.953b7b0f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Period extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        if (this.props.period.isEmptySlot === false || this.props.period.isEmptySlot === 'false') {\r\n            return (\r\n                <Grid item xs={2} style={{ backgroundColor: this.props.bColor }}>\r\n                    <Paper onClick={() => { this.props.history.push(\"/PeriodDetails\", { period: this.props.period }) }} className={classes.paper} style={{ height: '100%', width: '100%', whiteSpace: 'unset', backgroundColor: this.props.period.color.backgroungColor }}>\r\n                        <span style={{ fontWeight: 'bold' }}> {this.props.period.courseCode}</span>\r\n                        <br />\r\n                        <span style={{ fontSize: 7 }}> {this.props.period.venueName}</span>\r\n                    </Paper>\r\n                </Grid>\r\n            )\r\n        } else {\r\n            return (\r\n                <Grid item xs={2} style={{ height: '100%', width: '100%', backgroundColor: this.props.bColor }}>\r\n                    <Paper className={classes.paper} style={{ height: '100%', width: '100%', backgroundColor: this.props.bColor }}></Paper>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 10,\r\n    },\r\n});\r\n\r\n//exports\r\nexport default (withStyles(useStyles)(withRouter(Period)));","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Screen: Counter\r\nclass PeriodTime extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Grid item xs={2} style={{ height: '100%', width: '100%' }}>\r\n                <Paper className={classes.paper} style={{ height: '100%', width: '100%' }}>\r\n                    <span style={{ fontWeight: 'bold' }}>{this.props.startTime.hour}:{this.props.startTime.minutes}</span>\r\n                    <br />\r\n                    To\r\n                    <br />\r\n                    <span style={{ fontWeight: 'bold' }}>{this.props.endTime.hour}:{this.props.endTime.minutes}</span>\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n// Styles\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 10,\r\n    },\r\n});\r\nexport default withStyles(styles)(PeriodTime);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Screen: Counter\r\nclass PeriodDay extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Grid item xs={2} style={{ height: '100%', width: '100%', }}>\r\n                <Paper className={classes.paper} style={{ height: '100%', width: '100%' }}>\r\n                    <span style={{ fontWeight: 'bold' }}>{this.props.day}</span>\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n// Styles\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 10,\r\n        backgroundColor: '#9fd1d1'\r\n    },\r\n});\r\nexport default withStyles(styles)(PeriodDay);","export const BASE_URL_CoursesAPI = 'http://sitholewb.co.za/CoursesAPI/api/';\r\nexport const BASE_URL_PostsAPI = 'http://sitholewb.co.za/PostsAPI/api/';\r\nexport const BASE_URL_FilesAPI = 'http://sitholewb.co.za/FilesAPI/api/';","\r\nimport { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const REQUEST_CALENDER = 'REQUEST_CALENDER';\r\nexport const RECEIVE_CALENDER = 'RECEIVE_CALENDER';\r\nexport const ERROR_REQUESTING_CALENDER = 'ERROR_REQUESTING_CALENDER';\r\nexport const REPORT_CALENDER = 'REPORT_CALENDER';\r\nexport const ADD_MODULE = 'ADD_MODULE';\r\nexport const REMOVE_MODULE = 'REMOVE_MODULE';\r\nexport const GET_CALENDER = 'GET_CALENDER';\r\nexport const REMOVE_PERIOD = 'REMOVE_PERIOD';\r\nexport const RESOLVE_CONFLICT = 'RESOLVE_CONFLICT';\r\nexport const SEARCH_MODULES = 'SEARCH_MODULES';\r\nexport const RECEIVE_MODULES = 'RECEIVE_MODULES';\r\nexport const ERROR_RECEIVING_MODULES = 'ERROR_RECEIVING_MODULES';\r\nexport const GET_UNREAD_MESSAGES_COUNT = 'GET_UNREAD_MESSAGES_COUNT';\r\nexport const SET_UNIVERSITY = 'SET_UNIVERSITY';\r\n\r\n\r\nexport const receiveModules = (data) => ({\r\n    type: RECEIVE_MODULES,\r\n    data: data\r\n});\r\n\r\nexport const searchModules = () => ({\r\n    type: SEARCH_MODULES\r\n});\r\n\r\nexport const errorReceivingModules = (error) => ({\r\n    type: ERROR_RECEIVING_MODULES,\r\n    error: error\r\n});\r\n\r\nexport const requestCalender = (data) => ({\r\n    type: REQUEST_CALENDER,\r\n    data: data\r\n});\r\n\r\nexport const getCalender = () => ({\r\n    type: GET_CALENDER\r\n});\r\n\r\nexport const receiveCalender = (data) => ({\r\n    type: RECEIVE_CALENDER,\r\n    data: data\r\n});\r\n\r\nexport const errorRequestingCalender = (error) => ({\r\n    type: REQUEST_CALENDER,\r\n    error: error\r\n});\r\n\r\nexport const reportCalender = (data) => ({\r\n    type: REPORT_CALENDER,\r\n    data: data\r\n});\r\n\r\nexport const addModule = (course) => ({\r\n    type: ADD_MODULE,\r\n    course: course\r\n});\r\n\r\nexport const getNumberOfUnreadMessages = (courses) => ({\r\n    type: GET_UNREAD_MESSAGES_COUNT,\r\n    courses: courses\r\n});\r\n\r\nexport const removeModule = (courseId) => ({\r\n    type: REMOVE_MODULE,\r\n    courseId: courseId\r\n});\r\n\r\nexport const removePeriod = (periodId) => ({\r\n    type: REMOVE_PERIOD,\r\n    periodId: periodId\r\n});\r\n\r\nexport const resolveConflict = (periodId, course) => ({\r\n    type: RESOLVE_CONFLICT,\r\n    periodId: periodId,\r\n    course: course\r\n});\r\n\r\nexport const setUniversity = (university) => ({\r\n    type: SET_UNIVERSITY,\r\n    university: university\r\n});\r\n\r\nexport function fetchUniversityFromBackEnd(universityId) {\r\n    var url = BASE_URL_CoursesAPI + 'Universities/' + universityId;\r\n    return dispatch => {\r\n        dispatch(searchModules());\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(setUniversity(json));\r\n            }).catch(err => {\r\n                dispatch(setUniversity({\r\n                    id: '0000-0000-000000000000',\r\n                    name: 'Your Institution',\r\n                    adsDetails: {\r\n                        bannerAd: 'ca-app-pub-5631714136940575/3298705317',\r\n                        nativeAdvancedAd: 'ca-app-pub-5631714136940575/4838053665'\r\n                    }\r\n                }));\r\n            });\r\n    }\r\n}\r\n\r\nexport function fetchSearchModules(campusId, body, routPath) {\r\n    var url = BASE_URL_CoursesAPI + 'Courses/' + routPath + '/' + campusId + '/search';\r\n    return dispatch => {\r\n        dispatch(searchModules());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(receiveModules(json));\r\n            }).catch(err => {\r\n                dispatch(errorReceivingModules(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function fetchCalender(body) {\r\n    var url = BASE_URL_CoursesAPI + 'Timetable/universities/' + body.universityId + '/slots';\r\n    return dispatch => {\r\n        dispatch(requestCalender());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body.coursesIds),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(receiveCalender(json));\r\n            }).catch(err => {\r\n                dispatch(errorRequestingCalender(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function getTimetable(body) {\r\n    return (dispatch, getState) => {\r\n        if (body.universityId === '0000-0000-000000000000') {\r\n            return dispatch(receiveCalender([]));\r\n        }\r\n        const mustRefreshCalender = getState().calenderReducer.mustRefreshCalender;\r\n        if (mustRefreshCalender === true) {\r\n            return dispatch(fetchCalender(body))\r\n        } else {\r\n            dispatch(getCalender());\r\n            var timetable = getState().calenderReducer.timetable;\r\n            return dispatch(receiveCalender(timetable));\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchAndSetUniversity(universityId) {\r\n    return (dispatch, getState) => {\r\n        const university = getState().calenderReducer.university;\r\n        if (university === null) {\r\n            return dispatch(fetchUniversityFromBackEnd(universityId))\r\n        } else if (university.id !== universityId && universityId !== '0000-0000-000000000000') {\r\n            return dispatch(fetchUniversityFromBackEnd(universityId))\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Period from './Period';\r\nimport PeriodTime from './PeriodTime';\r\nimport PeriodDay from './PeriodDay';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Imports: Redux Actions\r\nimport { getTimetable } from '../redux/actions/calenderActions';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 10,\r\n    },\r\n});\r\n\r\nclass Timetable extends Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        let count = 0;\r\n        let bColor = '#f1f1f1';\r\n        const timetableView = this.props.timetable.map((timetableRow) => {\r\n            count++;\r\n            if (count % 2 === 0) {\r\n                bColor = '#e0ebeb'\r\n            } else {\r\n                bColor = '#f1f1f1';\r\n            }\r\n            return (\r\n                <Grid key={timetableRow.periodSlotId} container item xs={12} spacing={1} style={{ backgroundColor: bColor }}>\r\n                    <PeriodTime key={'times_' + timetableRow.periodSlotId} bColor={bColor} startTime={timetableRow.startTime} endTime={timetableRow.endTime} />\r\n                    <Period key={'monday_' + timetableRow.periodSlotId} bColor={bColor} period={timetableRow.monday} />\r\n                    <Period key={'tuesday_' + timetableRow.periodSlotId} bColor={bColor} period={timetableRow.tuesday} />\r\n                    <Period key={'wednesday_' + timetableRow.periodSlotId} bColor={bColor} period={timetableRow.wednesday} />\r\n                    <Period key={'thursday_' + timetableRow.periodSlotId} bColor={bColor} period={timetableRow.thursday} />\r\n                    <Period key={'friday_' + timetableRow.periodSlotId} bColor={bColor} period={timetableRow.friday} />\r\n                </Grid>\r\n            )\r\n        });\r\n        return (\r\n            <div className={classes.root}>\r\n                <div>\r\n                    <span style={{ color: 'red', fontWeight: 'bold', fontSize: 11 }}>NOTE: </span>\r\n                    <span style={{ color: 'red', fontSize: 11 }}>It your responsibility to confirm/validate timetable below!</span>\r\n                </div>\r\n                <br />\r\n                <Grid container spacing={1}>\r\n                    <Grid key={'row_days'} container item xs={12} spacing={1} style={{ backgroundColor: bColor }}>\r\n                        <Grid item xs={2} style={{ height: '100%', width: '100%', minHeight: 30 }}>\r\n                            <Paper className={classes.paper} style={{ height: '100%', width: '100%', backgroundColor: 'green', borderRadius: 20 }}\r\n                                onClick={() => { this.addModule() }}\r\n                            >\r\n                                <span style={{ fontWeight: 'bold' }}>Add Module</span>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <PeriodDay key={'monday_'} bColor={bColor} day={'Mon'} />\r\n                        <PeriodDay key={'tuesday_'} bColor={bColor} day={'Tue'} />\r\n                        <PeriodDay key={'wednesday_'} bColor={bColor} day={'Wed'} />\r\n                        <PeriodDay key={'thursday_'} bColor={bColor} day={'Thur'} />\r\n                        <PeriodDay key={'friday_'} bColor={bColor} day={'Fri'} />\r\n                    </Grid>\r\n                    {timetableView}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addModule() {\r\n        if (this.props.university === null || this.props.university === undefined || this.props.university.id === undefined\r\n            || this.props.university.id === '' || this.props.university.id === '0000-0000-000000000000') {\r\n            this.props.history.push('/University')\r\n        } else if (this.props.university.timetablePerCampus === true || this.props.university.timetablePerCampus === 'true') {\r\n            this.props.history.push('/Campus/' + this.props.university.id)\r\n        } else {\r\n            this.props.history.push('/institutions/' + this.props.university.id + '/type/universities')\r\n        }\r\n    }\r\n    getOrUpdateTimetable() {\r\n        if (this.props.university === null || this.props.university === undefined || this.props.university.id === '' ||\r\n            this.props.university.id === undefined || this.props.university.id === '0000-0000-000000000000') {\r\n            return;\r\n        }\r\n        let coursesIds = [];\r\n        for (let course of this.props.courses) {\r\n            coursesIds.push(course.id);\r\n        }\r\n        this.props.getCalender({\r\n            universityId: this.props.university.id,\r\n            coursesIds: coursesIds\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.getOrUpdateTimetable();\r\n    }\r\n    componentDidMount() {\r\n        this.getOrUpdateTimetable();\r\n    }\r\n\r\n}\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        timetable: state.calenderReducer.timetable,\r\n        university: state.calenderReducer.university,\r\n        courses: state.calenderReducer.courses\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        getCalender: (body) => dispatch(getTimetable(body))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(Timetable)));\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n// Imports: Redux Actions\r\nimport { resolveConflict, removePeriod } from '../redux/actions/calenderActions';\r\n\r\n// Screen: PeriodDetails\r\nclass PeriodDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hasConflict: false,\r\n            period: {}\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { state } = this.props.location;\r\n        return (\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                    <CardContent>\r\n                        <Typography style={{ textAlign: 'center' }} gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {state.period.courseCode}\r\n                        </Typography>\r\n                        <Typography style={{ textAlign: 'center' }} variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n                            {state.period.courseName}\r\n                        </Typography>\r\n                        <Divider />\r\n                        <Typography>\r\n                            <br />\r\n                            <br />\r\n                        </Typography>\r\n                        <Typography style={{ textAlign: 'center' }} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            <span style={{ fontWeight: 'bold' }}>Venue: </span> {state.period.venueName}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button size=\"small\" variant=\"contained\" onClick={() => { this.props.history.push('/') }}>\r\n                        Back to Timetable\r\n                    </Button>\r\n                    <Button size=\"small\" variant=\"contained\" onClick={() => { this.goToChat() }}>\r\n                        Open Chatroom\r\n                    </Button>\r\n                    <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => { this.deletePeriod() }}>\r\n                        Delete Period\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    updatePeriod(period) {\r\n        this.props.resolveConflict(period.periodId, period);\r\n        this.setState({ hasConflict: false });\r\n    }\r\n\r\n    deletePeriod() {\r\n        this.props.removePeriod(this.state.period.periodId);\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    goToChat() {\r\n        this.props.history.push('/Posts/' + this.state.period.courseId + '/code/' + this.state.period.courseCode);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { state } = this.props.location;\r\n        this.setState({ hasConflict: state.period.hasConflict, period: state.period });\r\n    }\r\n}\r\n\r\n// Styles\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 10,\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        courses: state.calenderReducer.courses,\r\n        university: state.calenderReducer.university\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action \r\n    return {\r\n        resolveConflict: (periodId, course) => dispatch(resolveConflict(periodId, course)),\r\n        removePeriod: (periodId) => dispatch(removePeriod(periodId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(PeriodDetails)));","import { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const GET_UNIVERSITIES = 'GET_UNIVERSITIES';\r\nexport const RECEIVE_UNIVERSITIES = 'RECEIVE_UNIVERSITIES';\r\nexport const ERROR_GETTING_UNIVERSITIES = 'ERROR_GETTING_UNIVERSITIES';\r\n\r\nexport const getUniversities = () => ({\r\n    type: GET_UNIVERSITIES\r\n});\r\n\r\nexport const receiveUniversities = (data) => ({\r\n    type: RECEIVE_UNIVERSITIES,\r\n    data: data\r\n});\r\n\r\nexport const errorReceivingUniversities = (error) => ({\r\n    type: ERROR_GETTING_UNIVERSITIES,\r\n    error: error\r\n});\r\n\r\nfunction fetchUniversitiesFromAPI() {\r\n    var url = BASE_URL_CoursesAPI + 'universities';\r\n    return dispatch => {\r\n        dispatch(getUniversities());\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(receiveUniversities(json));\r\n            }).catch(err => {\r\n                dispatch(errorReceivingUniversities(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function fetchUniversities() {\r\n    return (dispatch, getState) => {\r\n        var university = getState().calenderReducer.university;\r\n        if (university === null || university === undefined || university.id === undefined ||\r\n            university.id === '' || university.id === '0000-0000-000000000000') {\r\n            return dispatch(fetchUniversitiesFromAPI());\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst ActivitySpinner = (props) => {\r\n  let size = 100;\r\n  if (props.size !== undefined) {\r\n    size = props.size;\r\n  }\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n      <CircularProgress disableShrink size={size} />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default ActivitySpinner;","// Imports: Dependencies\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Imports: Redux Actions\r\nimport { setUniversity } from '../redux/actions/calenderActions';\r\nimport { fetchUniversities } from '../redux/actions/universityActions';\r\n\r\n//import screens\r\nimport ActivitySpinner from './ActivitySpinner'\r\n\r\nclass University extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        const universitiesView = this.props.universities.map((resultValue) => {\r\n            return (\r\n                <span key={'span_' + resultValue.id}>\r\n                    <ListItem className={classes.listItem} key={resultValue.id} dense button onClick={() => { this.goToCampusesOrModules(resultValue) }}>\r\n                        <ListItemText id={'text_' + resultValue.id} primary={resultValue.name} />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                <SchoolIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                </span>\r\n            )\r\n        });\r\n        if (this.props.isFetching === true || this.props.isFetching === 'true') {\r\n            return (\r\n                <ActivitySpinner />\r\n            )\r\n        } else {\r\n            return (\r\n                <List className={classes.root}>\r\n                    <span>Click your institution below.</span>\r\n                    <br />\r\n                    <Divider />\r\n                    <br />\r\n                    {universitiesView}\r\n                </List>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    goToCampusesOrModules(university) {\r\n        setUniversity(university);\r\n        if (university.timetablePerCampus === true || university.timetablePerCampus === 'true') {\r\n            this.props.history.push('/Campus/' + university.id)\r\n        } else {\r\n            this.props.history.push('/institutions/' + university.id + '/type/universities')\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUniversities();\r\n    }\r\n\r\n}\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    listItem: {\r\n        width: '100%',\r\n        backgroundColor: '#f9ecf2'\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        universities: state.universitiesReducer.universities,\r\n        isFetching: state.universitiesReducer.isFetching,\r\n        error: state.universitiesReducer.error\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        fetchUniversities: () => dispatch(fetchUniversities()),\r\n        updateUniversity: (university) => dispatch(setUniversity(university))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(withRouter(University)));","// Imports: Dependencies\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// Imports: Redux Actions\r\nimport { fetchCampuses } from '../redux/actions/campusActions';\r\n\r\n//import screens\r\nimport ActivitySpinner from './ActivitySpinner'\r\n\r\n\r\nclass Campus extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        const universitiesView = this.props.campuses.map((resultValue) => {\r\n            return (\r\n                <span key={'span_' + resultValue.id}>\r\n                    <ListItem className={classes.listItem} key={resultValue.id} dense button onClick={() => { this.goToModules(resultValue) }}>\r\n                        <ListItemText id={'text_' + resultValue.id} primary={resultValue.name} />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                <SchoolIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                </span>\r\n            )\r\n        });\r\n        if (this.props.isFetching === true || this.props.isFetching === 'true') {\r\n            return (\r\n                <ActivitySpinner />\r\n            )\r\n        } else {\r\n            return (\r\n                <List>\r\n                    <Divider />\r\n                    < span >Click your campus below.</span>\r\n                    <Divider />\r\n                    {universitiesView}\r\n                </List>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    goToModules(campus) {\r\n        this.props.history.push('/institutions/' + campus.id + '/type/campuses')\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        this.props.fetchCampuses(params.id);\r\n    }\r\n\r\n}\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    listItem: {\r\n        width: '100%',\r\n        backgroundColor: '#f9ecf2'\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        campuses: state.campusesReducer.campuses,\r\n        isFetching: state.campusesReducer.isFetching,\r\n        error: state.campusesReducer.error\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        fetchCampuses: (id) => dispatch(fetchCampuses(id))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Campus));","import { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const GET_CAMPUSES = 'GET_CAMPUSES';\r\nexport const RECEIVE_CAMPUSES = 'RECEIVE_CAMPUSES';\r\nexport const ERROR_GETTING_CAMPUSES = 'ERROR_GETTING_CAMPUSES';\r\n\r\nexport const getCampuses = () => ({\r\n    type: GET_CAMPUSES\r\n});\r\n\r\nexport const receiveCampuses = (data) => ({\r\n    type: RECEIVE_CAMPUSES,\r\n    data: data\r\n});\r\n\r\nexport const errorReceivingCampuses = (error) => ({\r\n    type: ERROR_GETTING_CAMPUSES,\r\n    error: error\r\n});\r\n\r\nexport function fetchCampuses(universityId) {\r\n    var url = BASE_URL_CoursesAPI + 'Campuses/universities/' + universityId;\r\n    return dispatch => {\r\n        dispatch(getCampuses());\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(receiveCampuses(json));\r\n            }).catch(err => {\r\n                dispatch(errorReceivingCampuses(err));\r\n            });\r\n    }\r\n}\r\n","// Imports: Dependencies\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// Imports: Redux Actions\r\nimport { fetchSearchModules, receiveModules, addModule, removeModule, fetchAndSetUniversity } from '../redux/actions/calenderActions';\r\n\r\n//import screens\r\nimport ActivitySpinner from './ActivitySpinner'\r\n\r\nclass Course extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchText: '',\r\n            doneSearching: true,\r\n            hasPressedSearch: false,\r\n            searchResultsView: [],\r\n            courses: [],\r\n            showSnackbar: false,\r\n            snackbarText: ''\r\n        }\r\n    }\r\n    render() {\r\n\r\n\r\n        if ((this.props.isSearching === true || this.props.isSearching === 'true') && this.state.doneSearching === false) {\r\n            return (\r\n                <ActivitySpinner />\r\n            )\r\n        } else {\r\n            const { classes } = this.props;\r\n            const searchResultsView = this.props.searchResults.map((resultValue) => {\r\n                return (\r\n                    <span key={'span_' + resultValue.id}>\r\n                        <ListItem className={classes.listItem} key={resultValue.id} dense button onClick={() => { this.goToModules(resultValue) }}>\r\n                            <ListItemText id={'text_' + resultValue.id} primary={resultValue.code} secondary={resultValue.name} />\r\n                            <ListItemSecondaryAction>\r\n                                {this.getActionButton(resultValue, this.props.courses)}\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </span>\r\n                )\r\n            });\r\n            const coursesView = this.props.courses.map((resultValue) => {\r\n                return (\r\n                    <span key={'view_span_' + resultValue.id}>\r\n                        <ListItem className={classes.listItem} key={'view_' + resultValue.id} dense button onClick={() => { this.goToModules(resultValue) }}>\r\n                            <ListItemText id={'view_text_' + resultValue.id} primary={resultValue.code} secondary={resultValue.name} />\r\n                            <ListItemSecondaryAction>\r\n                                {this.getActionButton(resultValue, this.props.courses)}\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </span>\r\n                )\r\n            });\r\n            return (\r\n                <div >\r\n                    <Snackbar\r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                        key={'course_snackbar'}\r\n                        open={this.state.showSnackbar}\r\n                        onClose={() => { this.handleClose() }}\r\n                        message={this.state.snackbarText}\r\n                        autoHideDuration={3000}\r\n                        action={\r\n                            <React.Fragment>\r\n                                <Button color=\"secondary\" size=\"small\" onClick={() => { this.handleClose() }}>\r\n                                    DISMISS\r\n                                </Button>\r\n                                <IconButton\r\n                                    aria-label=\"close\"\r\n                                    color=\"inherit\"\r\n                                    onClick={() => { this.handleClose() }}\r\n                                >\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n\r\n\r\n                    {(this.state.hasPressedSearch === true && this.state.searchText.length < 4) &&\r\n                        <span style={{ color: 'red' }} >Enter 4 or more characters </span>\r\n                    }\r\n                    <TextField\r\n                        id=\"standard-full-width\"\r\n                        label=\"Search Module\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Search Module by Name or Code... e.g MATH130\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        onChange={(text) => this.onChangeSearchText(text)}\r\n                        value={this.state.searchText}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.searchModule()}>\r\n                        Search\r\n                    </Button>\r\n                    <Divider />\r\n                    {(this.state.hasPressedSearch === true && this.state.searchText.length >= 4) &&\r\n                        <span>Total courses is {this.props.searchResults.length}</span>\r\n                    }\r\n                    {(!(this.state.hasPressedSearch === true && this.state.searchText.length >= 4)) &&\r\n                        <div>\r\n                            <Divider />\r\n                            <List>\r\n                                {coursesView}\r\n                            </List>\r\n                        </div>\r\n                    }\r\n                    {(this.state.hasPressedSearch === true && this.state.searchText.length >= 4) &&\r\n                        <div>\r\n                            <Divider />\r\n                            <List>\r\n                                {searchResultsView}\r\n                            </List>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n    showSnackbar(text) {\r\n        this.setState({ showSnackbar: true, snackbarText: text });\r\n    };\r\n\r\n    handleClose() {\r\n        this.setState({ showSnackbar: false, snackbarText: '' });\r\n    };\r\n    onChangeSearchText(text) {\r\n        this.setState({ hasPressedSearch: false, searchText: text.target.value });\r\n    }\r\n\r\n    searchModule() {\r\n        const { params } = this.props.match;\r\n        this.setState({ hasPressedSearch: true });\r\n        if (this.state.searchText.length >= 4) {\r\n            this.setState({ doneSearching: false })\r\n            this.props.searchModules(params.id, this.state.searchText, params.routeType).then(() => {\r\n                this.setState({ hasPressedSearch: true, doneSearching: true })\r\n            });\r\n        }\r\n    }\r\n\r\n    getActionButton(course, coursesAlreadyExists) {\r\n        if (this.courseExists(course.id, coursesAlreadyExists) === false) {\r\n            return (\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => this.addCourse(course)}>\r\n                    Add\r\n                </Button>\r\n            )\r\n        } else {\r\n            return (\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => this.removeCourse(course.id)}>\r\n                    Remove\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    addCourse(course) {\r\n        this.props.addModule(course);\r\n        const newCourses = [...this.state.courses, course];\r\n        this.setState({ courses: newCourses });\r\n        this.props.fetchAndSetUniversity(course.universityId);\r\n        this.showSnackbar('Module added successfully.');\r\n    }\r\n\r\n    removeCourse(courseId) {\r\n        this.props.removeModule(courseId);\r\n        var newCourses = [];\r\n        for (let course of this.state.courses) {\r\n            if (course.id !== courseId) {\r\n                newCourses.push(course);\r\n            }\r\n        }\r\n        this.setState({ courses: newCourses });\r\n        this.showSnackbar('Module removed successfully.');\r\n    }\r\n\r\n    courseExists(courseId, coursesAlreadyExists) {\r\n        for (let course of coursesAlreadyExists) {\r\n            if (course.id === courseId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.receiveModules([]);//Call this method to clear isSearching value\r\n    }\r\n\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    listItem: {\r\n        width: '100%',\r\n        backgroundColor: '#f9ecf2'\r\n    },\r\n});\r\n\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        searchResults: state.calenderReducer.searchResults,\r\n        isSearching: state.calenderReducer.isSearching,\r\n        error: state.calenderReducer.error,\r\n        hasErrorSearching: state.calenderReducer.hasErrorSearching,\r\n        courses: state.calenderReducer.courses,\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        searchModules: (campusId, body, routPath) => dispatch(fetchSearchModules(campusId, body, routPath)),\r\n        receiveModules: (data) => dispatch(receiveModules(data)),\r\n        addModule: (data) => dispatch(addModule(data)),\r\n        removeModule: (data) => dispatch(removeModule(data)),\r\n        fetchAndSetUniversity: (universityId) => dispatch(fetchAndSetUniversity(universityId))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Course));","// Imports: Dependencies\r\nimport React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Imports: Redux Actions\r\nimport { getNumberOfUnreadMessages } from '../redux/actions/calenderActions';\r\n\r\nclass Chats extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        const coursesView = this.props.courses.map((resultValue) => {\r\n            return (\r\n                <span key={'span_' + resultValue.id}>\r\n                    <ListItem className={classes.listItem} key={resultValue.id} dense button onClick={() => { this.openPosts(resultValue.id, resultValue.code) }}>\r\n                        <ListItemText id={'text_' + resultValue.id} primary={resultValue.code} secondary={resultValue.name} />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                <ForumIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                </span>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => { this.addModule() }}>\r\n                    Add or Remove module\r\n                </Button>\r\n\r\n                <Divider />\r\n                < span > Total number of modules you doing is {this.props.courses.length}</span>\r\n                <Divider />\r\n                {(this.props.university !== null && this.props.university !== undefined && this.props.university.id !== undefined\r\n                    && this.props.university.id !== '' && this.props.university.id !== '0000-0000-000000000000') &&\r\n                    <span key={'span_' + this.props.university.id}>\r\n                        <ListItem className={classes.listItem} key={this.props.university.id} dense button onClick={() => { this.openPosts(this.props.university.id, this.props.university.name) }}>\r\n                            <ListItemText\r\n                                id={'text_' + this.props.university.id}\r\n                                primary={this.props.university.name}\r\n                                secondary={'Send message to all students in your institution'}\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                    <ForumIcon />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </span>\r\n                }\r\n\r\n                <Divider />\r\n                <List>\r\n                    {coursesView}\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    openPosts(postId, code) {\r\n        this.props.history.push('/Posts/' + postId + '/code/' + code);\r\n    }\r\n\r\n    addModule() {\r\n        if (this.props.university === null || this.props.university === undefined || this.props.university.id === undefined\r\n            || this.props.university.id === '' || this.props.university.id === '0000-0000-000000000000') {\r\n            this.props.history.push('/University')\r\n        } else if (this.props.university.timetablePerCampus === true || this.props.university.timetablePerCampus === 'true') {\r\n            this.props.history.push('/Campus/' + this.props.university.id)\r\n        } else {\r\n            this.props.history.push('/institutions/' + this.props.university.id + '/type/universities')\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    listItem: {\r\n        width: '100%',\r\n        backgroundColor: '#f9ecf2'\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        courses: state.calenderReducer.courses,\r\n        university: state.calenderReducer.university\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        getNumberOfUnreadMessages: (state) => dispatch(getNumberOfUnreadMessages(state))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(withRouter(Chats)));","// Imports: Dependencies\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n// Imports: Redux Actions\r\nimport { addNote, removeNote, updateNote } from '../redux/actions/noteActions';\r\n\r\n\r\nclass Notes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            body: '',\r\n            isEdit: false,\r\n            actionType: 'viewList',\r\n            noteToView: {}\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        const dateCreated = new Date(this.state.noteToView.createdDate);\r\n        const displayDateCreated = dateCreated.toDateString() + ' ' + dateCreated.toLocaleTimeString();\r\n\r\n        const dateModified = new Date(this.state.noteToView.lastModifiedDate);\r\n        const displayDateModified = dateModified.toDateString() + ' ' + dateModified.toLocaleTimeString();\r\n\r\n        if (this.state.actionType === 'viewNote') {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <Divider />\r\n                        <span className={classes.nameHeader}> {this.state.noteToView.title} </span>\r\n                        <span className={classes.dates}> <span style={{ fontWeight: 'bold' }}>Created on:</span>  {displayDateCreated.toString()}</span>\r\n                        <span className={classes.dates}>  <span style={{ fontWeight: 'bold' }}>Last modified on:</span> {displayDateModified.toString()}</span>\r\n                        <Divider />\r\n                        <span> <br /> <br /></span>\r\n                        <span>{this.state.noteToView.body}</span>\r\n                    </div>\r\n                    <span> <br /> <br /></span>\r\n                    <Divider />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => { this.setState({ actionType: 'viewList' }) }}>\r\n                        Back to Notes\r\n                    </Button>\r\n                </div>\r\n            )\r\n        } else if (this.state.actionType === 'add' || this.state.actionType === 'edit') {\r\n            return (\r\n                <React.Fragment>\r\n                    <React.Fragment>\r\n                        <span style={{ fontWeight: 'bold', fontSize: 20 }}>Title</span>\r\n                        <TextField\r\n                            id=\"standard-full-width\"\r\n                            label=\"\"\r\n                            style={{ margin: 8 }}\r\n                            placeholder=\"Type note title here...\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            onChange={(text) => this.onChangeTitleText(text)}\r\n                            value={this.state.title}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                        <span style={{ fontWeight: 'bold', fontSize: 20 }}>Body</span>\r\n                        <TextField\r\n                            id=\"standard-full-width\"\r\n                            label=\"\"\r\n                            style={{ margin: 8 }}\r\n                            placeholder=\"Type your notes here...\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows=\"4\"\r\n                            margin=\"normal\"\r\n                            onChange={(text) => this.onChangeBodyText(text)}\r\n                            value={this.state.body}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </React.Fragment>\r\n                    <span style={{ color: 'white' }}>_</span>\r\n                    <div className={classes.containerActions}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => { this.addOrEditNote() }}>\r\n                            Save Note\r\n                            </Button>\r\n                        <Button variant=\"contained\" onClick={() => { this.setState({ actionType: 'viewList' }) }}>\r\n                            Back to Notes\r\n                            </Button>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            const notesView = this.props.notes.map((resultValue) => {\r\n                const dateCreated = new Date(resultValue.createdDate);\r\n                const displayDateCreated = dateCreated.toDateString() + ' ' + dateCreated.toLocaleTimeString();\r\n\r\n                const dateModified = new Date(resultValue.lastModifiedDate);\r\n                const displayDateModified = dateModified.toDateString() + ' ' + dateModified.toLocaleTimeString();\r\n                return (\r\n                    <span key={'span_' + resultValue.id}>\r\n                        <ListItem className={classes.listItem} key={resultValue.id} dense button onClick={() => { this.viewNote(resultValue) }}>\r\n                            <ListItemText id={'text_' + resultValue.id}\r\n                                primary={resultValue.title}\r\n                                secondary={'Modified on: ' + displayDateModified}\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <React.Fragment>\r\n                                    <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => { this.addOrEditNote(resultValue, true) }} >\r\n                                        <EditIcon />\r\n                                    </IconButton>\r\n                                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => { this.deleteNote(resultValue.id) }} >\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </React.Fragment>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        <br />\r\n                    </span>\r\n                )\r\n            });\r\n\r\n            return (\r\n                <React.Fragment>\r\n\r\n                    <div>\r\n                        <Divider />\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => { this.addOrEditNote({}, false) }}>\r\n                            Add Note\r\n                        </Button>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        {notesView}\r\n                    </List>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    createGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    viewNote(note) {\r\n        this.setState({ noteToView: note, actionType: 'viewNote' });\r\n\r\n    }\r\n\r\n    addOrEditNote(note, isEdit) {\r\n\r\n        if (this.state.actionType === 'viewList') {\r\n            if (isEdit === true) {\r\n                this.setState({ actionType: 'edit', noteToEdit: note, isEdit: true, title: note.title, body: note.body });\r\n            } else {\r\n                this.setState({ actionType: 'add', isEdit: false, title: '', body: '' });\r\n            }\r\n\r\n        } else {\r\n            if (this.state.title.length < 1) {\r\n\r\n            } else {\r\n                if (this.state.isEdit === false) {\r\n                    const body = {\r\n                        id: this.createGuid(),\r\n                        createdDate: new Date(),\r\n                        lastModifiedDate: new Date(),\r\n                        title: this.state.title,\r\n                        body: this.state.body\r\n                    };\r\n                    this.props.addNote(body);\r\n                } else {\r\n                    const body = {\r\n                        id: this.state.noteToEdit.id,\r\n                        createdDate: this.state.noteToEdit.createdDate,\r\n                        lastModifiedDate: new Date(),\r\n                        title: this.state.title,\r\n                        body: this.state.body\r\n                    };\r\n                    this.props.updateNote(body);\r\n                }\r\n                this.setState({ actionType: 'viewList', isEdit: false, title: '', body: '' });\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteNote(id) {\r\n        this.props.removeNote(id);\r\n    }\r\n\r\n    onChangeTitleText(text) {\r\n        this.setState({ title: text.target.value });\r\n    }\r\n\r\n    onChangeBodyText(text) {\r\n        this.setState({ body: text.target.value });\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        backgroundColor: 'white',\r\n    },\r\n    containerActions: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n    },\r\n    mainContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'stretch',\r\n    },\r\n    nameHeader: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: 'white',\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 25,\r\n    },\r\n    dates: {\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n    },\r\n    listItem: {\r\n        width: '100%',\r\n        backgroundColor: '#f9ecf2'\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        notes: state.noteReducer.notes,\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        addNote: (note) => dispatch(addNote(note)),\r\n        removeNote: (noteId) => dispatch(removeNote(noteId)),\r\n        updateNote: (note) => dispatch(updateNote(note)),\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Notes));","\r\nimport { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const ADD_NOTE = 'ADD_NOTE';\r\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE';\r\n\r\nexport const addNote = (data) => ({\r\n    type: ADD_NOTE,\r\n    data: data\r\n});\r\n\r\nexport const updateNote = (data) => ({\r\n    type: UPDATE_NOTE,\r\n    data: data\r\n});\r\n\r\nexport const removeNote = (noteId) => ({\r\n    type: REMOVE_NOTE,\r\n    noteId: noteId\r\n});\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ReactPlayer from 'react-player'\r\nimport { withRouter } from 'react-router-dom';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\n\r\n// Screen: MediaCard\r\nclass MediaCard extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isVideoOrAudio = ((this.props.file.contentType.includes('video') === true || this.props.file.contentType.includes('audio') === true));\r\n        const isImage = (this.props.file.contentType.includes('image') === true || this.props.file.contentType.includes('picture') === true);\r\n        if ((isImage === true) || (isVideoOrAudio === true)) {\r\n            return (\r\n                <div>\r\n                    {(isVideoOrAudio === true) &&\r\n                        <ReactPlayer\r\n                            url={'http://sitholewb.co.za/FilesAPI/api/Storage/' + this.props.file.id + '/view'}\r\n                            width='100%'\r\n                            height='100%'\r\n                            playing={false}\r\n                            controls\r\n                        />\r\n                    }\r\n                    {(isImage === true) &&\r\n                        <img src={'http://sitholewb.co.za/FilesAPI/api/Storage/' + this.props.file.id + '/view'} width=\"100%\" height=\"100%\" />\r\n                    }\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Chip\r\n                        icon={<AttachmentIcon />}\r\n                        label={this.props.file.name}\r\n                        clickable\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => { this.openFile() }}\r\n                        deleteIcon={<VisibilityIcon />}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    openFile() {\r\n        this.props.history.push('/file/' + this.props.file.id + '/view');\r\n    }\r\n\r\n}\r\n\r\n// Styles\r\nconst styles = theme => ({\r\n    playerWrapper: {\r\n        position: 'relative',\r\n        paddingTop: 56 /* Player ratio: 100 / (1280 / 720) */\r\n    },\r\n    reactPlayer: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n    }\r\n});\r\nexport default withStyles(styles)(withRouter(MediaCard));","import { BASE_URL_PostsAPI } from '../../shared/Urls';\r\n\r\nexport const POST_COMMENT = 'POST_COMMENT';\r\nexport const POST_COMMENT_RESPONSE = 'POST_COMMENT_RESPONSE';\r\nexport const ERROR_POSTING_COMMENT = 'ERROR_POSTING_COMMENT';\r\n\r\nexport const GET_COMMENTS = 'GET_COMMENTS';\r\nexport const RECEIVE_COMMENTS = 'RECEIVE_COMMENTS';\r\nexport const ERROR_RECEIVING_COMMENTS = 'ERROR_RECEIVING_COMMENTS';\r\n\r\nexport const LIKE_COMMENT = 'LIKE_COMMENT';\r\nexport const LIKE_COMMENT_RESPONSE = 'LIKE_COMMENT_RESPONSE';\r\nexport const ERROR_LIKING_COMMENT = 'ERROR_LIKING_COMMENT';\r\n\r\n//*********************************POST_COMMENT********************************************* */\r\nexport const postComment = () => ({\r\n    type: POST_COMMENT\r\n});\r\n\r\nexport const postCommentResponse = (data) => ({\r\n    type: POST_COMMENT_RESPONSE,\r\n    data: data\r\n});\r\n\r\nexport const errorPostingComment = (error) => ({\r\n    type: ERROR_POSTING_COMMENT,\r\n    error: error\r\n});\r\n\r\n//********************************END:: POST_COMMENT ::END***************************************** */\r\n\r\n//*********************************LIKE_COMMENT**************************************************** */\r\nexport const likeComment = () => ({\r\n    type: LIKE_COMMENT\r\n});\r\n\r\nexport const likeCommentResponse = () => ({\r\n    type: LIKE_COMMENT_RESPONSE\r\n});\r\n\r\nexport const errorLikingComment = (error) => ({\r\n    type: ERROR_LIKING_COMMENT,\r\n    error: error\r\n});\r\n//********************************END:: LIKE_COMMENT ::END**************************************** */\r\n//*********************************GET_COMMENTS********************************************* */\r\nexport const getComments = () => ({\r\n    type: GET_COMMENTS\r\n});\r\n\r\nexport const receiveComments = (data) => ({\r\n    type: RECEIVE_COMMENTS,\r\n    data: data\r\n});\r\n\r\nexport const errorReceivingComments = (error) => ({\r\n    type: ERROR_RECEIVING_COMMENTS,\r\n    error: error\r\n});\r\n\r\n//********************************END:: GET_COMMENTS ::END***************************************** */\r\n\r\nexport function AddComment(postId, comment) {\r\n    var url = BASE_URL_PostsAPI + 'Comments/Posts/' + postId;\r\n    return dispatch => {\r\n        dispatch(postComment());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(comment),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(postCommentResponse(json));\r\n            }).catch(err => {\r\n                dispatch(errorPostingComment(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function fetchCommentsForPost(postId) {\r\n    var url = BASE_URL_PostsAPI + 'Comments/Posts/' + postId;\r\n    return dispatch => {\r\n        dispatch(getComments());\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                console.log('Len = ' + json.length)\r\n                dispatch(receiveComments(json));\r\n            }).catch(err => {\r\n                dispatch(errorReceivingComments(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function likeCommentById(postId, commentId, user) {\r\n    var url = BASE_URL_PostsAPI + 'Comments/likes/' + commentId + '/posts/' + postId;\r\n    return dispatch => {\r\n        dispatch(likeComment());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(likeCommentResponse(json));\r\n            }).catch(err => {\r\n                dispatch(errorLikingComment(err));\r\n            });\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n//import screens\r\nimport MediaCard from './MediaCard';\r\n\r\n// Imports: Redux Actions\r\nimport { likeCommentById } from '../redux/actions/commentActions';\r\n\r\nclass CommentCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasConflict: false,\r\n            post: {},\r\n            showSnackbar: false,\r\n            snackbarText: '',\r\n            totalLikes: 0\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const date = new Date(this.props.comment.addedDate);\r\n        const displayDate = date.toDateString() + ' ' + date.toLocaleTimeString();\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    key={'course_snackbar'}\r\n                    open={this.state.showSnackbar}\r\n                    onClose={() => { this.handleClose() }}\r\n                    message={this.state.snackbarText}\r\n                    autoHideDuration={3000}\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button color=\"secondary\" size=\"small\" onClick={() => { this.handleClose() }}>\r\n                                DISMISS\r\n                                </Button>\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                onClick={() => { this.handleClose() }}\r\n                            >\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n\r\n                <Card className={classes.root}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                <AccountCircleIcon />\r\n                            </Avatar>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\">\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                        }\r\n                        title={this.getUserFullNames()}\r\n                        subheader={displayDate}\r\n                    />\r\n                    <Divider />\r\n\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {this.props.comment.body}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardContent>\r\n                        {((this.props.comment.files !== null && this.props.comment.files.length > 0)) &&\r\n                            <MediaCard\r\n                                file={this.props.comment.files[0]}\r\n                            />\r\n                        }\r\n                    </CardContent>\r\n                    <CardActions style={{ backgroundColor: '#f9ecf2' }} disableSpacing>\r\n                        <IconButton aria-label=\"Like this comment\" style={{ color: this.state.likeButtonBackgroundColor }} onClick={() => { this.handlePostLike() }}>\r\n                            <FavoriteIcon />\r\n                        </IconButton>\r\n                        {(this.props.comment.likes.length > 0) &&\r\n                            <Chip variant=\"outlined\" size=\"small\" label={this.props.comment.likes.length + \" likes\"} />\r\n                        }\r\n                    </CardActions>\r\n\r\n                </Card>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    showSnackbar(text) {\r\n        this.setState({ showSnackbar: true, snackbarText: text });\r\n    };\r\n\r\n    handleClose() {\r\n        this.setState({ showSnackbar: false, snackbarText: '' });\r\n    };\r\n\r\n\r\n    getUserFullNames() {\r\n        if (this.props.comment.addedBy === null || this.props.comment.addedBy === 'null' || this.props.comment.addedBy === undefined) {\r\n            return 'Anonymous User';\r\n        } else {\r\n            return this.props.comment.addedBy.fullnames;\r\n        }\r\n    }\r\n\r\n    handlePostLike() {\r\n        this.props.likeCommentById(this.props.comment.postId, this.props.comment.id, this.props.user).then(() => {\r\n            if (this.state.likeButtonBackgroundColor === 'black') {\r\n                this.setState({ likeButtonBackgroundColor: 'green', totalLikes: this.state.totalLikes + 1 })\r\n            } else {\r\n                this.setState({ likeButtonBackgroundColor: 'black', totalLikes: this.state.totalLikes - 1 })\r\n            }\r\n        });\r\n    }\r\n\r\n    existOnLikes() {\r\n        var exist = false;\r\n        const list = this.props.comment.likes;\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (list[i].userId === this.props.user.userId) {\r\n                exist = true;\r\n            }\r\n        }\r\n        return exist;\r\n    }\r\n\r\n    sentComment() {\r\n        if (this.state.commentText.length < 1) {\r\n            this.showSnackbar('Input must be at least 1 letter');\r\n            return;\r\n        } else {\r\n            this.setState({ addPostPending: true })\r\n            if (this.state.fileIsAttached === false) {\r\n                this.props.AddComment(this.props.comment.id, {\r\n                    body: this.state.commentText,\r\n                    addedBy: this.props.user\r\n                }).then(() => {\r\n                    this.setState({\r\n                        addPostPending: false,\r\n                        commentText: '',\r\n                        showAddComment: false,\r\n                        showComments: true,\r\n                        totalComments: this.state.totalComments + 1\r\n                    })\r\n\r\n                })\r\n            } else {\r\n                this.props.uploadFileToStorage(this.state.documentObject)\r\n                    .then(() => {\r\n                        this.props.AddComment(this.props.comment.id, {\r\n                            body: this.state.commentText,\r\n                            addedBy: this.props.user,\r\n                            files: [this.props.uploadResponse]\r\n                        }).then(() => {\r\n                            this.setState({\r\n                                commentText: '',\r\n                                fileIsAttached: false,\r\n                                fileName: '',\r\n                                addPostPending: false,\r\n                                showAddComment: false,\r\n                                showComments: true,\r\n                                totalComments: this.state.totalComments + 1\r\n                            })\r\n                        })\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        var likeText = 'black';\r\n        if (this.existOnLikes()) {\r\n            likeText = 'green';\r\n        }\r\n\r\n        this.setState({ likeButtonBackgroundColor: likeText })\r\n    }\r\n\r\n}\r\nconst useStyles = theme => ({\r\n    root: {\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: 'green',\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        user: state.userReducer.user,\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        likeCommentById: (postId, commentId, user) => dispatch(likeCommentById(postId, commentId, user))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(CommentCard));\r\n","// Imports: Dependencies\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\n//import screens\r\nimport ActivitySpinner from './ActivitySpinner'\r\nimport CommentCard from './CommentCard';\r\n\r\n// Imports: Redux Actions\r\nimport { fetchCommentsForPost } from '../redux/actions/commentActions';\r\n\r\n// Screen: Comments\r\nclass Comments extends Component {\r\n    render() {\r\n\r\n        if (this.props.isFetchingComments === true) {\r\n            return (\r\n                <ActivitySpinner />\r\n            )\r\n        } else {\r\n\r\n            const commentsView = this.props.comments.map((resultValue) => {\r\n                return (\r\n                    <CommentCard comment={resultValue} />\r\n                )\r\n            });\r\n\r\n            return (\r\n                <div>\r\n                    {commentsView}\r\n                </div >\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchComments(this.props.postId);\r\n    }\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    container: {\r\n        margin: 1,\r\n        display: 'flex',\r\n        flexWrap: 'nowrap'\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        comments: state.commentReducer.comments,\r\n        isFetchingComments: state.commentReducer.isFetchingComments\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        fetchComments: (id) => dispatch(fetchCommentsForPost(id))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Comments));","\r\nimport { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const ADD_BOOKMARK = 'ADD_BOOKMARK';\r\nexport const REMOVE_BOOKMARK = 'REMOVE_BOOKMARK';\r\nexport const REMOVE_ALL_BOOKMARK = 'REMOVE_ALL_BOOKMARK';\r\n\r\nexport const addBookmark = (post) => ({\r\n    type: ADD_BOOKMARK,\r\n    post: post\r\n});\r\n\r\nexport const removeBookmark = (postId) => ({\r\n    type: REMOVE_BOOKMARK,\r\n    postId: postId\r\n});\r\n\r\nexport const removeAllBookmark = () => ({\r\n    type: REMOVE_ALL_BOOKMARK,\r\n});\r\n","import { BASE_URL_FilesAPI } from '../../shared/Urls';\r\n\r\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\r\nexport const UPLOAD_FILE_RESPONSE = 'UPLOAD_FILE_RESPONSE';\r\nexport const ERROR_UPLOADING_FILE = 'ERROR_UPLOADING_FILE';\r\nexport const UPLOAD_FILE_PROGRESS = 'UPLOAD_FILE_PROGRESS';\r\n\r\n\r\n//*********************************UPLOAD_FILE**************************************************** */\r\nexport const uploadFile = () => ({\r\n    type: UPLOAD_FILE\r\n});\r\n\r\nexport const uploadFileResponse = (data) => ({\r\n    type: UPLOAD_FILE_RESPONSE,\r\n    data: data\r\n});\r\n\r\nexport const errorUploadingFile = (error) => ({\r\n    type: ERROR_UPLOADING_FILE,\r\n    error: error\r\n});\r\n\r\nexport const uploadFileProgress = (percent) => ({\r\n    type: UPLOAD_FILE_PROGRESS,\r\n    percent: percent\r\n});\r\n//*********************************END:: UPLOAD_FILE ::END **************************************************** */\r\n\r\nexport function uploadFileToStorage(fileObject) {\r\n    var formData = new FormData();\r\n    formData.append('file', fileObject);\r\n    return dispatch => {\r\n        dispatch(uploadFile())\r\n        return fetch(BASE_URL_FilesAPI + 'Storage', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                dispatch(uploadFileResponse(data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorUploadingFile(error));\r\n            })\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//import screens\r\nimport MediaCard from './MediaCard';\r\nimport ActivitySpinner from './ActivitySpinner'\r\nimport Comments from './Comments'\r\n\r\n// Imports: Redux Actions\r\nimport { fetchCommentsForPost, AddComment } from '../redux/actions/commentActions';\r\nimport { addBookmark, removeBookmark, removeAllBookmark } from '../redux/actions/bookmarkActions';\r\nimport { likePostById } from '../redux/actions/postActions';\r\nimport { uploadFileToStorage } from '../redux/actions/uploadActions';\r\n\r\nclass PostCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileUpload = React.createRef();\r\n        this.showFileUpload = this.showFileUpload.bind(this);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.state = {\r\n            hasConflict: false,\r\n            post: {},\r\n            showSnackbar: false,\r\n            snackbarText: '',\r\n            showAddComment: false,\r\n            fileIsAttached: false,\r\n            fileName: '',\r\n            documentObject: {},\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const date = new Date(this.props.post.addedDate);\r\n        const displayDate = date.toDateString() + ' ' + date.toLocaleTimeString();\r\n\r\n        return (\r\n            <div className={classes.cardStyle}>\r\n                <Divider />\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    key={'course_snackbar'}\r\n                    open={this.state.showSnackbar}\r\n                    onClose={() => { this.handleClose() }}\r\n                    message={this.state.snackbarText}\r\n                    autoHideDuration={3000}\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button color=\"secondary\" size=\"small\" onClick={() => { this.handleClose() }}>\r\n                                DISMISS\r\n                                </Button>\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                onClick={() => { this.handleClose() }}\r\n                            >\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n\r\n                <Card className={classes.root}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                <AccountCircleIcon />\r\n                            </Avatar>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\">\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                        }\r\n                        title={this.getUserFullNames()}\r\n                        subheader={displayDate}\r\n                    />\r\n                    <Divider />\r\n\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {this.props.post.body}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardContent>\r\n                        {((this.props.post.files !== null && this.props.post.files.length > 0)) &&\r\n                            <MediaCard\r\n                                file={this.props.post.files[0]}\r\n                            />\r\n                        }\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <CardActions style={{ backgroundColor: '#f9ecf2' }} disableSpacing>\r\n                        <IconButton aria-label=\"Like this post\" style={{ color: this.state.likeButtonBackgroundColor }} onClick={() => { this.handlePostLike() }}>\r\n                            <FavoriteIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"Add Comment\" style={{ color: 'black' }} onClick={() => { this.toggleShowAddComment() }}>\r\n                            <AddCommentIcon />\r\n                        </IconButton>\r\n                        <IconButton edge=\"end\" aria-label=\"Add to bookmark\" onClick={() => { this.handleBookmarkClick() }}>\r\n                            <BookmarkIcon style={{ color: this.state.bookmarkButtonBackgroundColor }} />\r\n                        </IconButton>\r\n                        <span style={{ color: '#f9ecf2' }}>__</span>\r\n                        {(this.props.post.totalComments > 0) &&\r\n                            <React.Fragment>\r\n                                <Chip variant=\"outlined\" color=\"primary\" size=\"small\" label={this.props.post.totalComments + \" comments\"} clickable onClick={() => { this.toggleComments() }} />\r\n                                <span style={{ color: '#f9ecf2' }}>_</span>\r\n                            </React.Fragment>\r\n                        }\r\n                        {(this.props.post.likes.length > 0) &&\r\n                            <Chip variant=\"outlined\" size=\"small\" label={this.props.post.likes.length + \" likes\"} />\r\n                        }\r\n                    </CardActions>\r\n\r\n                </Card>\r\n                <div>\r\n                    {(this.state.showAddComment === true) &&\r\n                        <div>\r\n                            <TextField\r\n                                id=\"standard-full-width\"\r\n                                label=\"\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Add your comment...\"\r\n                                fullWidth\r\n                                multiline\r\n                                rows=\"4\"\r\n                                margin=\"normal\"\r\n                                onChange={(text) => this.onChangeText(text)}\r\n                                value={this.state.postText}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n\r\n                            {(this.state.fileIsAttached === false) &&\r\n                                <React.Fragment>\r\n                                    <div>\r\n                                        <input style={{ display: \"none\" }} id=\"postFileId\" type=\"file\" ref={this.fileUpload} onChange={this.onFileChange} />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <Chip\r\n                                            icon={<AttachmentIcon />}\r\n                                            label=\"attach file(image/pdf/video/etc)\"\r\n                                            clickable\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            onClick={() => { this.showFileUpload() }}\r\n                                        />\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                            {(this.state.fileIsAttached === true) &&\r\n                                <React.Fragment>\r\n                                    <Chip\r\n                                        icon={<AttachmentIcon />}\r\n                                        label={this.state.fileName}\r\n                                        onDelete={() => { this.removeFile() }}\r\n                                        color=\"secondary\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                    <span><br /></span>\r\n                                </React.Fragment>\r\n                            }\r\n\r\n\r\n                            <div style={{ width: '50%' }}>\r\n                                <span><br /></span>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => { this.sentComment() }}>\r\n                                    Add Comment\r\n                                    </Button>\r\n                            </div>\r\n\r\n                            <br />\r\n                        </div>\r\n                    }\r\n                    {(this.state.addPostPending === true) &&\r\n\r\n                        <div>\r\n                            <span style={{ color: 'green', fontWeight: 'bold' }}>Adding your comment...</span>\r\n                            <ActivitySpinner />\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                {(this.state.showComments === true) &&\r\n                    <div className={classes.containerComments}>\r\n                        <span style={{ width: '20%' }}></span>\r\n                        <div style={{ width: '80%' }}>\r\n                            <Comments postId={this.props.post.id} />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onFileChange(e) {\r\n        this.setState({ fileIsAttached: true, fileName: e.target.files[0].name, documentObject: e.target.files[0] })\r\n    }\r\n\r\n    showFileUpload() {\r\n        this.fileUpload.current.click();\r\n    }\r\n\r\n    toggleShowAddComment() {\r\n        this.setState({ showAddComment: !this.state.showAddComment });\r\n    }\r\n\r\n    showSnackbar(text) {\r\n        this.setState({ showSnackbar: true, snackbarText: text });\r\n    };\r\n\r\n    handleClose() {\r\n        this.setState({ showSnackbar: false, snackbarText: '' });\r\n    };\r\n    removeFile() {\r\n        this.setState({ fileIsAttached: false, fileName: '' })\r\n    }\r\n\r\n    getUserFullNames() {\r\n        if (this.props.post.addedBy === null || this.props.post.addedBy === 'null' || this.props.post.addedBy === undefined) {\r\n            return 'Anonymous User';\r\n        } else {\r\n            return this.props.post.addedBy.fullnames;\r\n        }\r\n    }\r\n\r\n    handlePostLike() {\r\n        this.props.likePostById(this.props.post.id, this.props.user).then(() => {\r\n            if (this.state.likeButtonBackgroundColor === 'black') {\r\n                this.setState({ likeButtonBackgroundColor: 'green', totalLikes: this.state.totalLikes + 1 })\r\n            } else {\r\n                this.setState({ likeButtonBackgroundColor: 'black', totalLikes: this.state.totalLikes - 1 })\r\n            }\r\n        });\r\n    }\r\n\r\n    handleBookmarkClick() {\r\n        if (this.existOnBookmarks() === true) {\r\n            this.setState({ bookmarkButtonBackgroundColor: 'black' })\r\n            this.props.removeBookmark(this.props.post.id);\r\n        } else {\r\n            this.setState({ bookmarkButtonBackgroundColor: 'green' })\r\n            this.props.addBookmark(this.props.post);\r\n        }\r\n    }\r\n\r\n    existOnBookmarks() {\r\n        let exist = false;\r\n        const list = this.props.bookmarkedPosts;\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (list[i].id === this.props.post.id) {\r\n                exist = true;\r\n            }\r\n        }\r\n        return exist;\r\n    }\r\n\r\n    existOnLikes() {\r\n        var exist = false;\r\n        const list = this.props.post.likes;\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (list[i].userId === this.props.user.userId) {\r\n                exist = true;\r\n            }\r\n        }\r\n        return exist;\r\n    }\r\n\r\n    sentComment() {\r\n        if (this.state.commentText.length < 1) {\r\n            this.showSnackbar('Input must be at least 1 letter');\r\n            return;\r\n        } else {\r\n            this.setState({ addPostPending: true })\r\n            if (this.state.fileIsAttached === false) {\r\n                this.props.AddComment(this.props.post.id, {\r\n                    body: this.state.commentText,\r\n                    addedBy: this.props.user\r\n                }).then(() => {\r\n                    this.setState({\r\n                        addPostPending: false,\r\n                        commentText: '',\r\n                        showAddComment: false,\r\n                        showComments: true,\r\n                        totalComments: this.state.totalComments + 1\r\n                    })\r\n\r\n                })\r\n            } else {\r\n                this.props.uploadFileToStorage(this.state.documentObject)\r\n                    .then(() => {\r\n                        this.props.AddComment(this.props.post.id, {\r\n                            body: this.state.commentText,\r\n                            addedBy: this.props.user,\r\n                            files: [this.props.uploadResponse]\r\n                        }).then(() => {\r\n                            this.setState({\r\n                                commentText: '',\r\n                                fileIsAttached: false,\r\n                                fileName: '',\r\n                                addPostPending: false,\r\n                                showAddComment: false,\r\n                                showComments: true,\r\n                                totalComments: this.state.totalComments + 1\r\n                            })\r\n                        })\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeText(text) {\r\n        this.setState({ commentText: text.target.value });\r\n    }\r\n\r\n    toggleComments() {\r\n        this.setState({ showComments: !this.state.showComments });\r\n    }\r\n\r\n    componentDidMount() {\r\n        var likeText = 'black';\r\n        var bookmarkButtonBackgroundColor = 'black';\r\n        if (this.existOnLikes()) {\r\n            likeText = 'green';\r\n        }\r\n        if (this.existOnBookmarks() === true) {\r\n            bookmarkButtonBackgroundColor = 'green';\r\n        }\r\n        this.setState({ bookmarkButtonBackgroundColor: bookmarkButtonBackgroundColor, likeButtonBackgroundColor: likeText })\r\n    }\r\n\r\n}\r\nconst useStyles = theme => ({\r\n    root: {\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: 'green',\r\n    },\r\n    containerComments: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n    },\r\n    cardStyle: {\r\n        borderRadius: 10,\r\n    }\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        isFetchingComments: state.commentReducer.isFetchingComments,\r\n        bookmarkedPosts: state.bookmarkReducer.bookmarkedPosts,\r\n        user: state.userReducer.user,\r\n        uploadResponse: state.uploadReducer.response,\r\n        percent: state.uploadReducer.percent,\r\n        isUploadingFile: state.uploadReducer.isFetching\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        fetchComments: (id) => dispatch(fetchCommentsForPost(id)),\r\n        AddComment: (postId, comment) => dispatch(AddComment(postId, comment)),\r\n        addBookmark: (post) => dispatch(addBookmark(post)),\r\n        removeBookmark: (postId) => dispatch(removeBookmark(postId)),\r\n        removeAllBookmark: () => dispatch(removeAllBookmark()),\r\n        likePostById: (postId, user) => dispatch(likePostById(postId, user)),\r\n        uploadFileToStorage: (obj) => dispatch(uploadFileToStorage(obj))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(PostCard));\r\n","import { BASE_URL_PostsAPI } from '../../shared/Urls';\r\n\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_POST_RESPONSE = 'ADD_POST_RESPONSE';\r\nexport const ERROR_ADDING_POST = 'ERROR_ADDING_POST';\r\n\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const RESET_POSTS = 'RESET_POSTS';\r\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS';\r\nexport const ERROR_RECEIVING_POSTS = 'ERROR_RECEIVING_POSTS';\r\n\r\nexport const LIKE_POST = 'LIKE_POST';\r\nexport const LIKE_POST_RESPONSE = 'LIKE_POST_RESPONSE';\r\nexport const ERROR_LIKING_POST = 'ERROR_LIKING_POST';\r\n\r\n//*********************************ADD_POST********************************************* */\r\nexport const addPost = () => ({\r\n    type: ADD_POST\r\n});\r\n\r\nexport const addPostResponse = (data) => ({\r\n    type: ADD_POST_RESPONSE,\r\n    data: data\r\n});\r\n\r\nexport const errorAddingPost = (error) => ({\r\n    type: ERROR_ADDING_POST,\r\n    error: error\r\n});\r\n\r\n//********************************END:: ADD_POST ::END***************************************** */\r\n\r\n//*********************************LIKE_POST**************************************************** */\r\nexport const likePost = () => ({\r\n    type: LIKE_POST\r\n});\r\n\r\nexport const likePostResponse = (data) => ({\r\n    type: LIKE_POST_RESPONSE,\r\n    data: data\r\n});\r\n\r\nexport const errorLikingPost = (error) => ({\r\n    type: ERROR_LIKING_POST,\r\n    error: error\r\n});\r\n//********************************END:: LIKE_POST ::END************************************* */\r\n\r\n//*********************************GET_POSTS********************************************* */\r\nexport const getPosts = (categoryId) => ({\r\n    type: GET_POSTS,\r\n    categoryId: categoryId\r\n});\r\n\r\nexport const resetPosts = () => ({\r\n    type: RESET_POSTS,\r\n});\r\n\r\nexport const receivePosts = (data) => ({\r\n    type: RECEIVE_POSTS,\r\n    data: data\r\n});\r\n\r\nexport const errorReceivingPosts = (error) => ({\r\n    type: ERROR_RECEIVING_POSTS,\r\n    error: error\r\n});\r\n\r\n//********************************END:: GET_POSTS ::END***************************************** */\r\n\r\nexport function sendPost(categoryId, post) {\r\n    var url = BASE_URL_PostsAPI + 'Posts/' + categoryId;\r\n    return dispatch => {\r\n        dispatch(addPost());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(post),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(addPostResponse(json));\r\n            }).catch(err => {\r\n                dispatch(errorAddingPost(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function fetchGetPosts(categoryId, body) {\r\n    var url = BASE_URL_PostsAPI + 'Posts/' + categoryId + '/query';\r\n    return dispatch => {\r\n        dispatch(getPosts(categoryId));\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(receivePosts(json));\r\n            }).catch(err => {\r\n                dispatch(errorReceivingPosts(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function likePostById(postId, user) {\r\n    var url = BASE_URL_PostsAPI + 'Posts/likes/' + postId;\r\n    return dispatch => {\r\n        dispatch(likePost());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(likePostResponse(json));\r\n            }).catch(err => {\r\n                dispatch(errorLikingPost(err));\r\n            });\r\n    }\r\n}","// Imports: Dependencies\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n//import screens\r\nimport ActivitySpinner from './ActivitySpinner'\r\nimport PostCard from './PostCard';\r\n\r\n// Imports: Redux Actions\r\nimport { fetchGetPosts, sendPost, resetPosts } from '../redux/actions/postActions';\r\nimport { addUpdateUser } from '../redux/actions/userActions';\r\nimport { uploadFileToStorage } from '../redux/actions/uploadActions';\r\n\r\n// Screen: Comments\r\nclass Posts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileUpload = React.createRef();\r\n        this.showFileUpload = this.showFileUpload.bind(this);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.state = {\r\n            postText: '',\r\n            fileIsAttached: false,\r\n            fileName: '',\r\n            documentObject: {},\r\n            addPostPending: false,\r\n            noMorePosts: false\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        if (this.props.isFetchingPosts === true && this.props.posts.length === 0) {\r\n            return (\r\n                <ActivitySpinner />\r\n            )\r\n        } else {\r\n\r\n            const coursesView = this.props.posts.map((resultValue) => {\r\n                return (\r\n                    <PostCard key={'card_' + resultValue.id} post={resultValue} />\r\n                )\r\n            });\r\n            const { params } = this.props.match;\r\n            return (\r\n                <Fragment>\r\n                    <span style={{ fontWeight: 'bold', fontSize: 20, backgroundColor: '#f9ecf2' }}>{params.code}.</span>\r\n                    <Divider />\r\n                    <br />\r\n                    <div>\r\n                        {\r\n                            //***************************START :: ADD POST :: START************************************************* */\r\n                        }\r\n                        {(this.state.addPostPending === false) &&\r\n                            <div>\r\n                                <TextField\r\n                                    id=\"standard-full-width\"\r\n                                    label=\"\"\r\n                                    style={{ margin: 8 }}\r\n                                    placeholder=\"Add your post...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                    rows=\"4\"\r\n                                    margin=\"normal\"\r\n                                    onChange={(text) => this.onChangeText(text)}\r\n                                    value={this.state.postText}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n\r\n                                {(this.state.fileIsAttached === false) &&\r\n                                    <React.Fragment>\r\n                                        <div>\r\n                                            <input style={{ display: \"none\" }} id=\"postFileId\" type=\"file\" ref={this.fileUpload} onChange={this.onFileChange} />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <Chip\r\n                                                icon={<AttachmentIcon />}\r\n                                                label=\"attach file(image/pdf/video/etc)\"\r\n                                                clickable\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                onClick={() => { this.showFileUpload() }}\r\n                                            />\r\n                                        </div>\r\n                                    </React.Fragment>\r\n                                }\r\n\r\n                                {(this.state.fileIsAttached === true) &&\r\n                                    <React.Fragment>\r\n                                        <Chip\r\n                                            icon={<AttachmentIcon />}\r\n                                            label={this.state.fileName}\r\n                                            onDelete={() => { this.removeFile() }}\r\n                                            color=\"secondary\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <span><br /></span>\r\n                                    </React.Fragment>\r\n                                }\r\n\r\n\r\n                                <div style={{ width: '50%' }}>\r\n                                    <span><br /></span>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => { this.sendPost() }}>\r\n                                        Add Post\r\n                                    </Button>\r\n                                </div>\r\n\r\n                                <br />\r\n                            </div>\r\n                        }\r\n                        {(this.state.addPostPending === true) &&\r\n\r\n                            <div>\r\n                                <span style={{ color: 'green', fontWeight: 'bold' }}>Adding your post...</span>\r\n                                <ActivitySpinner />\r\n                                {(this.state.fileIsAttached === true) &&\r\n                                    <span style={{ color: 'green', fontWeight: 'bold' }}>Attachment upload progress {this.props.percent}%...</span>\r\n                                }\r\n                            </div>\r\n                        }\r\n                        {\r\n                            //***************************END :: ADD POST :: END************************************************* */\r\n                        }\r\n\r\n                        <Divider />\r\n                        <div>\r\n                            <List>\r\n                                {coursesView}\r\n                            </List>\r\n                            {(this.props.isFetchingPosts === true && this.props.posts.length > 0) &&\r\n                                <ActivitySpinner />\r\n                            }\r\n                            <br />\r\n                            {(this.state.noMorePosts === false) &&\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => { this.loadMorePosts() }}>\r\n                                    LOAD MORE POSTS...\r\n                                </Button>\r\n                            }\r\n                            {(this.state.noMorePosts === true) &&\r\n                                <span>No more posts to show.</span>\r\n                            }\r\n                            <br />\r\n                        </div >\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    onFileChange(e) {\r\n        this.setState({ fileIsAttached: true, fileName: e.target.files[0].name, documentObject: e.target.files[0] })\r\n    }\r\n\r\n    showFileUpload() {\r\n        this.fileUpload.current.click();\r\n    }\r\n\r\n    removeFile() {\r\n        this.setState({ fileIsAttached: false, fileName: '' })\r\n    }\r\n\r\n    onChangeText(text) {\r\n        this.setState({ postText: text.target.value });\r\n    }\r\n\r\n    sendPost() {\r\n        if (this.state.postText.length < 1) {\r\n            return;\r\n        } else {\r\n            const { params } = this.props.match;\r\n            this.setState({ addPostPending: true })\r\n            if (this.state.fileIsAttached === false) {\r\n                this.props.sendPost(params.id, {\r\n                    body: this.state.postText,\r\n                    addedBy: this.props.user\r\n                }).then(() => {\r\n                    this.setState({ postText: '' })\r\n                    this.setState({ addPostPending: false })\r\n                })\r\n            } else {\r\n                this.props.uploadFileToStorage(this.state.documentObject)\r\n                    .then(() => {\r\n                        this.props.sendPost(params.id, {\r\n                            body: this.state.postText,\r\n                            addedBy: this.props.user,\r\n                            files: [this.props.uploadResponse]\r\n                        }).then(() => {\r\n                            this.setState({ postText: '', fileIsAttached: false, fileName: '', addPostPending: false })\r\n                        })\r\n                    });\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    loadMorePosts() {\r\n        if (this.props.posts.length === 50) {\r\n            const { params } = this.props.match;\r\n            var body = {\r\n                \"beforeDate\": this.props.posts[49].addedDate,\r\n                \"categoryId\": params.id,\r\n                \"lastN\": 50\r\n            }\r\n            this.props.fetchGetPosts(params.id, body);\r\n        } else {\r\n            this.setState({ noMorePosts: true })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        var body = {\r\n            \"beforeDate\": null,\r\n            \"categoryId\": params.id,\r\n            \"lastN\": 50\r\n        }\r\n        this.props.resetPosts();\r\n        this.props.fetchGetPosts(params.id, body);\r\n    }\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    container: {\r\n        margin: 1,\r\n        display: 'flex',\r\n        flexWrap: 'nowrap'\r\n    },\r\n    removeFileButton: {\r\n        fontSize: 13,\r\n        textAlign: 'center'\r\n    },\r\n    removeFileCustomBtnBG: {\r\n        backgroundColor: \"#ffe0b3\",\r\n        borderRadius: 3,\r\n        alignSelf: 'flex-start',\r\n        borderRadius: 10,\r\n        height: 23\r\n    },\r\n    addModuleButton: {\r\n        fontSize: 13,\r\n        textAlign: 'center'\r\n    },\r\n    addModuleCustomBtnBG: {\r\n        backgroundColor: \"#ffe0b3\",\r\n        borderRadius: 3,\r\n        alignItems: 'center',\r\n        borderRadius: 10,\r\n        width: 220,\r\n        alignSelf: 'flex-end',\r\n        height: 23\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        posts: state.postReducer.posts,\r\n        isFetchingPosts: state.postReducer.isFetchingPosts,\r\n        addPostPending: state.postReducer.addPostPending,\r\n        user: state.userReducer.user,\r\n        uploadResponse: state.uploadReducer.response,\r\n        percent: state.uploadReducer.percent,\r\n        isUploadingFile: state.uploadReducer.isFetching\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        fetchGetPosts: (categoryId, body) => dispatch(fetchGetPosts(categoryId, body)),\r\n        sendPost: (categoryId, body) => dispatch(sendPost(categoryId, body)),\r\n        addUpdateUser: (user) => dispatch(addUpdateUser(user)),\r\n        uploadFileToStorage: (obj) => dispatch(uploadFileToStorage(obj)),\r\n        resetPosts: (categoryId) => dispatch(resetPosts(categoryId))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Posts));","\r\nimport { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const ADD_UPDATE_USER = 'ADD_UPDATE_USER';\r\n\r\nexport const addUpdateUser = (user) => ({\r\n    type: ADD_UPDATE_USER,\r\n    user: user\r\n});\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Iframe from 'react-iframe'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// Screen: GenericFileCard\r\nclass GenericFileCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            iFrameHeight: '300px'\r\n        }\r\n    }\r\n    render() {\r\n        const { params } = this.props.match;\r\n        return (\r\n            <div style={{ height: '100%' }}>\r\n                <Iframe url={'http://sitholewb.co.za/FilesAPI/api/Storage/' + params.id + '/view'}\r\n                    width=\"100%\"\r\n                    height={this.state.iFrameHeight}\r\n                    id=\"myId\"\r\n                    display=\"block\"\r\n                    allowFullScreen={true}\r\n                    position=\"relative\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            this.setState({ iFrameHeight: window.innerHeight + 'px' });\r\n        } catch{\r\n            this.setState({ iFrameHeight: '400px' });\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n// Styles\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    }\r\n});\r\nexport default withStyles(styles)(GenericFileCard);","// Imports: Dependencies\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AdSense from 'react-adsense';\r\n//import screens\r\nimport PostCard from './PostCard';\r\n\r\n// Imports: Redux Actions\r\nimport { addBookmark, removeBookmark, removeAllBookmark } from '../redux/actions/bookmarkActions';\r\n\r\n// Screen: Comments\r\nclass Bookmarks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextStartLoadDate: null,\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const postsView = this.props.bookmarkedPosts.map((resultValue) => {\r\n            return (\r\n                <div key={'post_view_' + resultValue.id}>\r\n                    <PostCard post={resultValue} />\r\n                </div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <span style={{ fontWeight: 'bold', fontSize: 20, backgroundColor: '#f9ecf2' }}>Posts you bookmarked.</span>\r\n                <Divider />\r\n                <br />\r\n                {postsView}\r\n                <AdSense.Google\r\n  client='ca-pub-7292810486004926'\r\n  slot='7806394673'\r\n/>\r\n            </div >\r\n        )\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n}\r\n\r\n// Styles\r\n\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        bookmarkedPosts: state.bookmarkReducer.bookmarkedPosts,\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        addBookmark: (post) => dispatch(addBookmark(post)),\r\n        removeBookmark: (postId) => dispatch(removeBookmark(postId)),\r\n        removeAllBookmark: () => dispatch(removeAllBookmark())\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Bookmarks);","import React, { Component } from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport EditIcon from '@material-ui/icons/Edit';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport { Link, HashRouter } from 'react-router-dom';\n\nimport Timetable from './screens/Timetable';\nimport PeriodDetails from './screens/PeriodDetails';\nimport University from './screens/University';\nimport Campus from './screens/Campus';\nimport Course from './screens/Course';\nimport Chats from './screens/Chats';\nimport Notes from './screens/Notes';\nimport Posts from './screens/Posts';\nimport GenericFileCard from './screens/GenericFileCard';\nimport Bookmarks from './screens/Bookmarks';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: 0,\n      period: {}\n    }\n  }\n\n  changeValue(newValue) {\n    this.setState({ value: newValue })\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <Route exact path=\"/\" component={Timetable} />\n        <Route exact path=\"/PeriodDetails\" component={PeriodDetails} />\n        <Route exact path=\"/University\" component={University} />\n        <Route path=\"/Campus/:id\" component={Campus} />\n        <Route path=\"/institutions/:id/type/:routeType\" component={Course} />\n        <Route path=\"/Chats\" component={Chats} />\n        <Route path=\"/Notes\" component={Notes} />\n        <Route path=\"/Posts/:id/code/:code\" component={Posts} />\n        <Route path=\"/file/:id/view\" component={GenericFileCard} />\n        <Route path=\"/Bookmarks\" component={Bookmarks} />\n\n        <BottomNavigation\n          showLabels\n          value={this.state.value}\n          style={{\n            width: '100%',\n            position: 'fixed',\n            bottom: 0,\n          }}\n        >\n\n          <BottomNavigationAction\n            component={Link}\n            to=\"/\"\n            label=\"Timetable\"\n            icon={<ScheduleIcon />}\n            onClick={() => { this.changeValue(0) }}\n          />\n\n          <BottomNavigationAction\n            component={Link}\n            to=\"/Chats\"\n            label=\"Chats\"\n            icon={<ForumIcon />}\n            onClick={() => { this.changeValue(1) }}\n          />\n\n          <BottomNavigationAction\n            component={Link}\n            to=\"/Notes\"\n            label=\"Notes\"\n            icon={<EditIcon />}\n            onClick={() => { this.changeValue(2) }}\n          />\n\n          <BottomNavigationAction\n            component={Link}\n            to=\"/Bookmarks\"\n            label=\"Bookmarks\"\n            icon={<BookmarkIcon />}\n            onClick={() => { this.changeValue(3) }}\n          />\n        </BottomNavigation>\n\n\n      </HashRouter>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  REQUEST_CALENDER,\r\n  RECEIVE_CALENDER,\r\n  ERROR_REQUESTING_CALENDER,\r\n  ADD_MODULE,\r\n  REMOVE_MODULE,\r\n  GET_CALENDER,\r\n  REMOVE_PERIOD,\r\n  RESOLVE_CONFLICT,\r\n  ERROR_RECEIVING_MODULES,\r\n  RECEIVE_MODULES,\r\n  SEARCH_MODULES,\r\n  GET_UNREAD_MESSAGES_COUNT,\r\n  SET_UNIVERSITY,\r\n  REPORT_CALENDER\r\n} from '../actions/calenderActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  timetable: [],\r\n  courses: [],\r\n  university: {\r\n    id: '0000-0000-000000000000',\r\n    name: 'Your Institution',\r\n    adsDetails: {\r\n      bannerAd: 'ca-app-pub-5631714136940575/3298705317',\r\n      nativeAdvancedAd: 'ca-app-pub-5631714136940575/4838053665'\r\n    }\r\n  },\r\n  campusId: '',\r\n  mustRefreshCalender: true,\r\n  error: '',\r\n  hasHttpError: false,\r\n  isFetching: false,\r\n  isSearching: false,\r\n  hasErrorSearching: false,\r\n  searchResults: []\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst calenderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case ERROR_RECEIVING_MODULES: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasErrorSearching: true,\r\n        isSearching: false\r\n      }\r\n    }\r\n\r\n    case SEARCH_MODULES: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasErrorSearching: false,\r\n        isSearching: true\r\n      }\r\n    }\r\n\r\n    case RECEIVE_MODULES: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        searchResults: action.data,\r\n        hasErrorSearching: false,\r\n        isSearching: false\r\n      }\r\n    }\r\n\r\n    //****************************************************************************************** */\r\n    case REQUEST_CALENDER: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        mustRefreshCalender: true,\r\n        hasHttpError: false,\r\n        isFetching: true\r\n      }\r\n    }\r\n\r\n    case GET_CALENDER: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        searchResults: [],\r\n        mustRefreshCalender: false,\r\n        hasHttpError: false,\r\n        isFetching: true\r\n      }\r\n    }\r\n\r\n    case RECEIVE_CALENDER: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        mustRefreshCalender: false,\r\n        timetable: action.data,\r\n        hasHttpError: false,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    case ERROR_REQUESTING_CALENDER: {\r\n      return {\r\n        ...state,\r\n        mustRefreshCalender: true,\r\n        error: action.error,\r\n        hasHttpError: true,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    case ADD_MODULE: {\r\n      return {\r\n        ...state,\r\n        mustRefreshCalender: true,\r\n        courses: [...state.courses, action.course]\r\n      }\r\n    }\r\n\r\n    case GET_UNREAD_MESSAGES_COUNT: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n\r\n    case SET_UNIVERSITY: {\r\n      return {\r\n        ...state,\r\n        university: action.university\r\n      }\r\n    }\r\n\r\n    case REMOVE_MODULE: {\r\n      return {\r\n        ...state,\r\n        mustRefreshCalender: true,\r\n        courses: state.courses.filter(item => item.id !== action.courseId),\r\n      }\r\n    }\r\n\r\n    case REMOVE_PERIOD: {\r\n      return {\r\n        ...state,\r\n        mustRefreshCalender: false,\r\n        timetable: removePeriod(state.timetable, action.periodId)\r\n      }\r\n    }\r\n\r\n    case RESOLVE_CONFLICT: {\r\n      return {\r\n        ...state,\r\n        mustRefreshCalender: false,\r\n        timetable: getTimetableWithResolvedConflictForGivenPeriod(action.periodId, action.course, state.timetable),\r\n      }\r\n    }\r\n\r\n    // Default\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst removePeriod = (timetable, periodId) => {\r\n  var emptyPeriod = { isEmptySlot: true };\r\n  var slots = new Array();\r\n  timetable.forEach(element => {\r\n    slots.push(element);\r\n  });\r\n  for (var i = 0; i < slots.length; i++) {\r\n    if (slots[i].monday.periodId === periodId) {\r\n      slots[i].monday = emptyPeriod;\r\n      break;\r\n    }\r\n    if (slots[i].tuesday.periodId === periodId) {\r\n      slots[i].tuesday = emptyPeriod;\r\n      break;\r\n    }\r\n    if (slots[i].wednesday.periodId === periodId) {\r\n      slots[i].wednesday = emptyPeriod;\r\n      break;\r\n    }\r\n    if (slots[i].thursday.periodId === periodId) {\r\n      slots[i].thursday = emptyPeriod;\r\n      break;\r\n    }\r\n    if (slots[i].friday.periodId === periodId) {\r\n      slots[i].friday = emptyPeriod;\r\n      break;\r\n    }\r\n  }\r\n  return slots;\r\n};\r\n\r\nconst getTimetableWithResolvedConflictForGivenPeriod = (periodId, course, timetable) => {\r\n  var slots = new Array();\r\n  timetable.forEach(element => {\r\n    slots.push(element);\r\n  });\r\n  for (var i = 0; i < slots.length; i++) {\r\n    if ((slots[i].monday.hasConflict === true || slots[i].monday.hasConflict === 'true')\r\n      && conflictsHasPeriodId(slots[i].monday.conflicts, periodId)) {\r\n      slots[i].monday = course;\r\n      break;\r\n    }\r\n    if ((slots[i].tuesday.hasConflict === true || slots[i].tuesday.hasConflict === 'true')\r\n      && conflictsHasPeriodId(slots[i].tuesday.conflicts, periodId)) {\r\n      slots[i].tuesday = course;\r\n      break;\r\n    }\r\n    if ((slots[i].wednesday.hasConflict === true || slots[i].wednesday.hasConflict === 'true')\r\n      && conflictsHasPeriodId(slots[i].wednesday.conflicts, periodId)) {\r\n      slots[i].wednesday = course;\r\n      break;\r\n    }\r\n    if ((slots[i].thursday.hasConflict === true || slots[i].thursday.hasConflict === 'true')\r\n      && conflictsHasPeriodId(slots[i].thursday.conflicts, periodId)) {\r\n      slots[i].thursday = course;\r\n      break;\r\n    }\r\n    if ((slots[i].friday.hasConflict === true || slots[i].friday.hasConflict === 'true')\r\n      && conflictsHasPeriodId(slots[i].friday.conflicts, periodId)) {\r\n      slots[i].friday = course;\r\n      break;\r\n    }\r\n  }\r\n  return slots;\r\n}\r\n\r\nconst conflictsHasPeriodId = (conflicts, periodId) => {\r\n  var isFound = false;\r\n  conflicts.forEach(element => {\r\n    if (element.periodId === periodId) {\r\n      isFound = true;\r\n    }\r\n  });\r\n  return isFound;\r\n};\r\n\r\n// Exports\r\nexport default calenderReducer;","import {\r\n    POST_FEEDBACK,\r\n    ERROR_POSTING_FEEDBACK,\r\n    POST_FEEDBACK_RESPONSE\r\n} from '../actions/feedbackActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  response: '',\r\n  error: '',\r\n  isFetching:false,\r\n  hasHttpError:false\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst feedbackReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case POST_FEEDBACK: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpError: false,\r\n        isFetching:true\r\n      }\r\n    }\r\n\r\n    case POST_FEEDBACK_RESPONSE: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        response: action.data,\r\n        hasHttpError: false,\r\n        isFetching:false\r\n      }\r\n    }\r\n\r\n    case ERROR_POSTING_FEEDBACK: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpError: true,\r\n        isFetching:false\r\n      }\r\n    }\r\n\r\n    // Default\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Exports\r\nexport default feedbackReducer;","import { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const POST_FEEDBACK = 'POST_FEEDBACK';\r\nexport const POST_FEEDBACK_RESPONSE = 'POST_FEEDBACK_RESPONSE';\r\nexport const ERROR_POSTING_FEEDBACK = 'ERROR_POSTING_FEEDBACK';\r\n\r\nexport const postFeedback = () => ({\r\n    type: POST_FEEDBACK\r\n});\r\n\r\nexport const postFeedbackResponse = (data) => ({\r\n    type: POST_FEEDBACK_RESPONSE,\r\n    data: data\r\n});\r\n\r\nexport const errorPostingFeedback = (error) => ({\r\n    type: ERROR_POSTING_FEEDBACK,\r\n    error: error\r\n});\r\n\r\nexport function reportTimetableError(body) {\r\n    var url = BASE_URL_CoursesAPI + 'StudentRequests';\r\n    return dispatch => {\r\n        dispatch(postFeedback());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(postFeedbackResponse(json));\r\n            }).catch(err => {\r\n                dispatch(errorPostingFeedback(err));\r\n            });\r\n    }\r\n}\r\n","import {\r\n  GET_CAMPUSES,\r\n  RECEIVE_CAMPUSES,\r\n  ERROR_GETTING_CAMPUSES\r\n} from '../actions/campusActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  error: '',\r\n  isFetching: false,\r\n  campuses:[]\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst campusesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case GET_CAMPUSES: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpError: false,\r\n        isFetching: true\r\n      }\r\n    }\r\n\r\n    case RECEIVE_CAMPUSES: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        campuses: action.data,\r\n        hasHttpError: false,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    case ERROR_GETTING_CAMPUSES: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpError: true,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    // Default\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Exports\r\nexport default campusesReducer;","import {\r\n  GET_UNIVERSITIES,\r\n  RECEIVE_UNIVERSITIES,\r\n  ERROR_GETTING_UNIVERSITIES\r\n} from '../actions/universityActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  error: '',\r\n  isFetching: false,\r\n  universities:[]\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst universitiesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case GET_UNIVERSITIES: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpError: false,\r\n        isFetching: true\r\n      }\r\n    }\r\n\r\n    case RECEIVE_UNIVERSITIES: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        universities: action.data,\r\n        hasHttpError: false,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    case ERROR_GETTING_UNIVERSITIES: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpError: true,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    // Default\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Exports\r\nexport default universitiesReducer;","import {\r\n    ADD_BOOKMARK,\r\n    REMOVE_BOOKMARK,\r\n    REMOVE_ALL_BOOKMARK\r\n} from '../actions/bookmarkActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n    bookmarkedPosts: [],\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst bookmarkReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_BOOKMARK: {\r\n            return {\r\n                ...state,\r\n                bookmarkedPosts: [...state.bookmarkedPosts, action.post],\r\n            }\r\n        }\r\n\r\n        case REMOVE_BOOKMARK: {\r\n            return {\r\n                ...state,\r\n                bookmarkedPosts: state.bookmarkedPosts.filter(item => item.id !== action.postId),\r\n            }\r\n        }\r\n\r\n        case REMOVE_ALL_BOOKMARK: {\r\n            return {\r\n                ...state,\r\n                bookmarkedPosts: [],\r\n            }\r\n        }\r\n\r\n        // Default\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// Exports\r\nexport default bookmarkReducer;","import {\r\n    UPLOAD_FILE,\r\n    UPLOAD_FILE_RESPONSE,\r\n    UPLOAD_FILE_PROGRESS,\r\n    ERROR_UPLOADING_FILE\r\n} from '../actions/uploadActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n    response: '',\r\n    error: '',\r\n    isFetching: false,\r\n    hasHttpError: false,\r\n    percent:0\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst uploadReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case UPLOAD_FILE: {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                hasHttpError: false,\r\n                isFetching: true\r\n            }\r\n        }\r\n\r\n        case UPLOAD_FILE_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                hasHttpError: false,\r\n                isFetching: true,\r\n                percent: action.percent\r\n            }\r\n        }\r\n\r\n        case UPLOAD_FILE_RESPONSE: {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                response: action.data,\r\n                hasHttpError: false,\r\n                isFetching: false\r\n            }\r\n        }\r\n\r\n        case ERROR_UPLOADING_FILE: {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                hasHttpError: true,\r\n                isFetching: false\r\n            }\r\n        }\r\n\r\n        // Default\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// Exports\r\nexport default uploadReducer;","import {\r\n    POST_COMMENT,\r\n    POST_COMMENT_RESPONSE,\r\n    ERROR_POSTING_COMMENT,\r\n    GET_COMMENTS,\r\n    RECEIVE_COMMENTS,\r\n    ERROR_RECEIVING_COMMENTS,\r\n    LIKE_COMMENT,\r\n    LIKE_COMMENT_RESPONSE,\r\n    ERROR_LIKING_COMMENT\r\n} from '../actions/commentActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  comments: [],\r\n  response:'',\r\n  error: '',\r\n  isFetchingComments:false,\r\n  hasHttpErrorFetchingComments: false,\r\n  likeCommentPendingResponse:false,\r\n  hasHttpErrorLikingComment: false,\r\n  postCommentPending:false,\r\n  hasHttpErrorPostingComment: false  \r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst commentReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    //*********************************POST_COMMENT********************************************* */\r\n    case POST_COMMENT: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorPostingComment: false,\r\n        postCommentPending:true\r\n      }\r\n    }\r\n\r\n    case POST_COMMENT_RESPONSE: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        response: action.data,\r\n        hasHttpErrorPostingComment: false,\r\n        postCommentPending:false\r\n      }\r\n    }\r\n\r\n    case ERROR_POSTING_COMMENT: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpErrorPostingComment: true,\r\n        postCommentPending:false\r\n      }\r\n    }\r\n    //********************************END:: POST_COMMENT ::END***************************************** */\r\n    //*********************************GET_COMMENTS********************************************* */\r\n    case GET_COMMENTS: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorFetchingComments: false,\r\n        isFetchingComments:true\r\n      }\r\n    }\r\n\r\n    case RECEIVE_COMMENTS: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        comments: action.data,\r\n        hasHttpErrorFetchingComments: false,\r\n        isFetchingComments:false\r\n      }\r\n    }\r\n\r\n    case ERROR_RECEIVING_COMMENTS: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpErrorFetchingComments: true,\r\n        isFetchingComments:false\r\n      }\r\n    }\r\n    //********************************END:: POST_COMMENT ::END***************************************** */\r\n    //*********************************LIKE_COMMENT**************************************************** */\r\n\r\n    case LIKE_COMMENT: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorLikingComment: false,\r\n        likeCommentPendingResponse:true\r\n      }\r\n    }\r\n\r\n    case LIKE_COMMENT_RESPONSE: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorLikingComment: false,\r\n        likeCommentPendingResponse:false\r\n      }\r\n    }\r\n\r\n    case ERROR_LIKING_COMMENT: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpErrorLikingComment: true,\r\n        likeCommentPendingResponse:false\r\n      }\r\n    }\r\n    //********************************END:: LIKE_COMMENT ::END**************************************** */\r\n    // Default\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Exports\r\nexport default commentReducer;","import {\r\n  ADD_POST,\r\n  ADD_POST_RESPONSE,\r\n  ERROR_ADDING_POST,\r\n  GET_POSTS,\r\n  RECEIVE_POSTS,\r\n  ERROR_RECEIVING_POSTS,\r\n  LIKE_POST,\r\n  LIKE_POST_RESPONSE,\r\n  ERROR_LIKING_POST,\r\n  RESET_POSTS\r\n} from '../actions/postActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  posts: [],\r\n  response: '',\r\n  error: '',\r\n  isFetchingPosts: false,\r\n  hasHttpErrorFetchingPosts: false,\r\n  likePostPendingResponse: false,\r\n  hasHttpErrorLikingPost: false,\r\n  addPostPending: false,\r\n  hasHttpErrorAddingPost: false,\r\n  categoryId: ''\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    //*********************************ADD_POST********************************************* */\r\n    case ADD_POST: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorAddingPost: false,\r\n        addPostPending: true\r\n      }\r\n    }\r\n\r\n    case ADD_POST_RESPONSE: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        posts: [action.data, ...state.posts],\r\n        hasHttpErrorAddingPost: false,\r\n        addPostPending: false\r\n      }\r\n    }\r\n\r\n    case ERROR_ADDING_POST: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpErrorAddingPost: true,\r\n        addPostPending: false\r\n      }\r\n    }\r\n    //********************************END:: ADD_POST ::END***************************************** */\r\n    //*********************************GET_POSTS********************************************* */\r\n    case GET_POSTS: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorFetchingPosts: false,\r\n        isFetchingPosts: true,\r\n        categoryId: action.categoryId\r\n      }\r\n    }\r\n\r\n    case RESET_POSTS: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        posts: []\r\n      }\r\n    }\r\n\r\n    case RECEIVE_POSTS: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        posts: appendOrReplacePosts(state.posts, action.data),\r\n        hasHttpErrorFetchingPosts: false,\r\n        isFetchingPosts: false\r\n      }\r\n    }\r\n\r\n    case ERROR_RECEIVING_POSTS: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpErrorFetchingPosts: true,\r\n        isFetchingPosts: false\r\n      }\r\n    }\r\n    //********************************END:: GET_POSTS ::END***************************************** */\r\n    //*********************************LIKE_POST**************************************************** */\r\n\r\n    case LIKE_POST: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorLikingPost: false,\r\n        likePostPendingResponse: true\r\n      }\r\n    }\r\n\r\n    case LIKE_POST_RESPONSE: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        response: action.data,\r\n        hasHttpErrorLikingPost: false,\r\n        likePostPendingResponse: false\r\n      }\r\n    }\r\n\r\n    case ERROR_LIKING_POST: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpErrorLikingPost: true,\r\n        likePostPendingResponse: false\r\n      }\r\n    }\r\n    //********************************END:: LIKE_POST ::END**************************************** */\r\n    // Default\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst appendOrReplacePosts = (oldPosts, newPosts) => {\r\n  if (oldPosts.length > 0 && newPosts.length > 0) {\r\n    if (oldPosts[0].categoryId === newPosts[0].categoryId) {\r\n      return [...oldPosts, ...newPosts];\r\n    } else {\r\n      return [...newPosts];\r\n    }\r\n  } else if (newPosts.length > 0) {\r\n    return [...newPosts];\r\n  } else {\r\n    return [...oldPosts];\r\n  }\r\n};\r\n\r\n// Exports\r\nexport default postReducer;","import {\r\n    ADD_NOTE,\r\n    REMOVE_NOTE,\r\n    UPDATE_NOTE\r\n} from '../actions/noteActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n    notes: [],\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst noteReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_NOTE: {\r\n            return {\r\n                ...state,\r\n                notes: [...state.notes, action.data],\r\n            }\r\n        }\r\n\r\n        case UPDATE_NOTE: {\r\n            return {\r\n                ...state,\r\n                notes: updateNotes(state.notes, action.data),\r\n            }\r\n        }\r\n\r\n        case REMOVE_NOTE: {\r\n            return {\r\n                ...state,\r\n                notes: state.notes.filter(item => item.id !== action.noteId),\r\n            }\r\n        }\r\n\r\n        // Default\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nconst updateNotes = (notes, newNote) => {\r\n    let newNotes = [];\r\n    notes.forEach(element => {\r\n        if (element.id === newNote.id) {\r\n            newNotes.push(newNote);\r\n        } else {\r\n            newNotes.push(element);\r\n        }\r\n    });\r\n    return newNotes;\r\n};\r\n\r\n// Exports\r\nexport default noteReducer;","import {\r\n    ADD_UPDATE_USER\r\n} from '../actions/userActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n    user: {\r\n        fullnames: 'Anonymous User',\r\n        userId: 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        }) + '_random'\r\n    },\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_UPDATE_USER: {\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n        }\r\n\r\n        // Default\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nconst createGuid = () => {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n};\r\n\r\n// Exports\r\nexport default userReducer;","// Imports: Dependencies\r\nimport { combineReducers } from 'redux';\r\n\r\n// Imports: Reducers\r\nimport calenderReducer from './calenderReducer';\r\nimport feedbackReducer from './feedbackReducer';\r\nimport campusesReducer from './campusesReducer';\r\nimport universitiesReducer from './universitiesReducer';\r\nimport bookmarkReducer from './bookmarkReducer';\r\nimport uploadReducer from './uploadReducer';\r\nimport commentReducer from './commentReducer';\r\nimport postReducer from './postReducer';\r\nimport noteReducer from './noteReducer';\r\nimport userReducer from './userReducer';\r\n\r\n// Redux: Root Reducer\r\nconst rootReducer = combineReducers({\r\n  calenderReducer: calenderReducer,\r\n  feedbackReducer: feedbackReducer,\r\n  campusesReducer: campusesReducer,\r\n  universitiesReducer: universitiesReducer,\r\n  bookmarkReducer: bookmarkReducer,\r\n  uploadReducer: uploadReducer,\r\n  commentReducer: commentReducer,\r\n  noteReducer: noteReducer,\r\n  postReducer: postReducer,\r\n  userReducer: userReducer\r\n});\r\n\r\n// Exports\r\nexport default rootReducer;","// Imports: Dependencies\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport localForage from \"localforage\";\r\n// Imports: Redux\r\nimport rootReducer from '../reducers/index';\r\n\r\n// Middleware: Redux Persist Config\r\nconst persistConfig = {\r\n  // Root?\r\n  key: 'root',\r\n  // Storage Method (React Native)\r\n  storage: localForage,\r\n  // Whitelist (Save Specific Reducers)\r\n  whitelist: [\r\n    'calenderReducer',\r\n    'bookmarkReducer',\r\n    'noteReducer',\r\n    'userReducer',\r\n  ],\r\n  // Blacklist (Don't Save Specific Reducers)\r\n  blacklist: [\r\n    'feedbackReducer',\r\n    'campusesReducer',\r\n    'universitiesReducer',\r\n    'commentReducer',\r\n    'postReducer',\r\n  ],\r\n};\r\n\r\n// Middleware: Redux Persist Persisted Reducer\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n// Redux: Store\r\nconst store = createStore(\r\n  persistedReducer,\r\n  applyMiddleware(\r\n    createLogger(),\r\n    thunk\r\n  ),\r\n);\r\n\r\n// Middleware: Redux Persist Persister\r\nlet persistor = persistStore(store);\r\n\r\n// Exports\r\nexport {\r\n  store,\r\n  persistor,\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store/store'\nimport { PersistGate } from 'redux-persist/es/integration/react'\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}