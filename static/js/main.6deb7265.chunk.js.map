{"version":3,"sources":["screens/Period.js","screens/PeriodTime.js","screens/PeriodDay.js","shared/Urls.js","redux/actions/calenderActions.js","screens/Timetable.js","screens/PeriodDetails.js","redux/actions/universityActions.js","screens/ActivitySpinner.js","screens/University.js","screens/Campus.js","redux/actions/campusActions.js","screens/Course.js","screens/Chats.js","screens/Notes.js","redux/actions/noteActions.js","screens/MediaCard.js","redux/actions/commentActions.js","screens/CommentCard.js","screens/Comments.js","redux/actions/bookmarkActions.js","redux/actions/uploadActions.js","screens/PostCard.js","redux/actions/postActions.js","screens/Posts.js","redux/actions/userActions.js","screens/GenericFileCard.js","screens/Bookmarks.js","screens/Feedback.js","redux/actions/feedbackActions.js","App.js","serviceWorker.js","redux/reducers/calenderReducer.js","redux/reducers/feedbackReducer.js","redux/reducers/campusesReducer.js","redux/reducers/universitiesReducer.js","redux/reducers/bookmarkReducer.js","redux/reducers/uploadReducer.js","redux/reducers/commentReducer.js","redux/reducers/postReducer.js","redux/reducers/noteReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store/store.js","index.js"],"names":["Period","classes","this","props","period","isEmptySlot","Grid","item","xs","style","backgroundColor","bColor","Paper","onClick","goToDetails","className","paper","height","width","whiteSpace","color","backgroungColor","fontWeight","courseCode","fontSize","venueName","history","push","periodId","Component","withStyles","theme","root","flexGrow","padding","spacing","textAlign","palette","text","secondary","withRouter","PeriodTime","startTime","hour","minutes","endTime","PeriodDay","day","BASE_URL_CoursesAPI","BASE_URL_PostsAPI","receiveModules","data","type","receiveCalender","setUniversity","university","fetchUniversityFromBackEnd","universityId","url","dispatch","fetch","method","headers","then","response","json","catch","err","id","name","adsDetails","bannerAd","nativeAdvancedAd","getTimetable","body","getState","calenderReducer","mustRefreshCalender","JSON","stringify","coursesIds","error","fetchCalender","timetable","Timetable","count","timetableView","map","timetableRow","key","periodSlotId","container","monday","tuesday","wednesday","thursday","friday","Chip","variant","size","label","goToFeedback","minHeight","borderRadius","addModule","undefined","timetablePerCampus","courses","course","getCalender","getOrUpdateTimetable","connect","state","PeriodDetails","hasConflict","periodConflictsView","conflicts","resultValue","ListItem","listItem","dense","button","ListItemText","primary","courseName","ListItemSecondaryAction","Button","updatePeriod","Divider","Fragment","List","Card","CardActionArea","CardContent","Typography","gutterBottom","component","CardActions","goToChat","deletePeriod","resolveConflict","setState","removePeriod","courseId","i","length","params","match","getPeriod","fetchUniversities","ActivitySpinner","display","justifyContent","alignItems","CircularProgress","disableShrink","University","universitiesView","universities","goToCampusesOrModules","IconButton","edge","aria-label","isFetching","universitiesReducer","updateUniversity","Campus","campuses","goToModules","campus","fetchCampuses","campusesReducer","Course","searchText","doneSearching","hasPressedSearch","searchResultsView","showSnackbar","snackbarText","isSearching","searchResults","code","getActionButton","coursesView","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","handleClose","message","autoHideDuration","action","TextField","margin","placeholder","fullWidth","onChange","onChangeSearchText","value","InputLabelProps","shrink","searchModule","target","searchModules","routeType","coursesAlreadyExists","courseExists","addCourse","removeCourse","newCourses","fetchAndSetUniversity","removeModule","hasErrorSearching","campusId","routPath","fetchSearchModules","Chats","openPosts","postId","getNumberOfUnreadMessages","Notes","title","isEdit","actionType","noteToView","dateCreated","Date","createdDate","displayDateCreated","toDateString","toLocaleTimeString","dateModified","lastModifiedDate","displayDateModified","nameHeader","dates","toString","onChangeTitleText","multiline","rows","onChangeBodyText","containerActions","addOrEditNote","notesView","notes","viewNote","deleteNote","replace","c","r","Math","random","note","noteToEdit","createGuid","addNote","updateNote","removeNote","noteReducer","noteId","flexWrap","flexDirection","mainContainer","MediaCard","isVideoOrAudio","file","contentType","includes","isImage","playing","controls","src","icon","clickable","openFile","deleteIcon","playerWrapper","position","paddingTop","reactPlayer","top","left","fetchCommentsForPost","console","log","CommentCard","post","totalLikes","date","comment","addedDate","displayDate","CardHeader","avatar","Avatar","getUserFullNames","subheader","files","disableSpacing","likeButtonBackgroundColor","handlePostLike","likes","addedBy","fullnames","likeCommentById","user","exist","list","userId","commentText","addPostPending","fileIsAttached","AddComment","showAddComment","showComments","totalComments","uploadFileToStorage","documentObject","uploadResponse","fileName","likeText","existOnLikes","userReducer","commentId","media","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","Comments","isFetchingComments","commentsView","comments","fetchComments","commentReducer","addBookmark","removeBookmark","fileObject","formData","FormData","append","BASE_URL_FilesAPI","uploadFileResponse","errorUploadingFile","PostCard","fileUpload","React","createRef","showFileUpload","bind","onFileChange","cardStyle","toggleShowAddComment","handleBookmarkClick","bookmarkButtonBackgroundColor","toggleComments","onChangeText","postText","ref","onDelete","removeFile","sentComment","containerComments","e","current","click","likePostById","existOnBookmarks","bookmarkedPosts","bookmarkReducer","uploadReducer","percent","isUploadingFile","removeAllBookmark","obj","Posts","noMorePosts","isFetchingPosts","posts","sendPost","loadMorePosts","fetchGetPosts","resetPosts","postReducer","categoryId","getPosts","addUpdateUser","removeFileButton","removeFileCustomBtnBG","alignSelf","addModuleButton","addModuleCustomBtnBG","GenericFileCard","iFrameHeight","allowFullScreen","window","innerHeight","Bookmarks","nextStartLoadDate","postsView","Google","client","slot","Feedback","selectedId","feedbackText","isLoading","selectModuleToReport","sendFeedBack","feedbackFor","requestType","reportTimetableError","App","newValue","exact","path","BottomNavigation","showLabels","bottom","BottomNavigationAction","Link","to","changeValue","Boolean","location","hostname","initialState","hasHttpError","emptyPeriod","slots","Array","forEach","element","getTimetableWithResolvedConflictForGivenPeriod","conflictsHasPeriodId","isFound","filter","feedbackReducer","hasHttpErrorFetchingComments","likeCommentPendingResponse","hasHttpErrorLikingComment","postCommentPending","hasHttpErrorPostingComment","hasHttpErrorFetchingPosts","likePostPendingResponse","hasHttpErrorLikingPost","hasHttpErrorAddingPost","appendOrReplacePosts","oldPosts","newPosts","updateNotes","newNote","newNotes","rootReducer","combineReducers","persistConfig","storage","localForage","whitelist","blacklist","persistedReducer","persistReducer","store","createStore","applyMiddleware","createLogger","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6deb7265.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Period extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        if (this.props.period.isEmptySlot === false || this.props.period.isEmptySlot === 'false') {\r\n            return (\r\n                <Grid item xs={2} style={{ backgroundColor: this.props.bColor }}>\r\n                    <Paper onClick={() => { this.goToDetails() }} className={classes.paper} style={{ height: '100%', width: '100%', whiteSpace: 'unset', backgroundColor: this.props.period.color.backgroungColor }}>\r\n                        <span style={{ fontWeight: 'bold' }}> {this.props.period.courseCode}</span>\r\n                        <br />\r\n                        <span style={{ fontSize: 7 }}> {this.props.period.venueName}</span>\r\n                    </Paper>\r\n                </Grid>\r\n            )\r\n        } else {\r\n            return (\r\n                <Grid item xs={2} style={{ height: '100%', width: '100%', backgroundColor: this.props.bColor }}>\r\n                    <Paper className={classes.paper} style={{ height: '100%', width: '100%', backgroundColor: this.props.bColor }}></Paper>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n\r\n    goToDetails() {\r\n        this.props.history.push(\"/PeriodDetails/\" + this.props.period.periodId);\r\n    }\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 10,\r\n    },\r\n});\r\n\r\n//exports\r\nexport default (withStyles(useStyles)(withRouter(Period)));","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Screen: Counter\r\nclass PeriodTime extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Grid item xs={2} style={{ height: '100%', width: '100%' }}>\r\n                <Paper className={classes.paper} style={{ height: '100%', width: '100%' }}>\r\n                    <span style={{ fontWeight: 'bold' }}>{this.props.startTime.hour}:{this.props.startTime.minutes}</span>\r\n                    <br />\r\n                    To\r\n                    <br />\r\n                    <span style={{ fontWeight: 'bold' }}>{this.props.endTime.hour}:{this.props.endTime.minutes}</span>\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n// Styles\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 10,\r\n    },\r\n});\r\nexport default withStyles(styles)(PeriodTime);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// Screen: Counter\r\nclass PeriodDay extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Grid item xs={2} style={{ height: '100%', width: '100%', }}>\r\n                <Paper className={classes.paper} style={{ height: '100%', width: '100%' }}>\r\n                    <span style={{ fontWeight: 'bold' }}>{this.props.day}</span>\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n// Styles\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 10,\r\n        backgroundColor: '#9fd1d1'\r\n    },\r\n});\r\nexport default withStyles(styles)(PeriodDay);","export const BASE_URL_CoursesAPI = 'http://sitholewb.co.za/CoursesAPI/api/';\r\nexport const BASE_URL_PostsAPI = 'http://sitholewb.co.za/PostsAPI/api/';\r\nexport const BASE_URL_FilesAPI = 'http://sitholewb.co.za/FilesAPI/api/';","\r\nimport { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const REQUEST_CALENDER = 'REQUEST_CALENDER';\r\nexport const RECEIVE_CALENDER = 'RECEIVE_CALENDER';\r\nexport const ERROR_REQUESTING_CALENDER = 'ERROR_REQUESTING_CALENDER';\r\nexport const REPORT_CALENDER = 'REPORT_CALENDER';\r\nexport const ADD_MODULE = 'ADD_MODULE';\r\nexport const REMOVE_MODULE = 'REMOVE_MODULE';\r\nexport const GET_CALENDER = 'GET_CALENDER';\r\nexport const REMOVE_PERIOD = 'REMOVE_PERIOD';\r\nexport const RESOLVE_CONFLICT = 'RESOLVE_CONFLICT';\r\nexport const SEARCH_MODULES = 'SEARCH_MODULES';\r\nexport const RECEIVE_MODULES = 'RECEIVE_MODULES';\r\nexport const ERROR_RECEIVING_MODULES = 'ERROR_RECEIVING_MODULES';\r\nexport const GET_UNREAD_MESSAGES_COUNT = 'GET_UNREAD_MESSAGES_COUNT';\r\nexport const SET_UNIVERSITY = 'SET_UNIVERSITY';\r\n\r\n\r\nexport const receiveModules = (data) => ({\r\n    type: RECEIVE_MODULES,\r\n    data: data\r\n});\r\n\r\nexport const searchModules = () => ({\r\n    type: SEARCH_MODULES\r\n});\r\n\r\nexport const errorReceivingModules = (error) => ({\r\n    type: ERROR_RECEIVING_MODULES,\r\n    error: error\r\n});\r\n\r\nexport const requestCalender = (data) => ({\r\n    type: REQUEST_CALENDER,\r\n    data: data\r\n});\r\n\r\nexport const getCalender = () => ({\r\n    type: GET_CALENDER\r\n});\r\n\r\nexport const receiveCalender = (data) => ({\r\n    type: RECEIVE_CALENDER,\r\n    data: data\r\n});\r\n\r\nexport const errorRequestingCalender = (error) => ({\r\n    type: REQUEST_CALENDER,\r\n    error: error\r\n});\r\n\r\nexport const reportCalender = (data) => ({\r\n    type: REPORT_CALENDER,\r\n    data: data\r\n});\r\n\r\nexport const addModule = (course) => ({\r\n    type: ADD_MODULE,\r\n    course: course\r\n});\r\n\r\nexport const getNumberOfUnreadMessages = (courses) => ({\r\n    type: GET_UNREAD_MESSAGES_COUNT,\r\n    courses: courses\r\n});\r\n\r\nexport const removeModule = (courseId) => ({\r\n    type: REMOVE_MODULE,\r\n    courseId: courseId\r\n});\r\n\r\nexport const removePeriod = (periodId) => ({\r\n    type: REMOVE_PERIOD,\r\n    periodId: periodId\r\n});\r\n\r\nexport const resolveConflict = (periodId, course) => ({\r\n    type: RESOLVE_CONFLICT,\r\n    periodId: periodId,\r\n    course: course\r\n});\r\n\r\nexport const setUniversity = (university) => ({\r\n    type: SET_UNIVERSITY,\r\n    university: university\r\n});\r\n\r\nexport function fetchUniversityFromBackEnd(universityId) {\r\n    var url = BASE_URL_CoursesAPI + 'Universities/' + universityId;\r\n    return dispatch => {\r\n        dispatch(searchModules());\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(setUniversity(json));\r\n            }).catch(err => {\r\n                dispatch(setUniversity({\r\n                    id: '0000-0000-000000000000',\r\n                    name: 'Your Institution',\r\n                    adsDetails: {\r\n                        bannerAd: 'ca-app-pub-5631714136940575/3298705317',\r\n                        nativeAdvancedAd: 'ca-app-pub-5631714136940575/4838053665'\r\n                    }\r\n                }));\r\n            });\r\n    }\r\n}\r\n\r\nexport function fetchSearchModules(campusId, body, routPath) {\r\n    var url = BASE_URL_CoursesAPI + 'Courses/' + routPath + '/' + campusId + '/search';\r\n    return dispatch => {\r\n        dispatch(searchModules());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(receiveModules(json));\r\n            }).catch(err => {\r\n                dispatch(errorReceivingModules(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function fetchCalender(body) {\r\n    var url = BASE_URL_CoursesAPI + 'Timetable/universities/' + body.universityId + '/slots';\r\n    return dispatch => {\r\n        dispatch(requestCalender());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body.coursesIds),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(receiveCalender(json));\r\n            }).catch(err => {\r\n                dispatch(errorRequestingCalender(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function getTimetable(body) {\r\n    return (dispatch, getState) => {\r\n        if (body.universityId === '0000-0000-000000000000') {\r\n            return dispatch(receiveCalender([]));\r\n        }\r\n        const mustRefreshCalender = getState().calenderReducer.mustRefreshCalender;\r\n        if (mustRefreshCalender === true) {\r\n            return dispatch(fetchCalender(body))\r\n        } else {\r\n            dispatch(getCalender());\r\n            var timetable = getState().calenderReducer.timetable;\r\n            return dispatch(receiveCalender(timetable));\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchAndSetUniversity(universityId) {\r\n    return (dispatch, getState) => {\r\n        const university = getState().calenderReducer.university;\r\n        if (university === null) {\r\n            return dispatch(fetchUniversityFromBackEnd(universityId))\r\n        } else if (university.id !== universityId && universityId !== '0000-0000-000000000000') {\r\n            return dispatch(fetchUniversityFromBackEnd(universityId))\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Period from './Period';\r\nimport PeriodTime from './PeriodTime';\r\nimport PeriodDay from './PeriodDay';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n// Imports: Redux Actions\r\nimport { getTimetable } from '../redux/actions/calenderActions';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 10,\r\n    },\r\n});\r\n\r\nclass Timetable extends Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        let count = 0;\r\n        let bColor = '#f1f1f1';\r\n        const timetableView = this.props.timetable.map((timetableRow) => {\r\n            count++;\r\n            if (count % 2 === 0) {\r\n                bColor = '#e0ebeb'\r\n            } else {\r\n                bColor = '#f1f1f1';\r\n            }\r\n            return (\r\n                <Grid key={timetableRow.periodSlotId} container item xs={12} spacing={1} style={{ backgroundColor: bColor }}>\r\n                    <PeriodTime key={'times_' + timetableRow.periodSlotId} bColor={bColor} startTime={timetableRow.startTime} endTime={timetableRow.endTime} />\r\n                    <Period key={'monday_' + timetableRow.periodSlotId} bColor={bColor} period={timetableRow.monday} />\r\n                    <Period key={'tuesday_' + timetableRow.periodSlotId} bColor={bColor} period={timetableRow.tuesday} />\r\n                    <Period key={'wednesday_' + timetableRow.periodSlotId} bColor={bColor} period={timetableRow.wednesday} />\r\n                    <Period key={'thursday_' + timetableRow.periodSlotId} bColor={bColor} period={timetableRow.thursday} />\r\n                    <Period key={'friday_' + timetableRow.periodSlotId} bColor={bColor} period={timetableRow.friday} />\r\n                </Grid>\r\n            )\r\n        });\r\n        return (\r\n            <div className={classes.root}>\r\n                <div>\r\n                    <span style={{ color: 'red', fontWeight: 'bold', fontSize: 11 }}>NOTE: </span>\r\n                    <span style={{ color: 'red', fontSize: 11 }}>It your responsibility to confirm/validate timetable below!</span>\r\n                    <Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"Report incorrect/missing Timetable\" onClick={() => { this.goToFeedback() }} />\r\n                </div>\r\n                <br />\r\n                <Grid container spacing={1}>\r\n                    <Grid key={'row_days'} container item xs={12} spacing={1} style={{ backgroundColor: bColor }}>\r\n                        <Grid item xs={2} style={{ height: '100%', width: '100%', minHeight: 30 }}>\r\n                            <Paper className={classes.paper} style={{ height: '100%', width: '100%', backgroundColor: 'green', borderRadius: 20 }}\r\n                                onClick={() => { this.addModule() }}\r\n                            >\r\n                                <span style={{ fontWeight: 'bold' }}>Add Module</span>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <PeriodDay key={'monday_'} bColor={bColor} day={'Mon'} />\r\n                        <PeriodDay key={'tuesday_'} bColor={bColor} day={'Tue'} />\r\n                        <PeriodDay key={'wednesday_'} bColor={bColor} day={'Wed'} />\r\n                        <PeriodDay key={'thursday_'} bColor={bColor} day={'Thur'} />\r\n                        <PeriodDay key={'friday_'} bColor={bColor} day={'Fri'} />\r\n                    </Grid>\r\n                    {timetableView}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    goToFeedback(){\r\n        this.props.history.push('/Feedback');\r\n    }\r\n\r\n    addModule() {\r\n        if (this.props.university === null || this.props.university === undefined || this.props.university.id === undefined\r\n            || this.props.university.id === '' || this.props.university.id === '0000-0000-000000000000') {\r\n            this.props.history.push('/University')\r\n        } else if (this.props.university.timetablePerCampus === true || this.props.university.timetablePerCampus === 'true') {\r\n            this.props.history.push('/Campus/' + this.props.university.id)\r\n        } else {\r\n            this.props.history.push('/institutions/' + this.props.university.id + '/type/universities')\r\n        }\r\n    }\r\n    getOrUpdateTimetable() {\r\n        if (this.props.university === null || this.props.university === undefined || this.props.university.id === '' ||\r\n            this.props.university.id === undefined || this.props.university.id === '0000-0000-000000000000') {\r\n            return;\r\n        }\r\n        let coursesIds = [];\r\n        for (let course of this.props.courses) {\r\n            coursesIds.push(course.id);\r\n        }\r\n        this.props.getCalender({\r\n            universityId: this.props.university.id,\r\n            coursesIds: coursesIds\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.getOrUpdateTimetable();\r\n    }\r\n    componentDidMount() {\r\n        this.getOrUpdateTimetable();\r\n    }\r\n\r\n}\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        timetable: state.calenderReducer.timetable,\r\n        university: state.calenderReducer.university,\r\n        courses: state.calenderReducer.courses\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        getCalender: (body) => dispatch(getTimetable(body))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(Timetable)));\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\n// Imports: Redux Actions\r\nimport { resolveConflict, removePeriod } from '../redux/actions/calenderActions';\r\n\r\n// Screen: PeriodDetails\r\nclass PeriodDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hasConflict: false,\r\n            period: {}\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        if (this.state.hasConflict === true || this.state.hasConflict === 'true') {\r\n            const periodConflictsView = this.state.period.conflicts.map((resultValue) => {\r\n                return (\r\n                    <span key={'span_' + resultValue.periodId}>\r\n                        <ListItem className={classes.listItem} key={resultValue.periodId} dense button >\r\n                            <ListItemText id={'text_' + resultValue.periodId}\r\n                                primary={resultValue.courseCode}\r\n                                secondary={resultValue.courseName}\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => this.updatePeriod(resultValue)}>\r\n                                    Select\r\n                                </Button>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        <br />\r\n                    </span>\r\n                )\r\n            });\r\n            return (\r\n                <React.Fragment>\r\n                    <span style={{ fontWeight: 'bold', fontSize: 20, backgroundColor: '#f9ecf2' }}>Resolve conflict by selecting one module.</span>\r\n                    <List>\r\n                        {periodConflictsView}\r\n                    </List>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Card className={classes.root}>\r\n                    <CardActionArea>\r\n                        <CardContent>\r\n                            <Typography style={{ textAlign: 'center' }} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {this.state.period.courseCode}\r\n                            </Typography>\r\n                            <Typography style={{ textAlign: 'center' }} variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n                                {this.state.period.courseName}\r\n                            </Typography>\r\n                            <Divider />\r\n                            <Typography>\r\n                                <br />\r\n                                <br />\r\n                            </Typography>\r\n                            <Typography style={{ textAlign: 'center' }} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                <span style={{ fontWeight: 'bold' }}>Venue: </span> {this.state.period.venueName}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                        <Button size=\"small\" variant=\"contained\" onClick={() => { this.props.history.push('/') }}>\r\n                            Back to Timetable\r\n                    </Button>\r\n                        <Button size=\"small\" variant=\"contained\" onClick={() => { this.goToChat() }}>\r\n                            Open Chatroom\r\n                    </Button>\r\n                        <Button size=\"small\" variant=\"contained\" color=\"secondary\" onClick={() => { this.deletePeriod() }}>\r\n                            Delete Period\r\n                    </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            )\r\n        }\r\n    }\r\n\r\n    updatePeriod(period) {\r\n        this.props.resolveConflict(period.periodId, period);\r\n        this.setState({ hasConflict: false, period: period });\r\n    }\r\n\r\n    deletePeriod() {\r\n        this.props.removePeriod(this.state.period.periodId);\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    goToChat() {\r\n        this.props.history.push('/Posts/' + this.state.period.courseId + '/code/' + this.state.period.courseCode);\r\n    }\r\n\r\n    getPeriod(periodId) {\r\n        for (var i = 0; i < this.props.timetable.length; i++) {\r\n            if (this.props.timetable[i].monday.periodId === periodId) {\r\n                return this.props.timetable[i].monday;\r\n            }\r\n            if (this.props.timetable[i].tuesday.periodId === periodId) {\r\n                return this.props.timetable[i].tuesday;\r\n            }\r\n            if (this.props.timetable[i].wednesday.periodId === periodId) {\r\n                return this.props.timetable[i].wednesday;\r\n            }\r\n            if (this.props.timetable[i].thursday.periodId === periodId) {\r\n                return this.props.timetable[i].thursday;\r\n            }\r\n            if (this.props.timetable[i].friday.periodId === periodId) {\r\n                return this.props.timetable[i].friday;\r\n            }\r\n        }\r\n        return {};\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        const period = this.getPeriod(params.id);\r\n        this.setState({ hasConflict: period.hasConflict, period: period });\r\n\r\n\r\n    }\r\n}\r\n\r\n// Styles\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 10,\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        timetable: state.calenderReducer.timetable,\r\n        university: state.calenderReducer.university\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action \r\n    return {\r\n        resolveConflict: (periodId, course) => dispatch(resolveConflict(periodId, course)),\r\n        removePeriod: (periodId) => dispatch(removePeriod(periodId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(PeriodDetails)));","import { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const GET_UNIVERSITIES = 'GET_UNIVERSITIES';\r\nexport const RECEIVE_UNIVERSITIES = 'RECEIVE_UNIVERSITIES';\r\nexport const ERROR_GETTING_UNIVERSITIES = 'ERROR_GETTING_UNIVERSITIES';\r\n\r\nexport const getUniversities = () => ({\r\n    type: GET_UNIVERSITIES\r\n});\r\n\r\nexport const receiveUniversities = (data) => ({\r\n    type: RECEIVE_UNIVERSITIES,\r\n    data: data\r\n});\r\n\r\nexport const errorReceivingUniversities = (error) => ({\r\n    type: ERROR_GETTING_UNIVERSITIES,\r\n    error: error\r\n});\r\n\r\nfunction fetchUniversitiesFromAPI() {\r\n    var url = BASE_URL_CoursesAPI + 'universities';\r\n    return dispatch => {\r\n        dispatch(getUniversities());\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(receiveUniversities(json));\r\n            }).catch(err => {\r\n                dispatch(errorReceivingUniversities(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function fetchUniversities() {\r\n    return (dispatch, getState) => {\r\n        var university = getState().calenderReducer.university;\r\n        if (university === null || university === undefined || university.id === undefined ||\r\n            university.id === '' || university.id === '0000-0000-000000000000') {\r\n            return dispatch(fetchUniversitiesFromAPI());\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst ActivitySpinner = (props) => {\r\n  let size = 100;\r\n  if (props.size !== undefined) {\r\n    size = props.size;\r\n  }\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n      <CircularProgress disableShrink size={size} />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default ActivitySpinner;","// Imports: Dependencies\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Imports: Redux Actions\r\nimport { setUniversity } from '../redux/actions/calenderActions';\r\nimport { fetchUniversities } from '../redux/actions/universityActions';\r\n\r\n//import screens\r\nimport ActivitySpinner from './ActivitySpinner'\r\n\r\nclass University extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        const universitiesView = this.props.universities.map((resultValue) => {\r\n            return (\r\n                <span key={'span_' + resultValue.id}>\r\n                    <ListItem className={classes.listItem} key={resultValue.id} dense button onClick={() => { this.goToCampusesOrModules(resultValue) }}>\r\n                        <ListItemText id={'text_' + resultValue.id} primary={resultValue.name} />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                <SchoolIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                </span>\r\n            )\r\n        });\r\n        if (this.props.isFetching === true || this.props.isFetching === 'true') {\r\n            return (\r\n                <ActivitySpinner />\r\n            )\r\n        } else {\r\n            return (\r\n                <List className={classes.root}>\r\n                    <span>Click your institution below.</span>\r\n                    <br />\r\n                    <Divider />\r\n                    <br />\r\n                    {universitiesView}\r\n                </List>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    goToCampusesOrModules(university) {\r\n        setUniversity(university);\r\n        if (university.timetablePerCampus === true || university.timetablePerCampus === 'true') {\r\n            this.props.history.push('/Campus/' + university.id)\r\n        } else {\r\n            this.props.history.push('/institutions/' + university.id + '/type/universities')\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUniversities();\r\n    }\r\n\r\n}\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    listItem: {\r\n        width: '100%',\r\n        backgroundColor: '#f9ecf2'\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        universities: state.universitiesReducer.universities,\r\n        isFetching: state.universitiesReducer.isFetching,\r\n        error: state.universitiesReducer.error\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        fetchUniversities: () => dispatch(fetchUniversities()),\r\n        updateUniversity: (university) => dispatch(setUniversity(university))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(withRouter(University)));","// Imports: Dependencies\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// Imports: Redux Actions\r\nimport { fetchCampuses } from '../redux/actions/campusActions';\r\n\r\n//import screens\r\nimport ActivitySpinner from './ActivitySpinner'\r\n\r\n\r\nclass Campus extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        const universitiesView = this.props.campuses.map((resultValue) => {\r\n            return (\r\n                <span key={'span_' + resultValue.id}>\r\n                    <ListItem className={classes.listItem} key={resultValue.id} dense button onClick={() => { this.goToModules(resultValue) }}>\r\n                        <ListItemText id={'text_' + resultValue.id} primary={resultValue.name} />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                <SchoolIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                </span>\r\n            )\r\n        });\r\n        if (this.props.isFetching === true || this.props.isFetching === 'true') {\r\n            return (\r\n                <ActivitySpinner />\r\n            )\r\n        } else {\r\n            return (\r\n                <List>\r\n                    <Divider />\r\n                    < span >Click your campus below.</span>\r\n                    <Divider />\r\n                    {universitiesView}\r\n                </List>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    goToModules(campus) {\r\n        this.props.history.push('/institutions/' + campus.id + '/type/campuses')\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        this.props.fetchCampuses(params.id);\r\n    }\r\n\r\n}\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    listItem: {\r\n        width: '100%',\r\n        backgroundColor: '#f9ecf2'\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        campuses: state.campusesReducer.campuses,\r\n        isFetching: state.campusesReducer.isFetching,\r\n        error: state.campusesReducer.error\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        fetchCampuses: (id) => dispatch(fetchCampuses(id))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Campus));","import { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const GET_CAMPUSES = 'GET_CAMPUSES';\r\nexport const RECEIVE_CAMPUSES = 'RECEIVE_CAMPUSES';\r\nexport const ERROR_GETTING_CAMPUSES = 'ERROR_GETTING_CAMPUSES';\r\n\r\nexport const getCampuses = () => ({\r\n    type: GET_CAMPUSES\r\n});\r\n\r\nexport const receiveCampuses = (data) => ({\r\n    type: RECEIVE_CAMPUSES,\r\n    data: data\r\n});\r\n\r\nexport const errorReceivingCampuses = (error) => ({\r\n    type: ERROR_GETTING_CAMPUSES,\r\n    error: error\r\n});\r\n\r\nexport function fetchCampuses(universityId) {\r\n    var url = BASE_URL_CoursesAPI + 'Campuses/universities/' + universityId;\r\n    return dispatch => {\r\n        dispatch(getCampuses());\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(receiveCampuses(json));\r\n            }).catch(err => {\r\n                dispatch(errorReceivingCampuses(err));\r\n            });\r\n    }\r\n}\r\n","// Imports: Dependencies\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// Imports: Redux Actions\r\nimport { fetchSearchModules, receiveModules, addModule, removeModule, fetchAndSetUniversity } from '../redux/actions/calenderActions';\r\n\r\n//import screens\r\nimport ActivitySpinner from './ActivitySpinner'\r\n\r\nclass Course extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchText: '',\r\n            doneSearching: true,\r\n            hasPressedSearch: false,\r\n            searchResultsView: [],\r\n            courses: [],\r\n            showSnackbar: false,\r\n            snackbarText: ''\r\n        }\r\n    }\r\n    render() {\r\n\r\n\r\n        if ((this.props.isSearching === true || this.props.isSearching === 'true') && this.state.doneSearching === false) {\r\n            return (\r\n                <ActivitySpinner />\r\n            )\r\n        } else {\r\n            const { classes } = this.props;\r\n            const searchResultsView = this.props.searchResults.map((resultValue) => {\r\n                return (\r\n                    <span key={'span_' + resultValue.id}>\r\n                        <ListItem className={classes.listItem} key={resultValue.id} dense button onClick={() => { this.goToModules(resultValue) }}>\r\n                            <ListItemText id={'text_' + resultValue.id} primary={resultValue.code} secondary={resultValue.name} />\r\n                            <ListItemSecondaryAction>\r\n                                {this.getActionButton(resultValue, this.props.courses)}\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </span>\r\n                )\r\n            });\r\n            const coursesView = this.props.courses.map((resultValue) => {\r\n                return (\r\n                    <span key={'view_span_' + resultValue.id}>\r\n                        <ListItem className={classes.listItem} key={'view_' + resultValue.id} dense button onClick={() => { this.goToModules(resultValue) }}>\r\n                            <ListItemText id={'view_text_' + resultValue.id} primary={resultValue.code} secondary={resultValue.name} />\r\n                            <ListItemSecondaryAction>\r\n                                {this.getActionButton(resultValue, this.props.courses)}\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </span>\r\n                )\r\n            });\r\n            return (\r\n                <div >\r\n                    <Snackbar\r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                        key={'course_snackbar'}\r\n                        open={this.state.showSnackbar}\r\n                        onClose={() => { this.handleClose() }}\r\n                        message={this.state.snackbarText}\r\n                        autoHideDuration={3000}\r\n                        action={\r\n                            <React.Fragment>\r\n                                <Button color=\"secondary\" size=\"small\" onClick={() => { this.handleClose() }}>\r\n                                    DISMISS\r\n                                </Button>\r\n                                <IconButton\r\n                                    aria-label=\"close\"\r\n                                    color=\"inherit\"\r\n                                    onClick={() => { this.handleClose() }}\r\n                                >\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n\r\n\r\n                    {(this.state.hasPressedSearch === true && this.state.searchText.length < 4) &&\r\n                        <span style={{ color: 'red' }} >Enter 4 or more characters </span>\r\n                    }\r\n                    <TextField\r\n                        id=\"standard-full-width\"\r\n                        label=\"Search Module\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Search Module by Name or Code... e.g MATH130\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        onChange={(text) => this.onChangeSearchText(text)}\r\n                        value={this.state.searchText}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.searchModule()}>\r\n                        Search\r\n                    </Button>\r\n                    <Divider />\r\n                    {(this.state.hasPressedSearch === true && this.state.searchText.length >= 4) &&\r\n                        <span>Total courses is {this.props.searchResults.length}</span>\r\n                    }\r\n                    {(!(this.state.hasPressedSearch === true && this.state.searchText.length >= 4)) &&\r\n                        <div>\r\n                            <Divider />\r\n                            <List>\r\n                                {coursesView}\r\n                            </List>\r\n                        </div>\r\n                    }\r\n                    {(this.state.hasPressedSearch === true && this.state.searchText.length >= 4) &&\r\n                        <div>\r\n                            <Divider />\r\n                            <List>\r\n                                {searchResultsView}\r\n                            </List>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n    showSnackbar(text) {\r\n        this.setState({ showSnackbar: true, snackbarText: text });\r\n    };\r\n\r\n    handleClose() {\r\n        this.setState({ showSnackbar: false, snackbarText: '' });\r\n    };\r\n    onChangeSearchText(text) {\r\n        this.setState({ hasPressedSearch: false, searchText: text.target.value });\r\n    }\r\n\r\n    searchModule() {\r\n        const { params } = this.props.match;\r\n        this.setState({ hasPressedSearch: true });\r\n        if (this.state.searchText.length >= 4) {\r\n            this.setState({ doneSearching: false })\r\n            this.props.searchModules(params.id, this.state.searchText, params.routeType).then(() => {\r\n                this.setState({ hasPressedSearch: true, doneSearching: true })\r\n            });\r\n        }\r\n    }\r\n\r\n    getActionButton(course, coursesAlreadyExists) {\r\n        if (this.courseExists(course.id, coursesAlreadyExists) === false) {\r\n            return (\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => this.addCourse(course)}>\r\n                    Add\r\n                </Button>\r\n            )\r\n        } else {\r\n            return (\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => this.removeCourse(course.id)}>\r\n                    Remove\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    addCourse(course) {\r\n        this.props.addModule(course);\r\n        const newCourses = [...this.state.courses, course];\r\n        this.setState({ courses: newCourses });\r\n        this.props.fetchAndSetUniversity(course.universityId);\r\n        this.showSnackbar('Module added successfully.');\r\n    }\r\n\r\n    removeCourse(courseId) {\r\n        this.props.removeModule(courseId);\r\n        var newCourses = [];\r\n        for (let course of this.state.courses) {\r\n            if (course.id !== courseId) {\r\n                newCourses.push(course);\r\n            }\r\n        }\r\n        this.setState({ courses: newCourses });\r\n        this.showSnackbar('Module removed successfully.');\r\n    }\r\n\r\n    courseExists(courseId, coursesAlreadyExists) {\r\n        for (let course of coursesAlreadyExists) {\r\n            if (course.id === courseId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.receiveModules([]);//Call this method to clear isSearching value\r\n    }\r\n\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    listItem: {\r\n        width: '100%',\r\n        backgroundColor: '#f9ecf2'\r\n    },\r\n});\r\n\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        searchResults: state.calenderReducer.searchResults,\r\n        isSearching: state.calenderReducer.isSearching,\r\n        error: state.calenderReducer.error,\r\n        hasErrorSearching: state.calenderReducer.hasErrorSearching,\r\n        courses: state.calenderReducer.courses,\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        searchModules: (campusId, body, routPath) => dispatch(fetchSearchModules(campusId, body, routPath)),\r\n        receiveModules: (data) => dispatch(receiveModules(data)),\r\n        addModule: (data) => dispatch(addModule(data)),\r\n        removeModule: (data) => dispatch(removeModule(data)),\r\n        fetchAndSetUniversity: (universityId) => dispatch(fetchAndSetUniversity(universityId))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Course));","// Imports: Dependencies\r\nimport React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Imports: Redux Actions\r\nimport { getNumberOfUnreadMessages } from '../redux/actions/calenderActions';\r\n\r\nclass Chats extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        const coursesView = this.props.courses.map((resultValue) => {\r\n            return (\r\n                <span key={'span_' + resultValue.id}>\r\n                    <ListItem className={classes.listItem} key={resultValue.id} dense button onClick={() => { this.openPosts(resultValue.id, resultValue.code) }}>\r\n                        <ListItemText id={'text_' + resultValue.id} primary={resultValue.code} secondary={resultValue.name} />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                <ForumIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <br />\r\n                </span>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => { this.addModule() }}>\r\n                    Add or Remove module\r\n                </Button>\r\n\r\n                <Divider />\r\n                < span > Total number of modules you doing is {this.props.courses.length}</span>\r\n                <Divider />\r\n                {(this.props.university !== null && this.props.university !== undefined && this.props.university.id !== undefined\r\n                    && this.props.university.id !== '' && this.props.university.id !== '0000-0000-000000000000') &&\r\n                    <span key={'span_' + this.props.university.id}>\r\n                        <ListItem className={classes.listItem} key={this.props.university.id} dense button onClick={() => { this.openPosts(this.props.university.id, this.props.university.name) }}>\r\n                            <ListItemText\r\n                                id={'text_' + this.props.university.id}\r\n                                primary={this.props.university.name}\r\n                                secondary={'Send message to all students in your institution'}\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                    <ForumIcon />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </span>\r\n                }\r\n\r\n                <Divider />\r\n                <List>\r\n                    {coursesView}\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    openPosts(postId, code) {\r\n        this.props.history.push('/Posts/' + postId + '/code/' + code);\r\n    }\r\n\r\n    addModule() {\r\n        if (this.props.university === null || this.props.university === undefined || this.props.university.id === undefined\r\n            || this.props.university.id === '' || this.props.university.id === '0000-0000-000000000000') {\r\n            this.props.history.push('/University')\r\n        } else if (this.props.university.timetablePerCampus === true || this.props.university.timetablePerCampus === 'true') {\r\n            this.props.history.push('/Campus/' + this.props.university.id)\r\n        } else {\r\n            this.props.history.push('/institutions/' + this.props.university.id + '/type/universities')\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    listItem: {\r\n        width: '100%',\r\n        backgroundColor: '#f9ecf2'\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        courses: state.calenderReducer.courses,\r\n        university: state.calenderReducer.university\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        getNumberOfUnreadMessages: (state) => dispatch(getNumberOfUnreadMessages(state))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(withRouter(Chats)));","// Imports: Dependencies\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n// Imports: Redux Actions\r\nimport { addNote, removeNote, updateNote } from '../redux/actions/noteActions';\r\n\r\n\r\nclass Notes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            body: '',\r\n            isEdit: false,\r\n            actionType: 'viewList',\r\n            noteToView: {}\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        const dateCreated = new Date(this.state.noteToView.createdDate);\r\n        const displayDateCreated = dateCreated.toDateString() + ' ' + dateCreated.toLocaleTimeString();\r\n\r\n        const dateModified = new Date(this.state.noteToView.lastModifiedDate);\r\n        const displayDateModified = dateModified.toDateString() + ' ' + dateModified.toLocaleTimeString();\r\n\r\n        if (this.state.actionType === 'viewNote') {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <Divider />\r\n                        <span className={classes.nameHeader}> {this.state.noteToView.title} </span>\r\n                        <span className={classes.dates}> <span style={{ fontWeight: 'bold' }}>Created on:</span>  {displayDateCreated.toString()}</span>\r\n                        <span className={classes.dates}>  <span style={{ fontWeight: 'bold' }}>Last modified on:</span> {displayDateModified.toString()}</span>\r\n                        <Divider />\r\n                        <span> <br /> <br /></span>\r\n                        <span>{this.state.noteToView.body}</span>\r\n                    </div>\r\n                    <span> <br /> <br /></span>\r\n                    <Divider />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => { this.setState({ actionType: 'viewList' }) }}>\r\n                        Back to Notes\r\n                    </Button>\r\n                </div>\r\n            )\r\n        } else if (this.state.actionType === 'add' || this.state.actionType === 'edit') {\r\n            return (\r\n                <React.Fragment>\r\n                    <React.Fragment>\r\n                        <span style={{ fontWeight: 'bold', fontSize: 20 }}>Title</span>\r\n                        <TextField\r\n                            id=\"standard-full-width\"\r\n                            label=\"\"\r\n                            style={{ margin: 8 }}\r\n                            placeholder=\"Type note title here...\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            onChange={(text) => this.onChangeTitleText(text)}\r\n                            value={this.state.title}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                        <span style={{ fontWeight: 'bold', fontSize: 20 }}>Body</span>\r\n                        <TextField\r\n                            id=\"standard-full-width\"\r\n                            label=\"\"\r\n                            style={{ margin: 8 }}\r\n                            placeholder=\"Type your notes here...\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows=\"4\"\r\n                            margin=\"normal\"\r\n                            onChange={(text) => this.onChangeBodyText(text)}\r\n                            value={this.state.body}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </React.Fragment>\r\n                    <span style={{ color: 'white' }}>_</span>\r\n                    <div className={classes.containerActions}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => { this.addOrEditNote() }}>\r\n                            Save Note\r\n                            </Button>\r\n                        <Button variant=\"contained\" onClick={() => { this.setState({ actionType: 'viewList' }) }}>\r\n                            Back to Notes\r\n                            </Button>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            const notesView = this.props.notes.map((resultValue) => {\r\n                const dateCreated = new Date(resultValue.createdDate);\r\n                const displayDateCreated = dateCreated.toDateString() + ' ' + dateCreated.toLocaleTimeString();\r\n\r\n                const dateModified = new Date(resultValue.lastModifiedDate);\r\n                const displayDateModified = dateModified.toDateString() + ' ' + dateModified.toLocaleTimeString();\r\n                return (\r\n                    <span key={'span_' + resultValue.id}>\r\n                        <ListItem className={classes.listItem} key={resultValue.id} dense button onClick={() => { this.viewNote(resultValue) }}>\r\n                            <ListItemText id={'text_' + resultValue.id}\r\n                                primary={resultValue.title}\r\n                                secondary={'Modified on: ' + displayDateModified}\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <React.Fragment>\r\n                                    <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => { this.addOrEditNote(resultValue, true) }} >\r\n                                        <EditIcon />\r\n                                    </IconButton>\r\n                                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => { this.deleteNote(resultValue.id) }} >\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </React.Fragment>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        <br />\r\n                    </span>\r\n                )\r\n            });\r\n\r\n            return (\r\n                <React.Fragment>\r\n\r\n                    <div>\r\n                        <Divider />\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => { this.addOrEditNote({}, false) }}>\r\n                            Add Note\r\n                        </Button>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        {notesView}\r\n                    </List>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    createGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    viewNote(note) {\r\n        this.setState({ noteToView: note, actionType: 'viewNote' });\r\n\r\n    }\r\n\r\n    addOrEditNote(note, isEdit) {\r\n\r\n        if (this.state.actionType === 'viewList') {\r\n            if (isEdit === true) {\r\n                this.setState({ actionType: 'edit', noteToEdit: note, isEdit: true, title: note.title, body: note.body });\r\n            } else {\r\n                this.setState({ actionType: 'add', isEdit: false, title: '', body: '' });\r\n            }\r\n\r\n        } else {\r\n            if (this.state.title.length < 1) {\r\n\r\n            } else {\r\n                if (this.state.isEdit === false) {\r\n                    const body = {\r\n                        id: this.createGuid(),\r\n                        createdDate: new Date(),\r\n                        lastModifiedDate: new Date(),\r\n                        title: this.state.title,\r\n                        body: this.state.body\r\n                    };\r\n                    this.props.addNote(body);\r\n                } else {\r\n                    const body = {\r\n                        id: this.state.noteToEdit.id,\r\n                        createdDate: this.state.noteToEdit.createdDate,\r\n                        lastModifiedDate: new Date(),\r\n                        title: this.state.title,\r\n                        body: this.state.body\r\n                    };\r\n                    this.props.updateNote(body);\r\n                }\r\n                this.setState({ actionType: 'viewList', isEdit: false, title: '', body: '' });\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteNote(id) {\r\n        this.props.removeNote(id);\r\n    }\r\n\r\n    onChangeTitleText(text) {\r\n        this.setState({ title: text.target.value });\r\n    }\r\n\r\n    onChangeBodyText(text) {\r\n        this.setState({ body: text.target.value });\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        backgroundColor: 'white',\r\n    },\r\n    containerActions: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n    },\r\n    mainContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'stretch',\r\n    },\r\n    nameHeader: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: 'white',\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 25,\r\n    },\r\n    dates: {\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n    },\r\n    listItem: {\r\n        width: '100%',\r\n        backgroundColor: '#f9ecf2'\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        notes: state.noteReducer.notes,\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        addNote: (note) => dispatch(addNote(note)),\r\n        removeNote: (noteId) => dispatch(removeNote(noteId)),\r\n        updateNote: (note) => dispatch(updateNote(note)),\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Notes));","\r\nimport { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const ADD_NOTE = 'ADD_NOTE';\r\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE';\r\n\r\nexport const addNote = (data) => ({\r\n    type: ADD_NOTE,\r\n    data: data\r\n});\r\n\r\nexport const updateNote = (data) => ({\r\n    type: UPDATE_NOTE,\r\n    data: data\r\n});\r\n\r\nexport const removeNote = (noteId) => ({\r\n    type: REMOVE_NOTE,\r\n    noteId: noteId\r\n});\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ReactPlayer from 'react-player'\r\nimport { withRouter } from 'react-router-dom';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\n\r\n// Screen: MediaCard\r\nclass MediaCard extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isVideoOrAudio = ((this.props.file.contentType.includes('video') === true || this.props.file.contentType.includes('audio') === true));\r\n        const isImage = (this.props.file.contentType.includes('image') === true || this.props.file.contentType.includes('picture') === true);\r\n        if ((isImage === true) || (isVideoOrAudio === true)) {\r\n            return (\r\n                <div>\r\n                    {(isVideoOrAudio === true) &&\r\n                        <ReactPlayer\r\n                            url={'http://sitholewb.co.za/FilesAPI/api/Storage/' + this.props.file.id + '/view'}\r\n                            width='100%'\r\n                            height='100%'\r\n                            playing={false}\r\n                            controls\r\n                        />\r\n                    }\r\n                    {(isImage === true) &&\r\n                        <img src={'http://sitholewb.co.za/FilesAPI/api/Storage/' + this.props.file.id + '/view'} width=\"100%\" height=\"100%\" />\r\n                    }\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Chip\r\n                        icon={<AttachmentIcon />}\r\n                        label={this.props.file.name}\r\n                        clickable\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => { this.openFile() }}\r\n                        deleteIcon={<VisibilityIcon />}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    openFile() {\r\n        this.props.history.push('/file/' + this.props.file.id + '/view');\r\n    }\r\n\r\n}\r\n\r\n// Styles\r\nconst styles = theme => ({\r\n    playerWrapper: {\r\n        position: 'relative',\r\n        paddingTop: 56 /* Player ratio: 100 / (1280 / 720) */\r\n    },\r\n    reactPlayer: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n    }\r\n});\r\nexport default withStyles(styles)(withRouter(MediaCard));","import { BASE_URL_PostsAPI } from '../../shared/Urls';\r\n\r\nexport const POST_COMMENT = 'POST_COMMENT';\r\nexport const POST_COMMENT_RESPONSE = 'POST_COMMENT_RESPONSE';\r\nexport const ERROR_POSTING_COMMENT = 'ERROR_POSTING_COMMENT';\r\n\r\nexport const GET_COMMENTS = 'GET_COMMENTS';\r\nexport const RECEIVE_COMMENTS = 'RECEIVE_COMMENTS';\r\nexport const ERROR_RECEIVING_COMMENTS = 'ERROR_RECEIVING_COMMENTS';\r\n\r\nexport const LIKE_COMMENT = 'LIKE_COMMENT';\r\nexport const LIKE_COMMENT_RESPONSE = 'LIKE_COMMENT_RESPONSE';\r\nexport const ERROR_LIKING_COMMENT = 'ERROR_LIKING_COMMENT';\r\n\r\n//*********************************POST_COMMENT********************************************* */\r\nexport const postComment = () => ({\r\n    type: POST_COMMENT\r\n});\r\n\r\nexport const postCommentResponse = (data) => ({\r\n    type: POST_COMMENT_RESPONSE,\r\n    data: data\r\n});\r\n\r\nexport const errorPostingComment = (error) => ({\r\n    type: ERROR_POSTING_COMMENT,\r\n    error: error\r\n});\r\n\r\n//********************************END:: POST_COMMENT ::END***************************************** */\r\n\r\n//*********************************LIKE_COMMENT**************************************************** */\r\nexport const likeComment = () => ({\r\n    type: LIKE_COMMENT\r\n});\r\n\r\nexport const likeCommentResponse = () => ({\r\n    type: LIKE_COMMENT_RESPONSE\r\n});\r\n\r\nexport const errorLikingComment = (error) => ({\r\n    type: ERROR_LIKING_COMMENT,\r\n    error: error\r\n});\r\n//********************************END:: LIKE_COMMENT ::END**************************************** */\r\n//*********************************GET_COMMENTS********************************************* */\r\nexport const getComments = () => ({\r\n    type: GET_COMMENTS\r\n});\r\n\r\nexport const receiveComments = (data) => ({\r\n    type: RECEIVE_COMMENTS,\r\n    data: data\r\n});\r\n\r\nexport const errorReceivingComments = (error) => ({\r\n    type: ERROR_RECEIVING_COMMENTS,\r\n    error: error\r\n});\r\n\r\n//********************************END:: GET_COMMENTS ::END***************************************** */\r\n\r\nexport function AddComment(postId, comment) {\r\n    var url = BASE_URL_PostsAPI + 'Comments/Posts/' + postId;\r\n    return dispatch => {\r\n        dispatch(postComment());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(comment),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(postCommentResponse(json));\r\n            }).catch(err => {\r\n                dispatch(errorPostingComment(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function fetchCommentsForPost(postId) {\r\n    var url = BASE_URL_PostsAPI + 'Comments/Posts/' + postId;\r\n    return dispatch => {\r\n        dispatch(getComments());\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                console.log('Len = ' + json.length)\r\n                dispatch(receiveComments(json));\r\n            }).catch(err => {\r\n                dispatch(errorReceivingComments(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function likeCommentById(postId, commentId, user) {\r\n    var url = BASE_URL_PostsAPI + 'Comments/likes/' + commentId + '/posts/' + postId;\r\n    return dispatch => {\r\n        dispatch(likeComment());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(likeCommentResponse(json));\r\n            }).catch(err => {\r\n                dispatch(errorLikingComment(err));\r\n            });\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n//import screens\r\nimport MediaCard from './MediaCard';\r\n\r\n// Imports: Redux Actions\r\nimport { likeCommentById } from '../redux/actions/commentActions';\r\n\r\nclass CommentCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasConflict: false,\r\n            post: {},\r\n            showSnackbar: false,\r\n            snackbarText: '',\r\n            totalLikes: 0\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const date = new Date(this.props.comment.addedDate);\r\n        const displayDate = date.toDateString() + ' ' + date.toLocaleTimeString();\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    key={'course_snackbar'}\r\n                    open={this.state.showSnackbar}\r\n                    onClose={() => { this.handleClose() }}\r\n                    message={this.state.snackbarText}\r\n                    autoHideDuration={3000}\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button color=\"secondary\" size=\"small\" onClick={() => { this.handleClose() }}>\r\n                                DISMISS\r\n                                </Button>\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                onClick={() => { this.handleClose() }}\r\n                            >\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n\r\n                <Card className={classes.root}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                <AccountCircleIcon />\r\n                            </Avatar>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\">\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                        }\r\n                        title={this.getUserFullNames()}\r\n                        subheader={displayDate}\r\n                    />\r\n                    <Divider />\r\n\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {this.props.comment.body}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardContent>\r\n                        {((this.props.comment.files !== null && this.props.comment.files.length > 0)) &&\r\n                            <MediaCard\r\n                                file={this.props.comment.files[0]}\r\n                            />\r\n                        }\r\n                    </CardContent>\r\n                    <CardActions style={{ backgroundColor: '#f9ecf2' }} disableSpacing>\r\n                        <IconButton aria-label=\"Like this comment\" style={{ color: this.state.likeButtonBackgroundColor }} onClick={() => { this.handlePostLike() }}>\r\n                            <FavoriteIcon />\r\n                        </IconButton>\r\n                        {(this.props.comment.likes.length > 0) &&\r\n                            <Chip variant=\"outlined\" size=\"small\" label={this.props.comment.likes.length + \" likes\"} />\r\n                        }\r\n                    </CardActions>\r\n\r\n                </Card>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    showSnackbar(text) {\r\n        this.setState({ showSnackbar: true, snackbarText: text });\r\n    };\r\n\r\n    handleClose() {\r\n        this.setState({ showSnackbar: false, snackbarText: '' });\r\n    };\r\n\r\n\r\n    getUserFullNames() {\r\n        if (this.props.comment.addedBy === null || this.props.comment.addedBy === 'null' || this.props.comment.addedBy === undefined) {\r\n            return 'Anonymous User';\r\n        } else {\r\n            return this.props.comment.addedBy.fullnames;\r\n        }\r\n    }\r\n\r\n    handlePostLike() {\r\n        this.props.likeCommentById(this.props.comment.postId, this.props.comment.id, this.props.user).then(() => {\r\n            if (this.state.likeButtonBackgroundColor === 'black') {\r\n                this.setState({ likeButtonBackgroundColor: 'green', totalLikes: this.state.totalLikes + 1 })\r\n            } else {\r\n                this.setState({ likeButtonBackgroundColor: 'black', totalLikes: this.state.totalLikes - 1 })\r\n            }\r\n        });\r\n    }\r\n\r\n    existOnLikes() {\r\n        var exist = false;\r\n        const list = this.props.comment.likes;\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (list[i].userId === this.props.user.userId) {\r\n                exist = true;\r\n            }\r\n        }\r\n        return exist;\r\n    }\r\n\r\n    sentComment() {\r\n        if (this.state.commentText.length < 1) {\r\n            this.showSnackbar('Input must be at least 1 letter');\r\n            return;\r\n        } else {\r\n            this.setState({ addPostPending: true })\r\n            if (this.state.fileIsAttached === false) {\r\n                this.props.AddComment(this.props.comment.id, {\r\n                    body: this.state.commentText,\r\n                    addedBy: this.props.user\r\n                }).then(() => {\r\n                    this.setState({\r\n                        addPostPending: false,\r\n                        commentText: '',\r\n                        showAddComment: false,\r\n                        showComments: true,\r\n                        totalComments: this.state.totalComments + 1\r\n                    })\r\n\r\n                })\r\n            } else {\r\n                this.props.uploadFileToStorage(this.state.documentObject)\r\n                    .then(() => {\r\n                        this.props.AddComment(this.props.comment.id, {\r\n                            body: this.state.commentText,\r\n                            addedBy: this.props.user,\r\n                            files: [this.props.uploadResponse]\r\n                        }).then(() => {\r\n                            this.setState({\r\n                                commentText: '',\r\n                                fileIsAttached: false,\r\n                                fileName: '',\r\n                                addPostPending: false,\r\n                                showAddComment: false,\r\n                                showComments: true,\r\n                                totalComments: this.state.totalComments + 1\r\n                            })\r\n                        })\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        var likeText = 'black';\r\n        if (this.existOnLikes()) {\r\n            likeText = 'green';\r\n        }\r\n\r\n        this.setState({ likeButtonBackgroundColor: likeText })\r\n    }\r\n\r\n}\r\nconst useStyles = theme => ({\r\n    root: {\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: 'green',\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        user: state.userReducer.user,\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        likeCommentById: (postId, commentId, user) => dispatch(likeCommentById(postId, commentId, user))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(CommentCard));\r\n","// Imports: Dependencies\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\n//import screens\r\nimport ActivitySpinner from './ActivitySpinner'\r\nimport CommentCard from './CommentCard';\r\n\r\n// Imports: Redux Actions\r\nimport { fetchCommentsForPost } from '../redux/actions/commentActions';\r\n\r\n// Screen: Comments\r\nclass Comments extends Component {\r\n    render() {\r\n\r\n        if (this.props.isFetchingComments === true) {\r\n            return (\r\n                <ActivitySpinner />\r\n            )\r\n        } else {\r\n\r\n            const commentsView = this.props.comments.map((resultValue) => {\r\n                return (\r\n                    <CommentCard comment={resultValue} />\r\n                )\r\n            });\r\n\r\n            return (\r\n                <div>\r\n                    {commentsView}\r\n                </div >\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchComments(this.props.postId);\r\n    }\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    container: {\r\n        margin: 1,\r\n        display: 'flex',\r\n        flexWrap: 'nowrap'\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        comments: state.commentReducer.comments,\r\n        isFetchingComments: state.commentReducer.isFetchingComments\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        fetchComments: (id) => dispatch(fetchCommentsForPost(id))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Comments));","\r\nimport { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const ADD_BOOKMARK = 'ADD_BOOKMARK';\r\nexport const REMOVE_BOOKMARK = 'REMOVE_BOOKMARK';\r\nexport const REMOVE_ALL_BOOKMARK = 'REMOVE_ALL_BOOKMARK';\r\n\r\nexport const addBookmark = (post) => ({\r\n    type: ADD_BOOKMARK,\r\n    post: post\r\n});\r\n\r\nexport const removeBookmark = (postId) => ({\r\n    type: REMOVE_BOOKMARK,\r\n    postId: postId\r\n});\r\n\r\nexport const removeAllBookmark = () => ({\r\n    type: REMOVE_ALL_BOOKMARK,\r\n});\r\n","import { BASE_URL_FilesAPI } from '../../shared/Urls';\r\n\r\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\r\nexport const UPLOAD_FILE_RESPONSE = 'UPLOAD_FILE_RESPONSE';\r\nexport const ERROR_UPLOADING_FILE = 'ERROR_UPLOADING_FILE';\r\nexport const UPLOAD_FILE_PROGRESS = 'UPLOAD_FILE_PROGRESS';\r\n\r\n\r\n//*********************************UPLOAD_FILE**************************************************** */\r\nexport const uploadFile = () => ({\r\n    type: UPLOAD_FILE\r\n});\r\n\r\nexport const uploadFileResponse = (data) => ({\r\n    type: UPLOAD_FILE_RESPONSE,\r\n    data: data\r\n});\r\n\r\nexport const errorUploadingFile = (error) => ({\r\n    type: ERROR_UPLOADING_FILE,\r\n    error: error\r\n});\r\n\r\nexport const uploadFileProgress = (percent) => ({\r\n    type: UPLOAD_FILE_PROGRESS,\r\n    percent: percent\r\n});\r\n//*********************************END:: UPLOAD_FILE ::END **************************************************** */\r\n\r\nexport function uploadFileToStorage(fileObject) {\r\n    var formData = new FormData();\r\n    formData.append('file', fileObject);\r\n    return dispatch => {\r\n        dispatch(uploadFile())\r\n        return fetch(BASE_URL_FilesAPI + 'Storage', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                dispatch(uploadFileResponse(data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorUploadingFile(error));\r\n            })\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//import screens\r\nimport MediaCard from './MediaCard';\r\nimport ActivitySpinner from './ActivitySpinner'\r\nimport Comments from './Comments'\r\n\r\n// Imports: Redux Actions\r\nimport { fetchCommentsForPost, AddComment } from '../redux/actions/commentActions';\r\nimport { addBookmark, removeBookmark, removeAllBookmark } from '../redux/actions/bookmarkActions';\r\nimport { likePostById } from '../redux/actions/postActions';\r\nimport { uploadFileToStorage } from '../redux/actions/uploadActions';\r\n\r\nclass PostCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileUpload = React.createRef();\r\n        this.showFileUpload = this.showFileUpload.bind(this);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.state = {\r\n            hasConflict: false,\r\n            post: {},\r\n            showSnackbar: false,\r\n            snackbarText: '',\r\n            showAddComment: false,\r\n            fileIsAttached: false,\r\n            fileName: '',\r\n            documentObject: {},\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const date = new Date(this.props.post.addedDate);\r\n        const displayDate = date.toDateString() + ' ' + date.toLocaleTimeString();\r\n\r\n        return (\r\n            <div className={classes.cardStyle}>\r\n                <Divider />\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    key={'course_snackbar'}\r\n                    open={this.state.showSnackbar}\r\n                    onClose={() => { this.handleClose() }}\r\n                    message={this.state.snackbarText}\r\n                    autoHideDuration={3000}\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button color=\"secondary\" size=\"small\" onClick={() => { this.handleClose() }}>\r\n                                DISMISS\r\n                                </Button>\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                onClick={() => { this.handleClose() }}\r\n                            >\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n\r\n                <Card className={classes.root}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                <AccountCircleIcon />\r\n                            </Avatar>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\">\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                        }\r\n                        title={this.getUserFullNames()}\r\n                        subheader={displayDate}\r\n                    />\r\n                    <Divider />\r\n\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {this.props.post.body}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardContent>\r\n                        {((this.props.post.files !== null && this.props.post.files.length > 0)) &&\r\n                            <MediaCard\r\n                                file={this.props.post.files[0]}\r\n                            />\r\n                        }\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <CardActions style={{ backgroundColor: '#f9ecf2' }} disableSpacing>\r\n                        <IconButton aria-label=\"Like this post\" style={{ color: this.state.likeButtonBackgroundColor }} onClick={() => { this.handlePostLike() }}>\r\n                            <FavoriteIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"Add Comment\" style={{ color: 'black' }} onClick={() => { this.toggleShowAddComment() }}>\r\n                            <AddCommentIcon />\r\n                        </IconButton>\r\n                        <IconButton edge=\"end\" aria-label=\"Add to bookmark\" onClick={() => { this.handleBookmarkClick() }}>\r\n                            <BookmarkIcon style={{ color: this.state.bookmarkButtonBackgroundColor }} />\r\n                        </IconButton>\r\n                        <span style={{ color: '#f9ecf2' }}>__</span>\r\n                        {(this.props.post.totalComments > 0) &&\r\n                            <React.Fragment>\r\n                                <Chip variant=\"outlined\" color=\"primary\" size=\"small\" label={this.props.post.totalComments + \" comments\"} clickable onClick={() => { this.toggleComments() }} />\r\n                                <span style={{ color: '#f9ecf2' }}>_</span>\r\n                            </React.Fragment>\r\n                        }\r\n                        {(this.props.post.likes.length > 0) &&\r\n                            <Chip variant=\"outlined\" size=\"small\" label={this.props.post.likes.length + \" likes\"} />\r\n                        }\r\n                    </CardActions>\r\n\r\n                </Card>\r\n                <div>\r\n                    {(this.state.showAddComment === true) &&\r\n                        <div>\r\n                            <TextField\r\n                                id=\"standard-full-width\"\r\n                                label=\"\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Add your comment...\"\r\n                                fullWidth\r\n                                multiline\r\n                                rows=\"4\"\r\n                                margin=\"normal\"\r\n                                onChange={(text) => this.onChangeText(text)}\r\n                                value={this.state.postText}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n\r\n                            {(this.state.fileIsAttached === false) &&\r\n                                <React.Fragment>\r\n                                    <div>\r\n                                        <input style={{ display: \"none\" }} id=\"postFileId\" type=\"file\" ref={this.fileUpload} onChange={this.onFileChange} />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <Chip\r\n                                            icon={<AttachmentIcon />}\r\n                                            label=\"attach file(image/pdf/video/etc)\"\r\n                                            clickable\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            onClick={() => { this.showFileUpload() }}\r\n                                        />\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                            {(this.state.fileIsAttached === true) &&\r\n                                <React.Fragment>\r\n                                    <Chip\r\n                                        icon={<AttachmentIcon />}\r\n                                        label={this.state.fileName}\r\n                                        onDelete={() => { this.removeFile() }}\r\n                                        color=\"secondary\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                    <span><br /></span>\r\n                                </React.Fragment>\r\n                            }\r\n\r\n\r\n                            <div style={{ width: '50%' }}>\r\n                                <span><br /></span>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => { this.sentComment() }}>\r\n                                    Add Comment\r\n                                    </Button>\r\n                            </div>\r\n\r\n                            <br />\r\n                        </div>\r\n                    }\r\n                    {(this.state.addPostPending === true) &&\r\n\r\n                        <div>\r\n                            <span style={{ color: 'green', fontWeight: 'bold' }}>Adding your comment...</span>\r\n                            <ActivitySpinner />\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                {(this.state.showComments === true) &&\r\n                    <div className={classes.containerComments}>\r\n                        <span style={{ width: '20%' }}></span>\r\n                        <div style={{ width: '80%' }}>\r\n                            <Comments postId={this.props.post.id} />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onFileChange(e) {\r\n        this.setState({ fileIsAttached: true, fileName: e.target.files[0].name, documentObject: e.target.files[0] })\r\n    }\r\n\r\n    showFileUpload() {\r\n        this.fileUpload.current.click();\r\n    }\r\n\r\n    toggleShowAddComment() {\r\n        this.setState({ showAddComment: !this.state.showAddComment });\r\n    }\r\n\r\n    showSnackbar(text) {\r\n        this.setState({ showSnackbar: true, snackbarText: text });\r\n    };\r\n\r\n    handleClose() {\r\n        this.setState({ showSnackbar: false, snackbarText: '' });\r\n    };\r\n    removeFile() {\r\n        this.setState({ fileIsAttached: false, fileName: '' })\r\n    }\r\n\r\n    getUserFullNames() {\r\n        if (this.props.post.addedBy === null || this.props.post.addedBy === 'null' || this.props.post.addedBy === undefined) {\r\n            return 'Anonymous User';\r\n        } else {\r\n            return this.props.post.addedBy.fullnames;\r\n        }\r\n    }\r\n\r\n    handlePostLike() {\r\n        this.props.likePostById(this.props.post.id, this.props.user).then(() => {\r\n            if (this.state.likeButtonBackgroundColor === 'black') {\r\n                this.setState({ likeButtonBackgroundColor: 'green', totalLikes: this.state.totalLikes + 1 })\r\n            } else {\r\n                this.setState({ likeButtonBackgroundColor: 'black', totalLikes: this.state.totalLikes - 1 })\r\n            }\r\n        });\r\n    }\r\n\r\n    handleBookmarkClick() {\r\n        if (this.existOnBookmarks() === true) {\r\n            this.setState({ bookmarkButtonBackgroundColor: 'black' })\r\n            this.props.removeBookmark(this.props.post.id);\r\n        } else {\r\n            this.setState({ bookmarkButtonBackgroundColor: 'green' })\r\n            this.props.addBookmark(this.props.post);\r\n        }\r\n    }\r\n\r\n    existOnBookmarks() {\r\n        let exist = false;\r\n        const list = this.props.bookmarkedPosts;\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (list[i].id === this.props.post.id) {\r\n                exist = true;\r\n            }\r\n        }\r\n        return exist;\r\n    }\r\n\r\n    existOnLikes() {\r\n        var exist = false;\r\n        const list = this.props.post.likes;\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (list[i].userId === this.props.user.userId) {\r\n                exist = true;\r\n            }\r\n        }\r\n        return exist;\r\n    }\r\n\r\n    sentComment() {\r\n        if (this.state.commentText.length < 1) {\r\n            this.showSnackbar('Input must be at least 1 letter');\r\n            return;\r\n        } else {\r\n            this.setState({ addPostPending: true })\r\n            if (this.state.fileIsAttached === false) {\r\n                this.props.AddComment(this.props.post.id, {\r\n                    body: this.state.commentText,\r\n                    addedBy: this.props.user\r\n                }).then(() => {\r\n                    this.setState({\r\n                        addPostPending: false,\r\n                        commentText: '',\r\n                        showAddComment: false,\r\n                        showComments: true,\r\n                        totalComments: this.state.totalComments + 1\r\n                    })\r\n\r\n                })\r\n            } else {\r\n                this.props.uploadFileToStorage(this.state.documentObject)\r\n                    .then(() => {\r\n                        this.props.AddComment(this.props.post.id, {\r\n                            body: this.state.commentText,\r\n                            addedBy: this.props.user,\r\n                            files: [this.props.uploadResponse]\r\n                        }).then(() => {\r\n                            this.setState({\r\n                                commentText: '',\r\n                                fileIsAttached: false,\r\n                                fileName: '',\r\n                                addPostPending: false,\r\n                                showAddComment: false,\r\n                                showComments: true,\r\n                                totalComments: this.state.totalComments + 1\r\n                            })\r\n                        })\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeText(text) {\r\n        this.setState({ commentText: text.target.value });\r\n    }\r\n\r\n    toggleComments() {\r\n        this.setState({ showComments: !this.state.showComments });\r\n    }\r\n\r\n    componentDidMount() {\r\n        var likeText = 'black';\r\n        var bookmarkButtonBackgroundColor = 'black';\r\n        if (this.existOnLikes()) {\r\n            likeText = 'green';\r\n        }\r\n        if (this.existOnBookmarks() === true) {\r\n            bookmarkButtonBackgroundColor = 'green';\r\n        }\r\n        this.setState({ bookmarkButtonBackgroundColor: bookmarkButtonBackgroundColor, likeButtonBackgroundColor: likeText })\r\n    }\r\n\r\n}\r\nconst useStyles = theme => ({\r\n    root: {\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: 'green',\r\n    },\r\n    containerComments: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n    },\r\n    cardStyle: {\r\n        borderRadius: 10,\r\n    }\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        isFetchingComments: state.commentReducer.isFetchingComments,\r\n        bookmarkedPosts: state.bookmarkReducer.bookmarkedPosts,\r\n        user: state.userReducer.user,\r\n        uploadResponse: state.uploadReducer.response,\r\n        percent: state.uploadReducer.percent,\r\n        isUploadingFile: state.uploadReducer.isFetching\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        fetchComments: (id) => dispatch(fetchCommentsForPost(id)),\r\n        AddComment: (postId, comment) => dispatch(AddComment(postId, comment)),\r\n        addBookmark: (post) => dispatch(addBookmark(post)),\r\n        removeBookmark: (postId) => dispatch(removeBookmark(postId)),\r\n        removeAllBookmark: () => dispatch(removeAllBookmark()),\r\n        likePostById: (postId, user) => dispatch(likePostById(postId, user)),\r\n        uploadFileToStorage: (obj) => dispatch(uploadFileToStorage(obj))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(PostCard));\r\n","import { BASE_URL_PostsAPI } from '../../shared/Urls';\r\n\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_POST_RESPONSE = 'ADD_POST_RESPONSE';\r\nexport const ERROR_ADDING_POST = 'ERROR_ADDING_POST';\r\n\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const RESET_POSTS = 'RESET_POSTS';\r\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS';\r\nexport const ERROR_RECEIVING_POSTS = 'ERROR_RECEIVING_POSTS';\r\n\r\nexport const LIKE_POST = 'LIKE_POST';\r\nexport const LIKE_POST_RESPONSE = 'LIKE_POST_RESPONSE';\r\nexport const ERROR_LIKING_POST = 'ERROR_LIKING_POST';\r\n\r\n//*********************************ADD_POST********************************************* */\r\nexport const addPost = () => ({\r\n    type: ADD_POST\r\n});\r\n\r\nexport const addPostResponse = (data) => ({\r\n    type: ADD_POST_RESPONSE,\r\n    data: data\r\n});\r\n\r\nexport const errorAddingPost = (error) => ({\r\n    type: ERROR_ADDING_POST,\r\n    error: error\r\n});\r\n\r\n//********************************END:: ADD_POST ::END***************************************** */\r\n\r\n//*********************************LIKE_POST**************************************************** */\r\nexport const likePost = () => ({\r\n    type: LIKE_POST\r\n});\r\n\r\nexport const likePostResponse = (data) => ({\r\n    type: LIKE_POST_RESPONSE,\r\n    data: data\r\n});\r\n\r\nexport const errorLikingPost = (error) => ({\r\n    type: ERROR_LIKING_POST,\r\n    error: error\r\n});\r\n//********************************END:: LIKE_POST ::END************************************* */\r\n\r\n//*********************************GET_POSTS********************************************* */\r\nexport const getPosts = (categoryId) => ({\r\n    type: GET_POSTS,\r\n    categoryId: categoryId\r\n});\r\n\r\nexport const resetPosts = () => ({\r\n    type: RESET_POSTS,\r\n});\r\n\r\nexport const receivePosts = (data) => ({\r\n    type: RECEIVE_POSTS,\r\n    data: data\r\n});\r\n\r\nexport const errorReceivingPosts = (error) => ({\r\n    type: ERROR_RECEIVING_POSTS,\r\n    error: error\r\n});\r\n\r\n//********************************END:: GET_POSTS ::END***************************************** */\r\n\r\nexport function sendPost(categoryId, post) {\r\n    var url = BASE_URL_PostsAPI + 'Posts/' + categoryId;\r\n    return dispatch => {\r\n        dispatch(addPost());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(post),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(addPostResponse(json));\r\n            }).catch(err => {\r\n                dispatch(errorAddingPost(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function fetchGetPosts(categoryId, body) {\r\n    var url = BASE_URL_PostsAPI + 'Posts/' + categoryId + '/query';\r\n    return dispatch => {\r\n        dispatch(getPosts(categoryId));\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(receivePosts(json));\r\n            }).catch(err => {\r\n                dispatch(errorReceivingPosts(err));\r\n            });\r\n    }\r\n}\r\n\r\nexport function likePostById(postId, user) {\r\n    var url = BASE_URL_PostsAPI + 'Posts/likes/' + postId;\r\n    return dispatch => {\r\n        dispatch(likePost());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(likePostResponse(json));\r\n            }).catch(err => {\r\n                dispatch(errorLikingPost(err));\r\n            });\r\n    }\r\n}","// Imports: Dependencies\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n//import screens\r\nimport ActivitySpinner from './ActivitySpinner'\r\nimport PostCard from './PostCard';\r\n\r\n// Imports: Redux Actions\r\nimport { fetchGetPosts, sendPost, resetPosts } from '../redux/actions/postActions';\r\nimport { addUpdateUser } from '../redux/actions/userActions';\r\nimport { uploadFileToStorage } from '../redux/actions/uploadActions';\r\n\r\n// Screen: Comments\r\nclass Posts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileUpload = React.createRef();\r\n        this.showFileUpload = this.showFileUpload.bind(this);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.state = {\r\n            postText: '',\r\n            fileIsAttached: false,\r\n            fileName: '',\r\n            documentObject: {},\r\n            addPostPending: false,\r\n            noMorePosts: false\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        if (this.props.isFetchingPosts === true && this.props.posts.length === 0) {\r\n            return (\r\n                <ActivitySpinner />\r\n            )\r\n        } else {\r\n\r\n            const coursesView = this.props.posts.map((resultValue) => {\r\n                return (\r\n                    <PostCard key={'card_' + resultValue.id} post={resultValue} />\r\n                )\r\n            });\r\n            const { params } = this.props.match;\r\n            return (\r\n                <Fragment>\r\n                    <span style={{ fontWeight: 'bold', fontSize: 20, backgroundColor: '#f9ecf2' }}>{params.code}.</span>\r\n                    <Divider />\r\n                    <br />\r\n                    <div>\r\n                        {\r\n                            //***************************START :: ADD POST :: START************************************************* */\r\n                        }\r\n                        {(this.state.addPostPending === false) &&\r\n                            <div>\r\n                                <TextField\r\n                                    id=\"standard-full-width\"\r\n                                    label=\"\"\r\n                                    style={{ margin: 8 }}\r\n                                    placeholder=\"Add your post...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                    rows=\"4\"\r\n                                    margin=\"normal\"\r\n                                    onChange={(text) => this.onChangeText(text)}\r\n                                    value={this.state.postText}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n\r\n                                {(this.state.fileIsAttached === false) &&\r\n                                    <React.Fragment>\r\n                                        <div>\r\n                                            <input style={{ display: \"none\" }} id=\"postFileId\" type=\"file\" ref={this.fileUpload} onChange={this.onFileChange} />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <Chip\r\n                                                icon={<AttachmentIcon />}\r\n                                                label=\"attach file(image/pdf/video/etc)\"\r\n                                                clickable\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                onClick={() => { this.showFileUpload() }}\r\n                                            />\r\n                                        </div>\r\n                                    </React.Fragment>\r\n                                }\r\n\r\n                                {(this.state.fileIsAttached === true) &&\r\n                                    <React.Fragment>\r\n                                        <Chip\r\n                                            icon={<AttachmentIcon />}\r\n                                            label={this.state.fileName}\r\n                                            onDelete={() => { this.removeFile() }}\r\n                                            color=\"secondary\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <span><br /></span>\r\n                                    </React.Fragment>\r\n                                }\r\n\r\n\r\n                                <div style={{ width: '50%' }}>\r\n                                    <span><br /></span>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => { this.sendPost() }}>\r\n                                        Add Post\r\n                                    </Button>\r\n                                </div>\r\n\r\n                                <br />\r\n                            </div>\r\n                        }\r\n                        {(this.state.addPostPending === true) &&\r\n\r\n                            <div>\r\n                                <span style={{ color: 'green', fontWeight: 'bold' }}>Adding your post...</span>\r\n                                <ActivitySpinner />\r\n                                {(this.state.fileIsAttached === true) &&\r\n                                    <span style={{ color: 'green', fontWeight: 'bold' }}>Attachment upload progress {this.props.percent}%...</span>\r\n                                }\r\n                            </div>\r\n                        }\r\n                        {\r\n                            //***************************END :: ADD POST :: END************************************************* */\r\n                        }\r\n\r\n                        <Divider />\r\n                        <div>\r\n                            <List>\r\n                                {coursesView}\r\n                            </List>\r\n                            {(this.props.isFetchingPosts === true && this.props.posts.length > 0) &&\r\n                                <ActivitySpinner />\r\n                            }\r\n                            <br />\r\n                            {(this.state.noMorePosts === false) &&\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => { this.loadMorePosts() }}>\r\n                                    LOAD MORE POSTS...\r\n                                </Button>\r\n                            }\r\n                            {(this.state.noMorePosts === true) &&\r\n                                <span>No more posts to show.</span>\r\n                            }\r\n                            <br />\r\n                        </div >\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    onFileChange(e) {\r\n        this.setState({ fileIsAttached: true, fileName: e.target.files[0].name, documentObject: e.target.files[0] })\r\n    }\r\n\r\n    showFileUpload() {\r\n        this.fileUpload.current.click();\r\n    }\r\n\r\n    removeFile() {\r\n        this.setState({ fileIsAttached: false, fileName: '' })\r\n    }\r\n\r\n    onChangeText(text) {\r\n        this.setState({ postText: text.target.value });\r\n    }\r\n\r\n    sendPost() {\r\n        if (this.state.postText.length < 1) {\r\n            return;\r\n        } else {\r\n            const { params } = this.props.match;\r\n            this.setState({ addPostPending: true })\r\n            if (this.state.fileIsAttached === false) {\r\n                this.props.sendPost(params.id, {\r\n                    body: this.state.postText,\r\n                    addedBy: this.props.user\r\n                }).then(() => {\r\n                    this.setState({ postText: '' })\r\n                    this.setState({ addPostPending: false })\r\n                })\r\n            } else {\r\n                this.props.uploadFileToStorage(this.state.documentObject)\r\n                    .then(() => {\r\n                        this.props.sendPost(params.id, {\r\n                            body: this.state.postText,\r\n                            addedBy: this.props.user,\r\n                            files: [this.props.uploadResponse]\r\n                        }).then(() => {\r\n                            this.setState({ postText: '', fileIsAttached: false, fileName: '', addPostPending: false })\r\n                        })\r\n                    });\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    loadMorePosts() {\r\n        if (this.props.posts.length === 50) {\r\n            const { params } = this.props.match;\r\n            var body = {\r\n                \"beforeDate\": this.props.posts[49].addedDate,\r\n                \"categoryId\": params.id,\r\n                \"lastN\": 50\r\n            }\r\n            this.props.fetchGetPosts(params.id, body);\r\n        } else {\r\n            this.setState({ noMorePosts: true })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        var body = {\r\n            \"beforeDate\": null,\r\n            \"categoryId\": params.id,\r\n            \"lastN\": 50\r\n        }\r\n        this.props.resetPosts();\r\n        this.props.fetchGetPosts(params.id, body);\r\n    }\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    container: {\r\n        margin: 1,\r\n        display: 'flex',\r\n        flexWrap: 'nowrap'\r\n    },\r\n    removeFileButton: {\r\n        fontSize: 13,\r\n        textAlign: 'center'\r\n    },\r\n    removeFileCustomBtnBG: {\r\n        backgroundColor: \"#ffe0b3\",\r\n        borderRadius: 3,\r\n        alignSelf: 'flex-start',\r\n        borderRadius: 10,\r\n        height: 23\r\n    },\r\n    addModuleButton: {\r\n        fontSize: 13,\r\n        textAlign: 'center'\r\n    },\r\n    addModuleCustomBtnBG: {\r\n        backgroundColor: \"#ffe0b3\",\r\n        borderRadius: 3,\r\n        alignItems: 'center',\r\n        borderRadius: 10,\r\n        width: 220,\r\n        alignSelf: 'flex-end',\r\n        height: 23\r\n    },\r\n});\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        posts: state.postReducer.posts,\r\n        isFetchingPosts: state.postReducer.isFetchingPosts,\r\n        addPostPending: state.postReducer.addPostPending,\r\n        user: state.userReducer.user,\r\n        uploadResponse: state.uploadReducer.response,\r\n        percent: state.uploadReducer.percent,\r\n        isUploadingFile: state.uploadReducer.isFetching\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        fetchGetPosts: (categoryId, body) => dispatch(fetchGetPosts(categoryId, body)),\r\n        sendPost: (categoryId, body) => dispatch(sendPost(categoryId, body)),\r\n        addUpdateUser: (user) => dispatch(addUpdateUser(user)),\r\n        uploadFileToStorage: (obj) => dispatch(uploadFileToStorage(obj)),\r\n        resetPosts: (categoryId) => dispatch(resetPosts(categoryId))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Posts));","\r\nimport { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const ADD_UPDATE_USER = 'ADD_UPDATE_USER';\r\n\r\nexport const addUpdateUser = (user) => ({\r\n    type: ADD_UPDATE_USER,\r\n    user: user\r\n});\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Iframe from 'react-iframe'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// Screen: GenericFileCard\r\nclass GenericFileCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            iFrameHeight: '300px'\r\n        }\r\n    }\r\n    render() {\r\n        const { params } = this.props.match;\r\n        return (\r\n            <div style={{ height: '100%' }}>\r\n                <Iframe url={'http://sitholewb.co.za/FilesAPI/api/Storage/' + params.id + '/view'}\r\n                    width=\"100%\"\r\n                    height={this.state.iFrameHeight}\r\n                    id=\"myId\"\r\n                    display=\"block\"\r\n                    allowFullScreen={true}\r\n                    position=\"relative\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            this.setState({ iFrameHeight: window.innerHeight + 'px' });\r\n        } catch{\r\n            this.setState({ iFrameHeight: '400px' });\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n// Styles\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    }\r\n});\r\nexport default withStyles(styles)(GenericFileCard);","// Imports: Dependencies\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AdSense from 'react-adsense';\r\n//import screens\r\nimport PostCard from './PostCard';\r\n\r\n// Imports: Redux Actions\r\nimport { addBookmark, removeBookmark, removeAllBookmark } from '../redux/actions/bookmarkActions';\r\n\r\n// Screen: Comments\r\nclass Bookmarks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextStartLoadDate: null,\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const postsView = this.props.bookmarkedPosts.map((resultValue) => {\r\n            return (\r\n                <div key={'post_view_' + resultValue.id}>\r\n                    <PostCard post={resultValue} />\r\n                </div>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <span style={{ fontWeight: 'bold', fontSize: 20, backgroundColor: '#f9ecf2' }}>Posts you bookmarked.</span>\r\n                <Divider />\r\n                <br />\r\n                {postsView}\r\n                <AdSense.Google\r\n  client='ca-pub-7292810486004926'\r\n  slot='7806394673'\r\n/>\r\n            </div >\r\n        )\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n}\r\n\r\n// Styles\r\n\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        bookmarkedPosts: state.bookmarkReducer.bookmarkedPosts,\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        addBookmark: (post) => dispatch(addBookmark(post)),\r\n        removeBookmark: (postId) => dispatch(removeBookmark(postId)),\r\n        removeAllBookmark: () => dispatch(removeAllBookmark())\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Bookmarks);","// Imports: Dependencies\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// Imports: Redux Actions\r\nimport { reportTimetableError } from '../redux/actions/feedbackActions';\r\n\r\n//import screens\r\nimport ActivitySpinner from './ActivitySpinner'\r\n\r\nclass Feedback extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedId: '',\r\n            feedbackText: '',\r\n            isLoading: false,\r\n            snackbarText: '',\r\n            showSnackbar: false\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.isLoading === true) {\r\n            return (\r\n                <ActivitySpinner />\r\n            )\r\n        } else {\r\n            const { classes } = this.props;\r\n            const coursesView = this.props.courses.map((resultValue) => {\r\n                return (\r\n                    <div key={'view_' + resultValue.id}>\r\n                        <span key={'span_' + resultValue.id}>\r\n                            <ListItem className={classes.listItem} key={resultValue.id} dense button>\r\n                                <ListItemText id={'text_' + resultValue.id}\r\n                                    primary={resultValue.code}\r\n                                    secondary={resultValue.name}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => { this.selectModuleToReport(resultValue.id) }}>\r\n                                        Report\r\n                                    </Button>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <br />\r\n                        </span>\r\n                        {(this.state.selectedId === resultValue.id) &&\r\n                            <React.Fragment>\r\n                                <Divider />\r\n                                <TextField\r\n                                    id=\"standard-full-width\"\r\n                                    label=\"\"\r\n                                    style={{ margin: 8 }}\r\n                                    placeholder=\"Type here...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                    rows=\"4\"\r\n                                    margin=\"normal\"\r\n                                    onChange={(text) => this.onChangeSearchText(text)}\r\n                                    value={this.state.feedbackText}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => this.sendFeedBack(resultValue)}>\r\n                                    Send\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        }\r\n                    </div>\r\n                )\r\n            });\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    <Snackbar\r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                        key={'feedback_snackbar'}\r\n                        open={this.state.showSnackbar}\r\n                        onClose={() => { this.handleClose() }}\r\n                        message={this.state.snackbarText}\r\n                        autoHideDuration={3000}\r\n                        action={\r\n                            <React.Fragment>\r\n                                <Button color=\"secondary\" size=\"small\" onClick={() => { this.handleClose() }}>\r\n                                    DISMISS\r\n                                </Button>\r\n                                <IconButton\r\n                                    aria-label=\"close\"\r\n                                    color=\"inherit\"\r\n                                    onClick={() => { this.handleClose() }}\r\n                                >\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n\r\n                    <span style={{ fontWeight: 'bold', fontSize: 20 }}> Your feedback is highly appreciated.</span>\r\n                    <Divider />\r\n                    <div key={'view_feedback'}>\r\n                        <span key={'view_listItem_feedback'}>\r\n                            <ListItem className={classes.listItem} key={'ListItem_feedback'} dense button>\r\n                                <ListItemText id={'text_ListItem_feedback'}\r\n                                    primary={'General Feedback/Request'}\r\n                                    secondary={'General Feedback/Request for this App.'}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => { this.selectModuleToReport('general') }}>\r\n                                        Report\r\n                                    </Button>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <br />\r\n                        </span>\r\n                        {(this.state.selectedId === 'general') &&\r\n                            <React.Fragment>\r\n                                <Divider />\r\n                                <TextField\r\n                                    id=\"standard-full-width\"\r\n                                    label=\"\"\r\n                                    style={{ margin: 8 }}\r\n                                    placeholder=\"Type here...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                    rows=\"4\"\r\n                                    margin=\"normal\"\r\n                                    onChange={(text) => this.onChangeSearchText(text)}\r\n                                    value={this.state.feedbackText}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => this.sendFeedBack({ code: 'General' })}>\r\n                                    Send\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        }\r\n                    </div>\r\n                    <List>\r\n                        {coursesView}\r\n                    </List>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n    showSnackbar(text) {\r\n        this.setState({ showSnackbar: true, snackbarText: text });\r\n    };\r\n\r\n    handleClose() {\r\n        this.setState({ showSnackbar: false, snackbarText: '' });\r\n    };\r\n    onChangeSearchText(text) {\r\n        this.setState({ feedbackText: text.target.value });\r\n    }\r\n\r\n    selectModuleToReport(id) {\r\n        this.setState({ selectedId: id, feedbackText: '' });\r\n    }\r\n\r\n    sendFeedBack(feedbackFor) {\r\n        if (this.state.feedbackText.length < 4) {\r\n            this.showSnackbar('Input must be at least 4 letters');\r\n            return;\r\n        }\r\n\r\n        var obj = {\r\n            requestType: 'Feedback',\r\n            title: feedbackFor.code,\r\n            body: this.state.feedbackText,\r\n            universityId: this.props.university.id\r\n        };\r\n        this.setState({ isLoading: true });\r\n        this.props.reportTimetableError(obj).then(() => {\r\n            this.setState({ feedbackText: '', isLoading: false, selectedId: '' });\r\n            this.showSnackbar('Report/Feedback sent successfully.');\r\n        });\r\n    }\r\n\r\n}\r\n\r\n// Styles\r\nconst useStyles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'row',\r\n    },\r\n    mainContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: 'white',\r\n        flexDirection: 'column',\r\n        alignItems: 'stretch',\r\n    },\r\n    listItem: {\r\n        width: '100%',\r\n        backgroundColor: '#f9ecf2'\r\n    },\r\n});\r\n\r\n\r\n\r\n// Map State To Props (Redux Store Passes State To Component)\r\nconst mapStateToProps = (state) => {\r\n    // Redux Store --> Component\r\n    return {\r\n        courses: state.calenderReducer.courses,\r\n        university: state.calenderReducer.university\r\n    };\r\n};\r\n\r\n// Map Dispatch To Props (Dispatch Actions To Reducers. Reducers Then Modify The Data And Assign It To Your Props)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    // Action\r\n    return {\r\n        reportTimetableError: (body) => dispatch(reportTimetableError(body))\r\n    };\r\n};\r\n\r\n// Exports\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(Feedback));","import { BASE_URL_CoursesAPI } from '../../shared/Urls'\r\n\r\nexport const POST_FEEDBACK = 'POST_FEEDBACK';\r\nexport const POST_FEEDBACK_RESPONSE = 'POST_FEEDBACK_RESPONSE';\r\nexport const ERROR_POSTING_FEEDBACK = 'ERROR_POSTING_FEEDBACK';\r\n\r\nexport const postFeedback = () => ({\r\n    type: POST_FEEDBACK\r\n});\r\n\r\nexport const postFeedbackResponse = (data) => ({\r\n    type: POST_FEEDBACK_RESPONSE,\r\n    data: data\r\n});\r\n\r\nexport const errorPostingFeedback = (error) => ({\r\n    type: ERROR_POSTING_FEEDBACK,\r\n    error: error\r\n});\r\n\r\nexport function reportTimetableError(body) {\r\n    var url = BASE_URL_CoursesAPI + 'StudentRequests';\r\n    return dispatch => {\r\n        dispatch(postFeedback());\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch(postFeedbackResponse(json));\r\n            }).catch(err => {\r\n                dispatch(errorPostingFeedback(err));\r\n            });\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport EditIcon from '@material-ui/icons/Edit';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport { Link, HashRouter } from 'react-router-dom';\n\nimport Timetable from './screens/Timetable';\nimport PeriodDetails from './screens/PeriodDetails';\nimport University from './screens/University';\nimport Campus from './screens/Campus';\nimport Course from './screens/Course';\nimport Chats from './screens/Chats';\nimport Notes from './screens/Notes';\nimport Posts from './screens/Posts';\nimport GenericFileCard from './screens/GenericFileCard';\nimport Bookmarks from './screens/Bookmarks';\nimport Feedback from './screens/Feedback';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: 0,\n      period: {}\n    }\n  }\n\n  changeValue(newValue) {\n    this.setState({ value: newValue })\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <Route exact path=\"/\" component={Timetable} />\n        <Route exact path=\"/PeriodDetails/:id\" component={PeriodDetails} />\n        <Route exact path=\"/University\" component={University} />\n        <Route path=\"/Campus/:id\" component={Campus} />\n        <Route path=\"/institutions/:id/type/:routeType\" component={Course} />\n        <Route path=\"/Chats\" component={Chats} />\n        <Route path=\"/Notes\" component={Notes} />\n        <Route path=\"/Posts/:id/code/:code\" component={Posts} />\n        <Route path=\"/file/:id/view\" component={GenericFileCard} />\n        <Route path=\"/Bookmarks\" component={Bookmarks} />\n        <Route path=\"/Feedback\" component={Feedback} />\n\n        <BottomNavigation\n          showLabels\n          value={this.state.value}\n          style={{\n            width: '100%',\n            position: 'fixed',\n            bottom: 0,\n          }}\n        >\n\n          <BottomNavigationAction\n            component={Link}\n            to=\"/\"\n            label=\"Timetable\"\n            icon={<ScheduleIcon />}\n            onClick={() => { this.changeValue(0) }}\n          />\n\n          <BottomNavigationAction\n            component={Link}\n            to=\"/Chats\"\n            label=\"Chats\"\n            icon={<ForumIcon />}\n            onClick={() => { this.changeValue(1) }}\n          />\n\n          <BottomNavigationAction\n            component={Link}\n            to=\"/Notes\"\n            label=\"Notes\"\n            icon={<EditIcon />}\n            onClick={() => { this.changeValue(2) }}\n          />\n\n          <BottomNavigationAction\n            component={Link}\n            to=\"/Bookmarks\"\n            label=\"Bookmarks\"\n            icon={<BookmarkIcon />}\n            onClick={() => { this.changeValue(3) }}\n          />\n        </BottomNavigation>\n\n\n      </HashRouter>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  REQUEST_CALENDER,\r\n  RECEIVE_CALENDER,\r\n  ERROR_REQUESTING_CALENDER,\r\n  ADD_MODULE,\r\n  REMOVE_MODULE,\r\n  GET_CALENDER,\r\n  REMOVE_PERIOD,\r\n  RESOLVE_CONFLICT,\r\n  ERROR_RECEIVING_MODULES,\r\n  RECEIVE_MODULES,\r\n  SEARCH_MODULES,\r\n  GET_UNREAD_MESSAGES_COUNT,\r\n  SET_UNIVERSITY,\r\n  REPORT_CALENDER\r\n} from '../actions/calenderActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  timetable: [],\r\n  courses: [],\r\n  university: {\r\n    id: '0000-0000-000000000000',\r\n    name: 'Your Institution',\r\n    adsDetails: {\r\n      bannerAd: 'ca-app-pub-5631714136940575/3298705317',\r\n      nativeAdvancedAd: 'ca-app-pub-5631714136940575/4838053665'\r\n    }\r\n  },\r\n  campusId: '',\r\n  mustRefreshCalender: true,\r\n  error: '',\r\n  hasHttpError: false,\r\n  isFetching: false,\r\n  isSearching: false,\r\n  hasErrorSearching: false,\r\n  searchResults: []\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst calenderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case ERROR_RECEIVING_MODULES: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasErrorSearching: true,\r\n        isSearching: false\r\n      }\r\n    }\r\n\r\n    case SEARCH_MODULES: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasErrorSearching: false,\r\n        isSearching: true\r\n      }\r\n    }\r\n\r\n    case RECEIVE_MODULES: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        searchResults: action.data,\r\n        hasErrorSearching: false,\r\n        isSearching: false\r\n      }\r\n    }\r\n\r\n    //****************************************************************************************** */\r\n    case REQUEST_CALENDER: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        mustRefreshCalender: true,\r\n        hasHttpError: false,\r\n        isFetching: true\r\n      }\r\n    }\r\n\r\n    case GET_CALENDER: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        searchResults: [],\r\n        mustRefreshCalender: false,\r\n        hasHttpError: false,\r\n        isFetching: true\r\n      }\r\n    }\r\n\r\n    case RECEIVE_CALENDER: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        mustRefreshCalender: false,\r\n        timetable: action.data,\r\n        hasHttpError: false,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    case ERROR_REQUESTING_CALENDER: {\r\n      return {\r\n        ...state,\r\n        mustRefreshCalender: true,\r\n        error: action.error,\r\n        hasHttpError: true,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    case ADD_MODULE: {\r\n      return {\r\n        ...state,\r\n        mustRefreshCalender: true,\r\n        courses: [...state.courses, action.course]\r\n      }\r\n    }\r\n\r\n    case GET_UNREAD_MESSAGES_COUNT: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n\r\n    case SET_UNIVERSITY: {\r\n      return {\r\n        ...state,\r\n        university: action.university\r\n      }\r\n    }\r\n\r\n    case REMOVE_MODULE: {\r\n      return {\r\n        ...state,\r\n        mustRefreshCalender: true,\r\n        courses: state.courses.filter(item => item.id !== action.courseId),\r\n      }\r\n    }\r\n\r\n    case REMOVE_PERIOD: {\r\n      return {\r\n        ...state,\r\n        mustRefreshCalender: false,\r\n        timetable: removePeriod(state.timetable, action.periodId)\r\n      }\r\n    }\r\n\r\n    case RESOLVE_CONFLICT: {\r\n      return {\r\n        ...state,\r\n        mustRefreshCalender: false,\r\n        timetable: getTimetableWithResolvedConflictForGivenPeriod(action.periodId, action.course, state.timetable),\r\n      }\r\n    }\r\n\r\n    // Default\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst removePeriod = (timetable, periodId) => {\r\n  var emptyPeriod = { isEmptySlot: true };\r\n  var slots = new Array();\r\n  timetable.forEach(element => {\r\n    slots.push(element);\r\n  });\r\n  for (var i = 0; i < slots.length; i++) {\r\n    if (slots[i].monday.periodId === periodId) {\r\n      slots[i].monday = emptyPeriod;\r\n      break;\r\n    }\r\n    if (slots[i].tuesday.periodId === periodId) {\r\n      slots[i].tuesday = emptyPeriod;\r\n      break;\r\n    }\r\n    if (slots[i].wednesday.periodId === periodId) {\r\n      slots[i].wednesday = emptyPeriod;\r\n      break;\r\n    }\r\n    if (slots[i].thursday.periodId === periodId) {\r\n      slots[i].thursday = emptyPeriod;\r\n      break;\r\n    }\r\n    if (slots[i].friday.periodId === periodId) {\r\n      slots[i].friday = emptyPeriod;\r\n      break;\r\n    }\r\n  }\r\n  return slots;\r\n};\r\n\r\nconst getTimetableWithResolvedConflictForGivenPeriod = (periodId, course, timetable) => {\r\n  var slots = new Array();\r\n  timetable.forEach(element => {\r\n    slots.push(element);\r\n  });\r\n  for (var i = 0; i < slots.length; i++) {\r\n    if ((slots[i].monday.hasConflict === true || slots[i].monday.hasConflict === 'true')\r\n      && conflictsHasPeriodId(slots[i].monday.conflicts, periodId)) {\r\n      slots[i].monday = course;\r\n      break;\r\n    }\r\n    if ((slots[i].tuesday.hasConflict === true || slots[i].tuesday.hasConflict === 'true')\r\n      && conflictsHasPeriodId(slots[i].tuesday.conflicts, periodId)) {\r\n      slots[i].tuesday = course;\r\n      break;\r\n    }\r\n    if ((slots[i].wednesday.hasConflict === true || slots[i].wednesday.hasConflict === 'true')\r\n      && conflictsHasPeriodId(slots[i].wednesday.conflicts, periodId)) {\r\n      slots[i].wednesday = course;\r\n      break;\r\n    }\r\n    if ((slots[i].thursday.hasConflict === true || slots[i].thursday.hasConflict === 'true')\r\n      && conflictsHasPeriodId(slots[i].thursday.conflicts, periodId)) {\r\n      slots[i].thursday = course;\r\n      break;\r\n    }\r\n    if ((slots[i].friday.hasConflict === true || slots[i].friday.hasConflict === 'true')\r\n      && conflictsHasPeriodId(slots[i].friday.conflicts, periodId)) {\r\n      slots[i].friday = course;\r\n      break;\r\n    }\r\n  }\r\n  return slots;\r\n}\r\n\r\nconst conflictsHasPeriodId = (conflicts, periodId) => {\r\n  var isFound = false;\r\n  conflicts.forEach(element => {\r\n    if (element.periodId === periodId) {\r\n      isFound = true;\r\n    }\r\n  });\r\n  return isFound;\r\n};\r\n\r\n// Exports\r\nexport default calenderReducer;","import {\r\n    POST_FEEDBACK,\r\n    ERROR_POSTING_FEEDBACK,\r\n    POST_FEEDBACK_RESPONSE\r\n} from '../actions/feedbackActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  response: '',\r\n  error: '',\r\n  isFetching:false,\r\n  hasHttpError:false\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst feedbackReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case POST_FEEDBACK: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpError: false,\r\n        isFetching:true\r\n      }\r\n    }\r\n\r\n    case POST_FEEDBACK_RESPONSE: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        response: action.data,\r\n        hasHttpError: false,\r\n        isFetching:false\r\n      }\r\n    }\r\n\r\n    case ERROR_POSTING_FEEDBACK: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpError: true,\r\n        isFetching:false\r\n      }\r\n    }\r\n\r\n    // Default\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Exports\r\nexport default feedbackReducer;","import {\r\n  GET_CAMPUSES,\r\n  RECEIVE_CAMPUSES,\r\n  ERROR_GETTING_CAMPUSES\r\n} from '../actions/campusActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  error: '',\r\n  isFetching: false,\r\n  campuses:[]\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst campusesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case GET_CAMPUSES: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpError: false,\r\n        isFetching: true\r\n      }\r\n    }\r\n\r\n    case RECEIVE_CAMPUSES: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        campuses: action.data,\r\n        hasHttpError: false,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    case ERROR_GETTING_CAMPUSES: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpError: true,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    // Default\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Exports\r\nexport default campusesReducer;","import {\r\n  GET_UNIVERSITIES,\r\n  RECEIVE_UNIVERSITIES,\r\n  ERROR_GETTING_UNIVERSITIES\r\n} from '../actions/universityActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  error: '',\r\n  isFetching: false,\r\n  universities:[]\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst universitiesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case GET_UNIVERSITIES: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpError: false,\r\n        isFetching: true\r\n      }\r\n    }\r\n\r\n    case RECEIVE_UNIVERSITIES: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        universities: action.data,\r\n        hasHttpError: false,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    case ERROR_GETTING_UNIVERSITIES: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpError: true,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    // Default\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Exports\r\nexport default universitiesReducer;","import {\r\n    ADD_BOOKMARK,\r\n    REMOVE_BOOKMARK,\r\n    REMOVE_ALL_BOOKMARK\r\n} from '../actions/bookmarkActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n    bookmarkedPosts: [],\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst bookmarkReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_BOOKMARK: {\r\n            return {\r\n                ...state,\r\n                bookmarkedPosts: [...state.bookmarkedPosts, action.post],\r\n            }\r\n        }\r\n\r\n        case REMOVE_BOOKMARK: {\r\n            return {\r\n                ...state,\r\n                bookmarkedPosts: state.bookmarkedPosts.filter(item => item.id !== action.postId),\r\n            }\r\n        }\r\n\r\n        case REMOVE_ALL_BOOKMARK: {\r\n            return {\r\n                ...state,\r\n                bookmarkedPosts: [],\r\n            }\r\n        }\r\n\r\n        // Default\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// Exports\r\nexport default bookmarkReducer;","import {\r\n    UPLOAD_FILE,\r\n    UPLOAD_FILE_RESPONSE,\r\n    UPLOAD_FILE_PROGRESS,\r\n    ERROR_UPLOADING_FILE\r\n} from '../actions/uploadActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n    response: '',\r\n    error: '',\r\n    isFetching: false,\r\n    hasHttpError: false,\r\n    percent:0\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst uploadReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case UPLOAD_FILE: {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                hasHttpError: false,\r\n                isFetching: true\r\n            }\r\n        }\r\n\r\n        case UPLOAD_FILE_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                hasHttpError: false,\r\n                isFetching: true,\r\n                percent: action.percent\r\n            }\r\n        }\r\n\r\n        case UPLOAD_FILE_RESPONSE: {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                response: action.data,\r\n                hasHttpError: false,\r\n                isFetching: false\r\n            }\r\n        }\r\n\r\n        case ERROR_UPLOADING_FILE: {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                hasHttpError: true,\r\n                isFetching: false\r\n            }\r\n        }\r\n\r\n        // Default\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// Exports\r\nexport default uploadReducer;","import {\r\n    POST_COMMENT,\r\n    POST_COMMENT_RESPONSE,\r\n    ERROR_POSTING_COMMENT,\r\n    GET_COMMENTS,\r\n    RECEIVE_COMMENTS,\r\n    ERROR_RECEIVING_COMMENTS,\r\n    LIKE_COMMENT,\r\n    LIKE_COMMENT_RESPONSE,\r\n    ERROR_LIKING_COMMENT\r\n} from '../actions/commentActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  comments: [],\r\n  response:'',\r\n  error: '',\r\n  isFetchingComments:false,\r\n  hasHttpErrorFetchingComments: false,\r\n  likeCommentPendingResponse:false,\r\n  hasHttpErrorLikingComment: false,\r\n  postCommentPending:false,\r\n  hasHttpErrorPostingComment: false  \r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst commentReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    //*********************************POST_COMMENT********************************************* */\r\n    case POST_COMMENT: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorPostingComment: false,\r\n        postCommentPending:true\r\n      }\r\n    }\r\n\r\n    case POST_COMMENT_RESPONSE: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        response: action.data,\r\n        hasHttpErrorPostingComment: false,\r\n        postCommentPending:false\r\n      }\r\n    }\r\n\r\n    case ERROR_POSTING_COMMENT: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpErrorPostingComment: true,\r\n        postCommentPending:false\r\n      }\r\n    }\r\n    //********************************END:: POST_COMMENT ::END***************************************** */\r\n    //*********************************GET_COMMENTS********************************************* */\r\n    case GET_COMMENTS: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorFetchingComments: false,\r\n        isFetchingComments:true\r\n      }\r\n    }\r\n\r\n    case RECEIVE_COMMENTS: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        comments: action.data,\r\n        hasHttpErrorFetchingComments: false,\r\n        isFetchingComments:false\r\n      }\r\n    }\r\n\r\n    case ERROR_RECEIVING_COMMENTS: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpErrorFetchingComments: true,\r\n        isFetchingComments:false\r\n      }\r\n    }\r\n    //********************************END:: POST_COMMENT ::END***************************************** */\r\n    //*********************************LIKE_COMMENT**************************************************** */\r\n\r\n    case LIKE_COMMENT: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorLikingComment: false,\r\n        likeCommentPendingResponse:true\r\n      }\r\n    }\r\n\r\n    case LIKE_COMMENT_RESPONSE: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorLikingComment: false,\r\n        likeCommentPendingResponse:false\r\n      }\r\n    }\r\n\r\n    case ERROR_LIKING_COMMENT: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpErrorLikingComment: true,\r\n        likeCommentPendingResponse:false\r\n      }\r\n    }\r\n    //********************************END:: LIKE_COMMENT ::END**************************************** */\r\n    // Default\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Exports\r\nexport default commentReducer;","import {\r\n  ADD_POST,\r\n  ADD_POST_RESPONSE,\r\n  ERROR_ADDING_POST,\r\n  GET_POSTS,\r\n  RECEIVE_POSTS,\r\n  ERROR_RECEIVING_POSTS,\r\n  LIKE_POST,\r\n  LIKE_POST_RESPONSE,\r\n  ERROR_LIKING_POST,\r\n  RESET_POSTS\r\n} from '../actions/postActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  posts: [],\r\n  response: '',\r\n  error: '',\r\n  isFetchingPosts: false,\r\n  hasHttpErrorFetchingPosts: false,\r\n  likePostPendingResponse: false,\r\n  hasHttpErrorLikingPost: false,\r\n  addPostPending: false,\r\n  hasHttpErrorAddingPost: false,\r\n  categoryId: ''\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    //*********************************ADD_POST********************************************* */\r\n    case ADD_POST: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorAddingPost: false,\r\n        addPostPending: true\r\n      }\r\n    }\r\n\r\n    case ADD_POST_RESPONSE: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        posts: [action.data, ...state.posts],\r\n        hasHttpErrorAddingPost: false,\r\n        addPostPending: false\r\n      }\r\n    }\r\n\r\n    case ERROR_ADDING_POST: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpErrorAddingPost: true,\r\n        addPostPending: false\r\n      }\r\n    }\r\n    //********************************END:: ADD_POST ::END***************************************** */\r\n    //*********************************GET_POSTS********************************************* */\r\n    case GET_POSTS: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorFetchingPosts: false,\r\n        isFetchingPosts: true,\r\n        categoryId: action.categoryId\r\n      }\r\n    }\r\n\r\n    case RESET_POSTS: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        posts: []\r\n      }\r\n    }\r\n\r\n    case RECEIVE_POSTS: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        posts: appendOrReplacePosts(state.posts, action.data),\r\n        hasHttpErrorFetchingPosts: false,\r\n        isFetchingPosts: false\r\n      }\r\n    }\r\n\r\n    case ERROR_RECEIVING_POSTS: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpErrorFetchingPosts: true,\r\n        isFetchingPosts: false\r\n      }\r\n    }\r\n    //********************************END:: GET_POSTS ::END***************************************** */\r\n    //*********************************LIKE_POST**************************************************** */\r\n\r\n    case LIKE_POST: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        hasHttpErrorLikingPost: false,\r\n        likePostPendingResponse: true\r\n      }\r\n    }\r\n\r\n    case LIKE_POST_RESPONSE: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        response: action.data,\r\n        hasHttpErrorLikingPost: false,\r\n        likePostPendingResponse: false\r\n      }\r\n    }\r\n\r\n    case ERROR_LIKING_POST: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        hasHttpErrorLikingPost: true,\r\n        likePostPendingResponse: false\r\n      }\r\n    }\r\n    //********************************END:: LIKE_POST ::END**************************************** */\r\n    // Default\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst appendOrReplacePosts = (oldPosts, newPosts) => {\r\n  if (oldPosts.length > 0 && newPosts.length > 0) {\r\n    if (oldPosts[0].categoryId === newPosts[0].categoryId) {\r\n      return [...oldPosts, ...newPosts];\r\n    } else {\r\n      return [...newPosts];\r\n    }\r\n  } else if (newPosts.length > 0) {\r\n    return [...newPosts];\r\n  } else {\r\n    return [...oldPosts];\r\n  }\r\n};\r\n\r\n// Exports\r\nexport default postReducer;","import {\r\n    ADD_NOTE,\r\n    REMOVE_NOTE,\r\n    UPDATE_NOTE\r\n} from '../actions/noteActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n    notes: [],\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst noteReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_NOTE: {\r\n            return {\r\n                ...state,\r\n                notes: [...state.notes, action.data],\r\n            }\r\n        }\r\n\r\n        case UPDATE_NOTE: {\r\n            return {\r\n                ...state,\r\n                notes: updateNotes(state.notes, action.data),\r\n            }\r\n        }\r\n\r\n        case REMOVE_NOTE: {\r\n            return {\r\n                ...state,\r\n                notes: state.notes.filter(item => item.id !== action.noteId),\r\n            }\r\n        }\r\n\r\n        // Default\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nconst updateNotes = (notes, newNote) => {\r\n    let newNotes = [];\r\n    notes.forEach(element => {\r\n        if (element.id === newNote.id) {\r\n            newNotes.push(newNote);\r\n        } else {\r\n            newNotes.push(element);\r\n        }\r\n    });\r\n    return newNotes;\r\n};\r\n\r\n// Exports\r\nexport default noteReducer;","import {\r\n    ADD_UPDATE_USER\r\n} from '../actions/userActions'\r\n\r\n// Initial State\r\nconst initialState = {\r\n    user: {\r\n        fullnames: 'Anonymous User',\r\n        userId: 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        }) + '_random'\r\n    },\r\n};\r\n\r\n// Reducers (Modifies The State And Returns A New State)\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_UPDATE_USER: {\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n        }\r\n\r\n        // Default\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nconst createGuid = () => {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n};\r\n\r\n// Exports\r\nexport default userReducer;","// Imports: Dependencies\r\nimport { combineReducers } from 'redux';\r\n\r\n// Imports: Reducers\r\nimport calenderReducer from './calenderReducer';\r\nimport feedbackReducer from './feedbackReducer';\r\nimport campusesReducer from './campusesReducer';\r\nimport universitiesReducer from './universitiesReducer';\r\nimport bookmarkReducer from './bookmarkReducer';\r\nimport uploadReducer from './uploadReducer';\r\nimport commentReducer from './commentReducer';\r\nimport postReducer from './postReducer';\r\nimport noteReducer from './noteReducer';\r\nimport userReducer from './userReducer';\r\n\r\n// Redux: Root Reducer\r\nconst rootReducer = combineReducers({\r\n  calenderReducer: calenderReducer,\r\n  feedbackReducer: feedbackReducer,\r\n  campusesReducer: campusesReducer,\r\n  universitiesReducer: universitiesReducer,\r\n  bookmarkReducer: bookmarkReducer,\r\n  uploadReducer: uploadReducer,\r\n  commentReducer: commentReducer,\r\n  noteReducer: noteReducer,\r\n  postReducer: postReducer,\r\n  userReducer: userReducer\r\n});\r\n\r\n// Exports\r\nexport default rootReducer;","// Imports: Dependencies\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport localForage from \"localforage\";\r\n// Imports: Redux\r\nimport rootReducer from '../reducers/index';\r\n\r\n// Middleware: Redux Persist Config\r\nconst persistConfig = {\r\n  // Root?\r\n  key: 'root',\r\n  // Storage Method (React Native)\r\n  storage: localForage,\r\n  // Whitelist (Save Specific Reducers)\r\n  whitelist: [\r\n    'calenderReducer',\r\n    'bookmarkReducer',\r\n    'noteReducer',\r\n    'userReducer',\r\n  ],\r\n  // Blacklist (Don't Save Specific Reducers)\r\n  blacklist: [\r\n    'feedbackReducer',\r\n    'campusesReducer',\r\n    'universitiesReducer',\r\n    'commentReducer',\r\n    'postReducer',\r\n  ],\r\n};\r\n\r\n// Middleware: Redux Persist Persisted Reducer\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n// Redux: Store\r\nconst store = createStore(\r\n  persistedReducer,\r\n  applyMiddleware(\r\n    createLogger(),\r\n    thunk\r\n  ),\r\n);\r\n\r\n// Middleware: Redux Persist Persister\r\nlet persistor = persistStore(store);\r\n\r\n// Exports\r\nexport {\r\n  store,\r\n  persistor,\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store/store'\nimport { PersistGate } from 'redux-persist/es/integration/react'\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n            <span>\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n            </span>\n        </PersistGate>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}